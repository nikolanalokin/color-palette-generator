function _m(e,t){for(var n=0;n<t.length;n++){const r=t[n];if(typeof r!="string"&&!Array.isArray(r)){for(const i in r)if(i!=="default"&&!(i in e)){const o=Object.getOwnPropertyDescriptor(r,i);o&&Object.defineProperty(e,i,o.get?o:{enumerable:!0,get:()=>r[i]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();function km(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var P0={exports:{}},xl={},$0={exports:{}},D={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ei=Symbol.for("react.element"),Sm=Symbol.for("react.portal"),Mm=Symbol.for("react.fragment"),Cm=Symbol.for("react.strict_mode"),Em=Symbol.for("react.profiler"),Nm=Symbol.for("react.provider"),Tm=Symbol.for("react.context"),Pm=Symbol.for("react.forward_ref"),$m=Symbol.for("react.suspense"),zm=Symbol.for("react.memo"),Rm=Symbol.for("react.lazy"),lf=Symbol.iterator;function bm(e){return e===null||typeof e!="object"?null:(e=lf&&e[lf]||e["@@iterator"],typeof e=="function"?e:null)}var z0={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},R0=Object.assign,b0={};function vr(e,t,n){this.props=e,this.context=t,this.refs=b0,this.updater=n||z0}vr.prototype.isReactComponent={};vr.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};vr.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function L0(){}L0.prototype=vr.prototype;function Fs(e,t,n){this.props=e,this.context=t,this.refs=b0,this.updater=n||z0}var Ds=Fs.prototype=new L0;Ds.constructor=Fs;R0(Ds,vr.prototype);Ds.isPureReactComponent=!0;var uf=Array.isArray,A0=Object.prototype.hasOwnProperty,Hs={current:null},I0={key:!0,ref:!0,__self:!0,__source:!0};function O0(e,t,n){var r,i={},o=null,l=null;if(t!=null)for(r in t.ref!==void 0&&(l=t.ref),t.key!==void 0&&(o=""+t.key),t)A0.call(t,r)&&!I0.hasOwnProperty(r)&&(i[r]=t[r]);var u=arguments.length-2;if(u===1)i.children=n;else if(1<u){for(var a=Array(u),s=0;s<u;s++)a[s]=arguments[s+2];i.children=a}if(e&&e.defaultProps)for(r in u=e.defaultProps,u)i[r]===void 0&&(i[r]=u[r]);return{$$typeof:Ei,type:e,key:o,ref:l,props:i,_owner:Hs.current}}function Lm(e,t){return{$$typeof:Ei,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function js(e){return typeof e=="object"&&e!==null&&e.$$typeof===Ei}function Am(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(n){return t[n]})}var af=/\/+/g;function du(e,t){return typeof e=="object"&&e!==null&&e.key!=null?Am(""+e.key):t.toString(36)}function co(e,t,n,r,i){var o=typeof e;(o==="undefined"||o==="boolean")&&(e=null);var l=!1;if(e===null)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case Ei:case Sm:l=!0}}if(l)return l=e,i=i(l),e=r===""?"."+du(l,0):r,uf(i)?(n="",e!=null&&(n=e.replace(af,"$&/")+"/"),co(i,t,n,"",function(s){return s})):i!=null&&(js(i)&&(i=Lm(i,n+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(af,"$&/")+"/")+e)),t.push(i)),1;if(l=0,r=r===""?".":r+":",uf(e))for(var u=0;u<e.length;u++){o=e[u];var a=r+du(o,u);l+=co(o,t,n,a,i)}else if(a=bm(e),typeof a=="function")for(e=a.call(e),u=0;!(o=e.next()).done;)o=o.value,a=r+du(o,u++),l+=co(o,t,n,a,i);else if(o==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function Hi(e,t,n){if(e==null)return e;var r=[],i=0;return co(e,r,"","",function(o){return t.call(n,o,i++)}),r}function Im(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var $e={current:null},fo={transition:null},Om={ReactCurrentDispatcher:$e,ReactCurrentBatchConfig:fo,ReactCurrentOwner:Hs};function F0(){throw Error("act(...) is not supported in production builds of React.")}D.Children={map:Hi,forEach:function(e,t,n){Hi(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return Hi(e,function(){t++}),t},toArray:function(e){return Hi(e,function(t){return t})||[]},only:function(e){if(!js(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};D.Component=vr;D.Fragment=Mm;D.Profiler=Em;D.PureComponent=Fs;D.StrictMode=Cm;D.Suspense=$m;D.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Om;D.act=F0;D.cloneElement=function(e,t,n){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=R0({},e.props),i=e.key,o=e.ref,l=e._owner;if(t!=null){if(t.ref!==void 0&&(o=t.ref,l=Hs.current),t.key!==void 0&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(a in t)A0.call(t,a)&&!I0.hasOwnProperty(a)&&(r[a]=t[a]===void 0&&u!==void 0?u[a]:t[a])}var a=arguments.length-2;if(a===1)r.children=n;else if(1<a){u=Array(a);for(var s=0;s<a;s++)u[s]=arguments[s+2];r.children=u}return{$$typeof:Ei,type:e.type,key:i,ref:o,props:r,_owner:l}};D.createContext=function(e){return e={$$typeof:Tm,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:Nm,_context:e},e.Consumer=e};D.createElement=O0;D.createFactory=function(e){var t=O0.bind(null,e);return t.type=e,t};D.createRef=function(){return{current:null}};D.forwardRef=function(e){return{$$typeof:Pm,render:e}};D.isValidElement=js;D.lazy=function(e){return{$$typeof:Rm,_payload:{_status:-1,_result:e},_init:Im}};D.memo=function(e,t){return{$$typeof:zm,type:e,compare:t===void 0?null:t}};D.startTransition=function(e){var t=fo.transition;fo.transition={};try{e()}finally{fo.transition=t}};D.unstable_act=F0;D.useCallback=function(e,t){return $e.current.useCallback(e,t)};D.useContext=function(e){return $e.current.useContext(e)};D.useDebugValue=function(){};D.useDeferredValue=function(e){return $e.current.useDeferredValue(e)};D.useEffect=function(e,t){return $e.current.useEffect(e,t)};D.useId=function(){return $e.current.useId()};D.useImperativeHandle=function(e,t,n){return $e.current.useImperativeHandle(e,t,n)};D.useInsertionEffect=function(e,t){return $e.current.useInsertionEffect(e,t)};D.useLayoutEffect=function(e,t){return $e.current.useLayoutEffect(e,t)};D.useMemo=function(e,t){return $e.current.useMemo(e,t)};D.useReducer=function(e,t,n){return $e.current.useReducer(e,t,n)};D.useRef=function(e){return $e.current.useRef(e)};D.useState=function(e){return $e.current.useState(e)};D.useSyncExternalStore=function(e,t,n){return $e.current.useSyncExternalStore(e,t,n)};D.useTransition=function(){return $e.current.useTransition()};D.version="18.3.1";$0.exports=D;var F=$0.exports;const Fm=km(F),sf=_m({__proto__:null,default:Fm},[F]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Dm=F,Hm=Symbol.for("react.element"),jm=Symbol.for("react.fragment"),Bm=Object.prototype.hasOwnProperty,Um=Dm.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Wm={key:!0,ref:!0,__self:!0,__source:!0};function D0(e,t,n){var r,i={},o=null,l=null;n!==void 0&&(o=""+n),t.key!==void 0&&(o=""+t.key),t.ref!==void 0&&(l=t.ref);for(r in t)Bm.call(t,r)&&!Wm.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps,t)i[r]===void 0&&(i[r]=t[r]);return{$$typeof:Hm,type:e,key:o,ref:l,props:i,_owner:Um.current}}xl.Fragment=jm;xl.jsx=D0;xl.jsxs=D0;P0.exports=xl;var ti=P0.exports,Vm=!1;function Xm(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}function Qm(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),e.nonce!==void 0&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t.setAttribute("data-s",""),t}var qm=function(){function e(n){var r=this;this._insertTag=function(i){var o;r.tags.length===0?r.insertionPoint?o=r.insertionPoint.nextSibling:r.prepend?o=r.container.firstChild:o=r.before:o=r.tags[r.tags.length-1].nextSibling,r.container.insertBefore(i,o),r.tags.push(i)},this.isSpeedy=n.speedy===void 0?!Vm:n.speedy,this.tags=[],this.ctr=0,this.nonce=n.nonce,this.key=n.key,this.container=n.container,this.prepend=n.prepend,this.insertionPoint=n.insertionPoint,this.before=null}var t=e.prototype;return t.hydrate=function(r){r.forEach(this._insertTag)},t.insert=function(r){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(Qm(this));var i=this.tags[this.tags.length-1];if(this.isSpeedy){var o=Xm(i);try{o.insertRule(r,o.cssRules.length)}catch{}}else i.appendChild(document.createTextNode(r));this.ctr++},t.flush=function(){this.tags.forEach(function(r){var i;return(i=r.parentNode)==null?void 0:i.removeChild(r)}),this.tags=[],this.ctr=0},e}(),Ce="-ms-",$o="-moz-",B="-webkit-",H0="comm",Bs="rule",Us="decl",Gm="@import",j0="@keyframes",Ym="@layer",Km=Math.abs,wl=String.fromCharCode,Zm=Object.assign;function Jm(e,t){return xe(e,0)^45?(((t<<2^xe(e,0))<<2^xe(e,1))<<2^xe(e,2))<<2^xe(e,3):0}function B0(e){return e.trim()}function eg(e,t){return(e=t.exec(e))?e[0]:e}function U(e,t,n){return e.replace(t,n)}function ga(e,t){return e.indexOf(t)}function xe(e,t){return e.charCodeAt(t)|0}function ni(e,t,n){return e.slice(t,n)}function gt(e){return e.length}function Ws(e){return e.length}function ji(e,t){return t.push(e),e}function tg(e,t){return e.map(t).join("")}var _l=1,lr=1,U0=0,De=0,ae=0,xr="";function kl(e,t,n,r,i,o,l){return{value:e,root:t,parent:n,type:r,props:i,children:o,line:_l,column:lr,length:l,return:""}}function Er(e,t){return Zm(kl("",null,null,"",null,null,0),e,{length:-e.length},t)}function ng(){return ae}function rg(){return ae=De>0?xe(xr,--De):0,lr--,ae===10&&(lr=1,_l--),ae}function Ue(){return ae=De<U0?xe(xr,De++):0,lr++,ae===10&&(lr=1,_l++),ae}function wt(){return xe(xr,De)}function ho(){return De}function Ni(e,t){return ni(xr,e,t)}function ri(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function W0(e){return _l=lr=1,U0=gt(xr=e),De=0,[]}function V0(e){return xr="",e}function po(e){return B0(Ni(De-1,ya(e===91?e+2:e===40?e+1:e)))}function ig(e){for(;(ae=wt())&&ae<33;)Ue();return ri(e)>2||ri(ae)>3?"":" "}function og(e,t){for(;--t&&Ue()&&!(ae<48||ae>102||ae>57&&ae<65||ae>70&&ae<97););return Ni(e,ho()+(t<6&&wt()==32&&Ue()==32))}function ya(e){for(;Ue();)switch(ae){case e:return De;case 34:case 39:e!==34&&e!==39&&ya(ae);break;case 40:e===41&&ya(e);break;case 92:Ue();break}return De}function lg(e,t){for(;Ue()&&e+ae!==57;)if(e+ae===84&&wt()===47)break;return"/*"+Ni(t,De-1)+"*"+wl(e===47?e:Ue())}function ug(e){for(;!ri(wt());)Ue();return Ni(e,De)}function ag(e){return V0(mo("",null,null,null,[""],e=W0(e),0,[0],e))}function mo(e,t,n,r,i,o,l,u,a){for(var s=0,c=0,f=l,d=0,m=0,y=0,v=1,k=1,p=1,h=0,g="",x=i,w=o,S=r,_=g;k;)switch(y=h,h=Ue()){case 40:if(y!=108&&xe(_,f-1)==58){ga(_+=U(po(h),"&","&\f"),"&\f")!=-1&&(p=-1);break}case 34:case 39:case 91:_+=po(h);break;case 9:case 10:case 13:case 32:_+=ig(y);break;case 92:_+=og(ho()-1,7);continue;case 47:switch(wt()){case 42:case 47:ji(sg(lg(Ue(),ho()),t,n),a);break;default:_+="/"}break;case 123*v:u[s++]=gt(_)*p;case 125*v:case 59:case 0:switch(h){case 0:case 125:k=0;case 59+c:p==-1&&(_=U(_,/\f/g,"")),m>0&&gt(_)-f&&ji(m>32?ff(_+";",r,n,f-1):ff(U(_," ","")+";",r,n,f-2),a);break;case 59:_+=";";default:if(ji(S=cf(_,t,n,s,c,i,u,g,x=[],w=[],f),o),h===123)if(c===0)mo(_,t,S,S,x,o,f,u,w);else switch(d===99&&xe(_,3)===110?100:d){case 100:case 108:case 109:case 115:mo(e,S,S,r&&ji(cf(e,S,S,0,0,i,u,g,i,x=[],f),w),i,w,f,u,r?x:w);break;default:mo(_,S,S,S,[""],w,0,u,w)}}s=c=m=0,v=p=1,g=_="",f=l;break;case 58:f=1+gt(_),m=y;default:if(v<1){if(h==123)--v;else if(h==125&&v++==0&&rg()==125)continue}switch(_+=wl(h),h*v){case 38:p=c>0?1:(_+="\f",-1);break;case 44:u[s++]=(gt(_)-1)*p,p=1;break;case 64:wt()===45&&(_+=po(Ue())),d=wt(),c=f=gt(g=_+=ug(ho())),h++;break;case 45:y===45&&gt(_)==2&&(v=0)}}return o}function cf(e,t,n,r,i,o,l,u,a,s,c){for(var f=i-1,d=i===0?o:[""],m=Ws(d),y=0,v=0,k=0;y<r;++y)for(var p=0,h=ni(e,f+1,f=Km(v=l[y])),g=e;p<m;++p)(g=B0(v>0?d[p]+" "+h:U(h,/&\f/g,d[p])))&&(a[k++]=g);return kl(e,t,n,i===0?Bs:u,a,s,c)}function sg(e,t,n){return kl(e,t,n,H0,wl(ng()),ni(e,2,-2),0)}function ff(e,t,n,r){return kl(e,t,n,Us,ni(e,0,r),ni(e,r+1,-1),r)}function Kn(e,t){for(var n="",r=Ws(e),i=0;i<r;i++)n+=t(e[i],i,e,t)||"";return n}function cg(e,t,n,r){switch(e.type){case Ym:if(e.children.length)break;case Gm:case Us:return e.return=e.return||e.value;case H0:return"";case j0:return e.return=e.value+"{"+Kn(e.children,r)+"}";case Bs:e.value=e.props.join(",")}return gt(n=Kn(e.children,r))?e.return=e.value+"{"+n+"}":""}function fg(e){var t=Ws(e);return function(n,r,i,o){for(var l="",u=0;u<t;u++)l+=e[u](n,r,i,o)||"";return l}}function dg(e){return function(t){t.root||(t=t.return)&&e(t)}}function X0(e){var t=Object.create(null);return function(n){return t[n]===void 0&&(t[n]=e(n)),t[n]}}var hg=function(t,n,r){for(var i=0,o=0;i=o,o=wt(),i===38&&o===12&&(n[r]=1),!ri(o);)Ue();return Ni(t,De)},pg=function(t,n){var r=-1,i=44;do switch(ri(i)){case 0:i===38&&wt()===12&&(n[r]=1),t[r]+=hg(De-1,n,r);break;case 2:t[r]+=po(i);break;case 4:if(i===44){t[++r]=wt()===58?"&\f":"",n[r]=t[r].length;break}default:t[r]+=wl(i)}while(i=Ue());return t},mg=function(t,n){return V0(pg(W0(t),n))},df=new WeakMap,gg=function(t){if(!(t.type!=="rule"||!t.parent||t.length<1)){for(var n=t.value,r=t.parent,i=t.column===r.column&&t.line===r.line;r.type!=="rule";)if(r=r.parent,!r)return;if(!(t.props.length===1&&n.charCodeAt(0)!==58&&!df.get(r))&&!i){df.set(t,!0);for(var o=[],l=mg(n,o),u=r.props,a=0,s=0;a<l.length;a++)for(var c=0;c<u.length;c++,s++)t.props[s]=o[a]?l[a].replace(/&\f/g,u[c]):u[c]+" "+l[a]}}},yg=function(t){if(t.type==="decl"){var n=t.value;n.charCodeAt(0)===108&&n.charCodeAt(2)===98&&(t.return="",t.value="")}};function Q0(e,t){switch(Jm(e,t)){case 5103:return B+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return B+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return B+e+$o+e+Ce+e+e;case 6828:case 4268:return B+e+Ce+e+e;case 6165:return B+e+Ce+"flex-"+e+e;case 5187:return B+e+U(e,/(\w+).+(:[^]+)/,B+"box-$1$2"+Ce+"flex-$1$2")+e;case 5443:return B+e+Ce+"flex-item-"+U(e,/flex-|-self/,"")+e;case 4675:return B+e+Ce+"flex-line-pack"+U(e,/align-content|flex-|-self/,"")+e;case 5548:return B+e+Ce+U(e,"shrink","negative")+e;case 5292:return B+e+Ce+U(e,"basis","preferred-size")+e;case 6060:return B+"box-"+U(e,"-grow","")+B+e+Ce+U(e,"grow","positive")+e;case 4554:return B+U(e,/([^-])(transform)/g,"$1"+B+"$2")+e;case 6187:return U(U(U(e,/(zoom-|grab)/,B+"$1"),/(image-set)/,B+"$1"),e,"")+e;case 5495:case 3959:return U(e,/(image-set\([^]*)/,B+"$1$`$1");case 4968:return U(U(e,/(.+:)(flex-)?(.*)/,B+"box-pack:$3"+Ce+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+B+e+e;case 4095:case 3583:case 4068:case 2532:return U(e,/(.+)-inline(.+)/,B+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(gt(e)-1-t>6)switch(xe(e,t+1)){case 109:if(xe(e,t+4)!==45)break;case 102:return U(e,/(.+:)(.+)-([^]+)/,"$1"+B+"$2-$3$1"+$o+(xe(e,t+3)==108?"$3":"$2-$3"))+e;case 115:return~ga(e,"stretch")?Q0(U(e,"stretch","fill-available"),t)+e:e}break;case 4949:if(xe(e,t+1)!==115)break;case 6444:switch(xe(e,gt(e)-3-(~ga(e,"!important")&&10))){case 107:return U(e,":",":"+B)+e;case 101:return U(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+B+(xe(e,14)===45?"inline-":"")+"box$3$1"+B+"$2$3$1"+Ce+"$2box$3")+e}break;case 5936:switch(xe(e,t+11)){case 114:return B+e+Ce+U(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return B+e+Ce+U(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return B+e+Ce+U(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return B+e+Ce+e+e}return e}var vg=function(t,n,r,i){if(t.length>-1&&!t.return)switch(t.type){case Us:t.return=Q0(t.value,t.length);break;case j0:return Kn([Er(t,{value:U(t.value,"@","@"+B)})],i);case Bs:if(t.length)return tg(t.props,function(o){switch(eg(o,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Kn([Er(t,{props:[U(o,/:(read-\w+)/,":"+$o+"$1")]})],i);case"::placeholder":return Kn([Er(t,{props:[U(o,/:(plac\w+)/,":"+B+"input-$1")]}),Er(t,{props:[U(o,/:(plac\w+)/,":"+$o+"$1")]}),Er(t,{props:[U(o,/:(plac\w+)/,Ce+"input-$1")]})],i)}return""})}},xg=[vg],wg=function(t){var n=t.key;if(n==="css"){var r=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(r,function(v){var k=v.getAttribute("data-emotion");k.indexOf(" ")!==-1&&(document.head.appendChild(v),v.setAttribute("data-s",""))})}var i=t.stylisPlugins||xg,o={},l,u=[];l=t.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+n+' "]'),function(v){for(var k=v.getAttribute("data-emotion").split(" "),p=1;p<k.length;p++)o[k[p]]=!0;u.push(v)});var a,s=[gg,yg];{var c,f=[cg,dg(function(v){c.insert(v)})],d=fg(s.concat(i,f)),m=function(k){return Kn(ag(k),d)};a=function(k,p,h,g){c=h,m(k?k+"{"+p.styles+"}":p.styles),g&&(y.inserted[p.name]=!0)}}var y={key:n,sheet:new qm({key:n,container:l,nonce:t.nonce,speedy:t.speedy,prepend:t.prepend,insertionPoint:t.insertionPoint}),nonce:t.nonce,inserted:o,registered:{},insert:a};return y.sheet.hydrate(u),y};function va(){return va=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},va.apply(null,arguments)}var q0={exports:{}},q={};/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ye=typeof Symbol=="function"&&Symbol.for,Vs=ye?Symbol.for("react.element"):60103,Xs=ye?Symbol.for("react.portal"):60106,Sl=ye?Symbol.for("react.fragment"):60107,Ml=ye?Symbol.for("react.strict_mode"):60108,Cl=ye?Symbol.for("react.profiler"):60114,El=ye?Symbol.for("react.provider"):60109,Nl=ye?Symbol.for("react.context"):60110,Qs=ye?Symbol.for("react.async_mode"):60111,Tl=ye?Symbol.for("react.concurrent_mode"):60111,Pl=ye?Symbol.for("react.forward_ref"):60112,$l=ye?Symbol.for("react.suspense"):60113,_g=ye?Symbol.for("react.suspense_list"):60120,zl=ye?Symbol.for("react.memo"):60115,Rl=ye?Symbol.for("react.lazy"):60116,kg=ye?Symbol.for("react.block"):60121,Sg=ye?Symbol.for("react.fundamental"):60117,Mg=ye?Symbol.for("react.responder"):60118,Cg=ye?Symbol.for("react.scope"):60119;function Qe(e){if(typeof e=="object"&&e!==null){var t=e.$$typeof;switch(t){case Vs:switch(e=e.type,e){case Qs:case Tl:case Sl:case Cl:case Ml:case $l:return e;default:switch(e=e&&e.$$typeof,e){case Nl:case Pl:case Rl:case zl:case El:return e;default:return t}}case Xs:return t}}}function G0(e){return Qe(e)===Tl}q.AsyncMode=Qs;q.ConcurrentMode=Tl;q.ContextConsumer=Nl;q.ContextProvider=El;q.Element=Vs;q.ForwardRef=Pl;q.Fragment=Sl;q.Lazy=Rl;q.Memo=zl;q.Portal=Xs;q.Profiler=Cl;q.StrictMode=Ml;q.Suspense=$l;q.isAsyncMode=function(e){return G0(e)||Qe(e)===Qs};q.isConcurrentMode=G0;q.isContextConsumer=function(e){return Qe(e)===Nl};q.isContextProvider=function(e){return Qe(e)===El};q.isElement=function(e){return typeof e=="object"&&e!==null&&e.$$typeof===Vs};q.isForwardRef=function(e){return Qe(e)===Pl};q.isFragment=function(e){return Qe(e)===Sl};q.isLazy=function(e){return Qe(e)===Rl};q.isMemo=function(e){return Qe(e)===zl};q.isPortal=function(e){return Qe(e)===Xs};q.isProfiler=function(e){return Qe(e)===Cl};q.isStrictMode=function(e){return Qe(e)===Ml};q.isSuspense=function(e){return Qe(e)===$l};q.isValidElementType=function(e){return typeof e=="string"||typeof e=="function"||e===Sl||e===Tl||e===Cl||e===Ml||e===$l||e===_g||typeof e=="object"&&e!==null&&(e.$$typeof===Rl||e.$$typeof===zl||e.$$typeof===El||e.$$typeof===Nl||e.$$typeof===Pl||e.$$typeof===Sg||e.$$typeof===Mg||e.$$typeof===Cg||e.$$typeof===kg)};q.typeOf=Qe;q0.exports=q;var Eg=q0.exports,Y0=Eg,Ng={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Tg={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},K0={};K0[Y0.ForwardRef]=Ng;K0[Y0.Memo]=Tg;var Pg=!0;function Z0(e,t,n){var r="";return n.split(" ").forEach(function(i){e[i]!==void 0?t.push(e[i]+";"):i&&(r+=i+" ")}),r}var qs=function(t,n,r){var i=t.key+"-"+n.name;(r===!1||Pg===!1)&&t.registered[i]===void 0&&(t.registered[i]=n.styles)},Gs=function(t,n,r){qs(t,n,r);var i=t.key+"-"+n.name;if(t.inserted[n.name]===void 0){var o=n;do t.insert(n===o?"."+i:"",o,t.sheet,!0),o=o.next;while(o!==void 0)}};function $g(e){for(var t=0,n,r=0,i=e.length;i>=4;++r,i-=4)n=e.charCodeAt(r)&255|(e.charCodeAt(++r)&255)<<8|(e.charCodeAt(++r)&255)<<16|(e.charCodeAt(++r)&255)<<24,n=(n&65535)*1540483477+((n>>>16)*59797<<16),n^=n>>>24,t=(n&65535)*1540483477+((n>>>16)*59797<<16)^(t&65535)*1540483477+((t>>>16)*59797<<16);switch(i){case 3:t^=(e.charCodeAt(r+2)&255)<<16;case 2:t^=(e.charCodeAt(r+1)&255)<<8;case 1:t^=e.charCodeAt(r)&255,t=(t&65535)*1540483477+((t>>>16)*59797<<16)}return t^=t>>>13,t=(t&65535)*1540483477+((t>>>16)*59797<<16),((t^t>>>15)>>>0).toString(36)}var zg={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,scale:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},Rg=!1,bg=/[A-Z]|^ms/g,Lg=/_EMO_([^_]+?)_([^]*?)_EMO_/g,J0=function(t){return t.charCodeAt(1)===45},hf=function(t){return t!=null&&typeof t!="boolean"},hu=X0(function(e){return J0(e)?e:e.replace(bg,"-$&").toLowerCase()}),pf=function(t,n){switch(t){case"animation":case"animationName":if(typeof n=="string")return n.replace(Lg,function(r,i,o){return yt={name:i,styles:o,next:yt},i})}return zg[t]!==1&&!J0(t)&&typeof n=="number"&&n!==0?n+"px":n},Ag="Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";function ii(e,t,n){if(n==null)return"";var r=n;if(r.__emotion_styles!==void 0)return r;switch(typeof n){case"boolean":return"";case"object":{var i=n;if(i.anim===1)return yt={name:i.name,styles:i.styles,next:yt},i.name;var o=n;if(o.styles!==void 0){var l=o.next;if(l!==void 0)for(;l!==void 0;)yt={name:l.name,styles:l.styles,next:yt},l=l.next;var u=o.styles+";";return u}return Ig(e,t,n)}case"function":{if(e!==void 0){var a=yt,s=n(e);return yt=a,ii(e,t,s)}break}}var c=n;if(t==null)return c;var f=t[c];return f!==void 0?f:c}function Ig(e,t,n){var r="";if(Array.isArray(n))for(var i=0;i<n.length;i++)r+=ii(e,t,n[i])+";";else for(var o in n){var l=n[o];if(typeof l!="object"){var u=l;t!=null&&t[u]!==void 0?r+=o+"{"+t[u]+"}":hf(u)&&(r+=hu(o)+":"+pf(o,u)+";")}else{if(o==="NO_COMPONENT_SELECTOR"&&Rg)throw new Error(Ag);if(Array.isArray(l)&&typeof l[0]=="string"&&(t==null||t[l[0]]===void 0))for(var a=0;a<l.length;a++)hf(l[a])&&(r+=hu(o)+":"+pf(o,l[a])+";");else{var s=ii(e,t,l);switch(o){case"animation":case"animationName":{r+=hu(o)+":"+s+";";break}default:r+=o+"{"+s+"}"}}}}return r}var mf=/label:\s*([^\s;{]+)\s*(;|$)/g,yt;function bl(e,t,n){if(e.length===1&&typeof e[0]=="object"&&e[0]!==null&&e[0].styles!==void 0)return e[0];var r=!0,i="";yt=void 0;var o=e[0];if(o==null||o.raw===void 0)r=!1,i+=ii(n,t,o);else{var l=o;i+=l[0]}for(var u=1;u<e.length;u++)if(i+=ii(n,t,e[u]),r){var a=o;i+=a[u]}mf.lastIndex=0;for(var s="",c;(c=mf.exec(i))!==null;)s+="-"+c[1];var f=$g(i)+s;return{name:f,styles:i,next:yt}}var Og=function(t){return t()},eh=sf.useInsertionEffect?sf.useInsertionEffect:!1,th=eh||Og,gf=eh||F.useLayoutEffect,Fg=!1,nh=F.createContext(typeof HTMLElement<"u"?wg({key:"css"}):null);nh.Provider;var Ys=function(t){return F.forwardRef(function(n,r){var i=F.useContext(nh);return t(n,i,r)})},Ks=F.createContext({}),Ll={}.hasOwnProperty,xa="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",rh=function(t,n){var r={};for(var i in n)Ll.call(n,i)&&(r[i]=n[i]);return r[xa]=t,r},Dg=function(t){var n=t.cache,r=t.serialized,i=t.isStringTag;return qs(n,r,i),th(function(){return Gs(n,r,i)}),null},Hg=Ys(function(e,t,n){var r=e.css;typeof r=="string"&&t.registered[r]!==void 0&&(r=t.registered[r]);var i=e[xa],o=[r],l="";typeof e.className=="string"?l=Z0(t.registered,o,e.className):e.className!=null&&(l=e.className+" ");var u=bl(o,void 0,F.useContext(Ks));l+=t.key+"-"+u.name;var a={};for(var s in e)Ll.call(e,s)&&s!=="css"&&s!==xa&&!Fg&&(a[s]=e[s]);return a.className=l,n&&(a.ref=n),F.createElement(F.Fragment,null,F.createElement(Dg,{cache:t,serialized:u,isStringTag:typeof i=="string"}),F.createElement(i,a))}),ih=Hg,jg=ti.Fragment;function P(e,t,n){return Ll.call(t,"css")?ti.jsx(ih,rh(e,t),n):ti.jsx(e,t,n)}function X(e,t,n){return Ll.call(t,"css")?ti.jsxs(ih,rh(e,t),n):ti.jsxs(e,t,n)}var oh={exports:{}},qe={},lh={exports:{}},uh={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(N,b){var O=N.length;N.push(b);e:for(;0<O;){var G=O-1>>>1,ee=N[G];if(0<i(ee,b))N[G]=b,N[O]=ee,O=G;else break e}}function n(N){return N.length===0?null:N[0]}function r(N){if(N.length===0)return null;var b=N[0],O=N.pop();if(O!==b){N[0]=O;e:for(var G=0,ee=N.length,dn=ee>>>1;G<dn;){var nt=2*(G+1)-1,Cr=N[nt],ht=nt+1,Ht=N[ht];if(0>i(Cr,O))ht<ee&&0>i(Ht,Cr)?(N[G]=Ht,N[ht]=O,G=ht):(N[G]=Cr,N[nt]=O,G=nt);else if(ht<ee&&0>i(Ht,O))N[G]=Ht,N[ht]=O,G=ht;else break e}}return b}function i(N,b){var O=N.sortIndex-b.sortIndex;return O!==0?O:N.id-b.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;e.unstable_now=function(){return o.now()}}else{var l=Date,u=l.now();e.unstable_now=function(){return l.now()-u}}var a=[],s=[],c=1,f=null,d=3,m=!1,y=!1,v=!1,k=typeof setTimeout=="function"?setTimeout:null,p=typeof clearTimeout=="function"?clearTimeout:null,h=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function g(N){for(var b=n(s);b!==null;){if(b.callback===null)r(s);else if(b.startTime<=N)r(s),b.sortIndex=b.expirationTime,t(a,b);else break;b=n(s)}}function x(N){if(v=!1,g(N),!y)if(n(a)!==null)y=!0,He(w);else{var b=n(s);b!==null&&Re(x,b.startTime-N)}}function w(N,b){y=!1,v&&(v=!1,p(T),T=-1),m=!0;var O=d;try{for(g(b),f=n(a);f!==null&&(!(f.expirationTime>b)||N&&!R());){var G=f.callback;if(typeof G=="function"){f.callback=null,d=f.priorityLevel;var ee=G(f.expirationTime<=b);b=e.unstable_now(),typeof ee=="function"?f.callback=ee:f===n(a)&&r(a),g(b)}else r(a);f=n(a)}if(f!==null)var dn=!0;else{var nt=n(s);nt!==null&&Re(x,nt.startTime-b),dn=!1}return dn}finally{f=null,d=O,m=!1}}var S=!1,_=null,T=-1,I=5,z=-1;function R(){return!(e.unstable_now()-z<I)}function W(){if(_!==null){var N=e.unstable_now();z=N;var b=!0;try{b=_(!0,N)}finally{b?j():(S=!1,_=null)}}else S=!1}var j;if(typeof h=="function")j=function(){h(W)};else if(typeof MessageChannel<"u"){var J=new MessageChannel,Ct=J.port2;J.port1.onmessage=W,j=function(){Ct.postMessage(null)}}else j=function(){k(W,0)};function He(N){_=N,S||(S=!0,j())}function Re(N,b){T=k(function(){N(e.unstable_now())},b)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(N){N.callback=null},e.unstable_continueExecution=function(){y||m||(y=!0,He(w))},e.unstable_forceFrameRate=function(N){0>N||125<N?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<N?Math.floor(1e3/N):5},e.unstable_getCurrentPriorityLevel=function(){return d},e.unstable_getFirstCallbackNode=function(){return n(a)},e.unstable_next=function(N){switch(d){case 1:case 2:case 3:var b=3;break;default:b=d}var O=d;d=b;try{return N()}finally{d=O}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(N,b){switch(N){case 1:case 2:case 3:case 4:case 5:break;default:N=3}var O=d;d=N;try{return b()}finally{d=O}},e.unstable_scheduleCallback=function(N,b,O){var G=e.unstable_now();switch(typeof O=="object"&&O!==null?(O=O.delay,O=typeof O=="number"&&0<O?G+O:G):O=G,N){case 1:var ee=-1;break;case 2:ee=250;break;case 5:ee=1073741823;break;case 4:ee=1e4;break;default:ee=5e3}return ee=O+ee,N={id:c++,callback:b,priorityLevel:N,startTime:O,expirationTime:ee,sortIndex:-1},O>G?(N.sortIndex=O,t(s,N),n(a)===null&&N===n(s)&&(v?(p(T),T=-1):v=!0,Re(x,O-G))):(N.sortIndex=ee,t(a,N),y||m||(y=!0,He(w))),N},e.unstable_shouldYield=R,e.unstable_wrapCallback=function(N){var b=d;return function(){var O=d;d=b;try{return N.apply(this,arguments)}finally{d=O}}}})(uh);lh.exports=uh;var Bg=lh.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ug=F,Ve=Bg;function M(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var ah=new Set,oi={};function Rn(e,t){ur(e,t),ur(e+"Capture",t)}function ur(e,t){for(oi[e]=t,e=0;e<t.length;e++)ah.add(t[e])}var Rt=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),wa=Object.prototype.hasOwnProperty,Wg=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,yf={},vf={};function Vg(e){return wa.call(vf,e)?!0:wa.call(yf,e)?!1:Wg.test(e)?vf[e]=!0:(yf[e]=!0,!1)}function Xg(e,t,n,r){if(n!==null&&n.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function Qg(e,t,n,r){if(t===null||typeof t>"u"||Xg(e,t,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function ze(e,t,n,r,i,o,l){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var _e={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){_e[e]=new ze(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];_e[t]=new ze(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){_e[e]=new ze(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){_e[e]=new ze(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){_e[e]=new ze(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){_e[e]=new ze(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){_e[e]=new ze(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){_e[e]=new ze(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){_e[e]=new ze(e,5,!1,e.toLowerCase(),null,!1,!1)});var Zs=/[\-:]([a-z])/g;function Js(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(Zs,Js);_e[t]=new ze(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(Zs,Js);_e[t]=new ze(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(Zs,Js);_e[t]=new ze(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){_e[e]=new ze(e,1,!1,e.toLowerCase(),null,!1,!1)});_e.xlinkHref=new ze("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){_e[e]=new ze(e,1,!1,e.toLowerCase(),null,!0,!0)});function ec(e,t,n,r){var i=_e.hasOwnProperty(t)?_e[t]:null;(i!==null?i.type!==0:r||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(Qg(t,n,i,r)&&(n=null),r||i===null?Vg(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=n===null?i.type===3?!1:"":n:(t=i.attributeName,r=i.attributeNamespace,n===null?e.removeAttribute(t):(i=i.type,n=i===3||i===4&&n===!0?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}var Ot=Ug.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Bi=Symbol.for("react.element"),Fn=Symbol.for("react.portal"),Dn=Symbol.for("react.fragment"),tc=Symbol.for("react.strict_mode"),_a=Symbol.for("react.profiler"),sh=Symbol.for("react.provider"),ch=Symbol.for("react.context"),nc=Symbol.for("react.forward_ref"),ka=Symbol.for("react.suspense"),Sa=Symbol.for("react.suspense_list"),rc=Symbol.for("react.memo"),Bt=Symbol.for("react.lazy"),fh=Symbol.for("react.offscreen"),xf=Symbol.iterator;function Nr(e){return e===null||typeof e!="object"?null:(e=xf&&e[xf]||e["@@iterator"],typeof e=="function"?e:null)}var ie=Object.assign,pu;function Or(e){if(pu===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);pu=t&&t[1]||""}return`
`+pu+e}var mu=!1;function gu(e,t){if(!e||mu)return"";mu=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(s){var r=s}Reflect.construct(e,[],t)}else{try{t.call()}catch(s){r=s}e.call(t.prototype)}else{try{throw Error()}catch(s){r=s}e()}}catch(s){if(s&&r&&typeof s.stack=="string"){for(var i=s.stack.split(`
`),o=r.stack.split(`
`),l=i.length-1,u=o.length-1;1<=l&&0<=u&&i[l]!==o[u];)u--;for(;1<=l&&0<=u;l--,u--)if(i[l]!==o[u]){if(l!==1||u!==1)do if(l--,u--,0>u||i[l]!==o[u]){var a=`
`+i[l].replace(" at new "," at ");return e.displayName&&a.includes("<anonymous>")&&(a=a.replace("<anonymous>",e.displayName)),a}while(1<=l&&0<=u);break}}}finally{mu=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?Or(e):""}function qg(e){switch(e.tag){case 5:return Or(e.type);case 16:return Or("Lazy");case 13:return Or("Suspense");case 19:return Or("SuspenseList");case 0:case 2:case 15:return e=gu(e.type,!1),e;case 11:return e=gu(e.type.render,!1),e;case 1:return e=gu(e.type,!0),e;default:return""}}function Ma(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Dn:return"Fragment";case Fn:return"Portal";case _a:return"Profiler";case tc:return"StrictMode";case ka:return"Suspense";case Sa:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case ch:return(e.displayName||"Context")+".Consumer";case sh:return(e._context.displayName||"Context")+".Provider";case nc:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case rc:return t=e.displayName||null,t!==null?t:Ma(e.type)||"Memo";case Bt:t=e._payload,e=e._init;try{return Ma(e(t))}catch{}}return null}function Gg(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Ma(t);case 8:return t===tc?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function rn(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function dh(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function Yg(e){var t=dh(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(l){r=""+l,o.call(this,l)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(l){r=""+l},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function Ui(e){e._valueTracker||(e._valueTracker=Yg(e))}function hh(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=dh(e)?e.checked?"true":"false":e.value),e=r,e!==n?(t.setValue(e),!0):!1}function zo(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function Ca(e,t){var n=t.checked;return ie({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??e._wrapperState.initialChecked})}function wf(e,t){var n=t.defaultValue==null?"":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;n=rn(t.value!=null?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function ph(e,t){t=t.checked,t!=null&&ec(e,"checked",t,!1)}function Ea(e,t){ph(e,t);var n=rn(t.value),r=t.type;if(n!=null)r==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(r==="submit"||r==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?Na(e,t.type,n):t.hasOwnProperty("defaultValue")&&Na(e,t.type,rn(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function _f(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!(r!=="submit"&&r!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function Na(e,t,n){(t!=="number"||zo(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var Fr=Array.isArray;function Zn(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+rn(n),t=null,i=0;i<e.length;i++){if(e[i].value===n){e[i].selected=!0,r&&(e[i].defaultSelected=!0);return}t!==null||e[i].disabled||(t=e[i])}t!==null&&(t.selected=!0)}}function Ta(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(M(91));return ie({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function kf(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(M(92));if(Fr(n)){if(1<n.length)throw Error(M(93));n=n[0]}t=n}t==null&&(t=""),n=t}e._wrapperState={initialValue:rn(n)}}function mh(e,t){var n=rn(t.value),r=rn(t.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),r!=null&&(e.defaultValue=""+r)}function Sf(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function gh(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Pa(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?gh(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Wi,yh=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,i)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Wi=Wi||document.createElement("div"),Wi.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Wi.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function li(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var Vr={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Kg=["Webkit","ms","Moz","O"];Object.keys(Vr).forEach(function(e){Kg.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Vr[t]=Vr[e]})});function vh(e,t,n){return t==null||typeof t=="boolean"||t===""?"":n||typeof t!="number"||t===0||Vr.hasOwnProperty(e)&&Vr[e]?(""+t).trim():t+"px"}function xh(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=n.indexOf("--")===0,i=vh(n,t[n],r);n==="float"&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}var Zg=ie({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function $a(e,t){if(t){if(Zg[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(M(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(M(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(M(61))}if(t.style!=null&&typeof t.style!="object")throw Error(M(62))}}function za(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ra=null;function ic(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var ba=null,Jn=null,er=null;function Mf(e){if(e=$i(e)){if(typeof ba!="function")throw Error(M(280));var t=e.stateNode;t&&(t=Dl(t),ba(e.stateNode,e.type,t))}}function wh(e){Jn?er?er.push(e):er=[e]:Jn=e}function _h(){if(Jn){var e=Jn,t=er;if(er=Jn=null,Mf(e),t)for(e=0;e<t.length;e++)Mf(t[e])}}function kh(e,t){return e(t)}function Sh(){}var yu=!1;function Mh(e,t,n){if(yu)return e(t,n);yu=!0;try{return kh(e,t,n)}finally{yu=!1,(Jn!==null||er!==null)&&(Sh(),_h())}}function ui(e,t){var n=e.stateNode;if(n===null)return null;var r=Dl(n);if(r===null)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(M(231,t,typeof n));return n}var La=!1;if(Rt)try{var Tr={};Object.defineProperty(Tr,"passive",{get:function(){La=!0}}),window.addEventListener("test",Tr,Tr),window.removeEventListener("test",Tr,Tr)}catch{La=!1}function Jg(e,t,n,r,i,o,l,u,a){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(c){this.onError(c)}}var Xr=!1,Ro=null,bo=!1,Aa=null,ey={onError:function(e){Xr=!0,Ro=e}};function ty(e,t,n,r,i,o,l,u,a){Xr=!1,Ro=null,Jg.apply(ey,arguments)}function ny(e,t,n,r,i,o,l,u,a){if(ty.apply(this,arguments),Xr){if(Xr){var s=Ro;Xr=!1,Ro=null}else throw Error(M(198));bo||(bo=!0,Aa=s)}}function bn(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function Ch(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Cf(e){if(bn(e)!==e)throw Error(M(188))}function ry(e){var t=e.alternate;if(!t){if(t=bn(e),t===null)throw Error(M(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(i===null)break;var o=i.alternate;if(o===null){if(r=i.return,r!==null){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return Cf(i),e;if(o===r)return Cf(i),t;o=o.sibling}throw Error(M(188))}if(n.return!==r.return)n=i,r=o;else{for(var l=!1,u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l)throw Error(M(189))}}if(n.alternate!==r)throw Error(M(190))}if(n.tag!==3)throw Error(M(188));return n.stateNode.current===n?e:t}function Eh(e){return e=ry(e),e!==null?Nh(e):null}function Nh(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=Nh(e);if(t!==null)return t;e=e.sibling}return null}var Th=Ve.unstable_scheduleCallback,Ef=Ve.unstable_cancelCallback,iy=Ve.unstable_shouldYield,oy=Ve.unstable_requestPaint,ue=Ve.unstable_now,ly=Ve.unstable_getCurrentPriorityLevel,oc=Ve.unstable_ImmediatePriority,Ph=Ve.unstable_UserBlockingPriority,Lo=Ve.unstable_NormalPriority,uy=Ve.unstable_LowPriority,$h=Ve.unstable_IdlePriority,Al=null,_t=null;function ay(e){if(_t&&typeof _t.onCommitFiberRoot=="function")try{_t.onCommitFiberRoot(Al,e,void 0,(e.current.flags&128)===128)}catch{}}var st=Math.clz32?Math.clz32:fy,sy=Math.log,cy=Math.LN2;function fy(e){return e>>>=0,e===0?32:31-(sy(e)/cy|0)|0}var Vi=64,Xi=4194304;function Dr(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function Ao(e,t){var n=e.pendingLanes;if(n===0)return 0;var r=0,i=e.suspendedLanes,o=e.pingedLanes,l=n&268435455;if(l!==0){var u=l&~i;u!==0?r=Dr(u):(o&=l,o!==0&&(r=Dr(o)))}else l=n&~i,l!==0?r=Dr(l):o!==0&&(r=Dr(o));if(r===0)return 0;if(t!==0&&t!==r&&!(t&i)&&(i=r&-r,o=t&-t,i>=o||i===16&&(o&4194240)!==0))return t;if(r&4&&(r|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)n=31-st(t),i=1<<n,r|=e[n],t&=~i;return r}function dy(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function hy(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-st(o),u=1<<l,a=i[l];a===-1?(!(u&n)||u&r)&&(i[l]=dy(u,t)):a<=t&&(e.expiredLanes|=u),o&=~u}}function Ia(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function zh(){var e=Vi;return Vi<<=1,!(Vi&4194240)&&(Vi=64),e}function vu(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ti(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-st(t),e[t]=n}function py(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var i=31-st(n),o=1<<i;t[i]=0,r[i]=-1,e[i]=-1,n&=~o}}function lc(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-st(n),i=1<<r;i&t|e[r]&t&&(e[r]|=t),n&=~i}}var Q=0;function Rh(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var bh,uc,Lh,Ah,Ih,Oa=!1,Qi=[],qt=null,Gt=null,Yt=null,ai=new Map,si=new Map,Wt=[],my="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Nf(e,t){switch(e){case"focusin":case"focusout":qt=null;break;case"dragenter":case"dragleave":Gt=null;break;case"mouseover":case"mouseout":Yt=null;break;case"pointerover":case"pointerout":ai.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":si.delete(t.pointerId)}}function Pr(e,t,n,r,i,o){return e===null||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},t!==null&&(t=$i(t),t!==null&&uc(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,i!==null&&t.indexOf(i)===-1&&t.push(i),e)}function gy(e,t,n,r,i){switch(t){case"focusin":return qt=Pr(qt,e,t,n,r,i),!0;case"dragenter":return Gt=Pr(Gt,e,t,n,r,i),!0;case"mouseover":return Yt=Pr(Yt,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return ai.set(o,Pr(ai.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,si.set(o,Pr(si.get(o)||null,e,t,n,r,i)),!0}return!1}function Oh(e){var t=gn(e.target);if(t!==null){var n=bn(t);if(n!==null){if(t=n.tag,t===13){if(t=Ch(n),t!==null){e.blockedOn=t,Ih(e.priority,function(){Lh(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function go(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=Fa(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var r=new n.constructor(n.type,n);Ra=r,n.target.dispatchEvent(r),Ra=null}else return t=$i(n),t!==null&&uc(t),e.blockedOn=n,!1;t.shift()}return!0}function Tf(e,t,n){go(e)&&n.delete(t)}function yy(){Oa=!1,qt!==null&&go(qt)&&(qt=null),Gt!==null&&go(Gt)&&(Gt=null),Yt!==null&&go(Yt)&&(Yt=null),ai.forEach(Tf),si.forEach(Tf)}function $r(e,t){e.blockedOn===t&&(e.blockedOn=null,Oa||(Oa=!0,Ve.unstable_scheduleCallback(Ve.unstable_NormalPriority,yy)))}function ci(e){function t(i){return $r(i,e)}if(0<Qi.length){$r(Qi[0],e);for(var n=1;n<Qi.length;n++){var r=Qi[n];r.blockedOn===e&&(r.blockedOn=null)}}for(qt!==null&&$r(qt,e),Gt!==null&&$r(Gt,e),Yt!==null&&$r(Yt,e),ai.forEach(t),si.forEach(t),n=0;n<Wt.length;n++)r=Wt[n],r.blockedOn===e&&(r.blockedOn=null);for(;0<Wt.length&&(n=Wt[0],n.blockedOn===null);)Oh(n),n.blockedOn===null&&Wt.shift()}var tr=Ot.ReactCurrentBatchConfig,Io=!0;function vy(e,t,n,r){var i=Q,o=tr.transition;tr.transition=null;try{Q=1,ac(e,t,n,r)}finally{Q=i,tr.transition=o}}function xy(e,t,n,r){var i=Q,o=tr.transition;tr.transition=null;try{Q=4,ac(e,t,n,r)}finally{Q=i,tr.transition=o}}function ac(e,t,n,r){if(Io){var i=Fa(e,t,n,r);if(i===null)Tu(e,t,r,Oo,n),Nf(e,r);else if(gy(i,e,t,n,r))r.stopPropagation();else if(Nf(e,r),t&4&&-1<my.indexOf(e)){for(;i!==null;){var o=$i(i);if(o!==null&&bh(o),o=Fa(e,t,n,r),o===null&&Tu(e,t,r,Oo,n),o===i)break;i=o}i!==null&&r.stopPropagation()}else Tu(e,t,r,null,n)}}var Oo=null;function Fa(e,t,n,r){if(Oo=null,e=ic(r),e=gn(e),e!==null)if(t=bn(e),t===null)e=null;else if(n=t.tag,n===13){if(e=Ch(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Oo=e,null}function Fh(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ly()){case oc:return 1;case Ph:return 4;case Lo:case uy:return 16;case $h:return 536870912;default:return 16}default:return 16}}var Xt=null,sc=null,yo=null;function Dh(){if(yo)return yo;var e,t=sc,n=t.length,r,i="value"in Xt?Xt.value:Xt.textContent,o=i.length;for(e=0;e<n&&t[e]===i[e];e++);var l=n-e;for(r=1;r<=l&&t[n-r]===i[o-r];r++);return yo=i.slice(e,1<r?1-r:void 0)}function vo(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function qi(){return!0}function Pf(){return!1}function Ge(e){function t(n,r,i,o,l){this._reactName=n,this._targetInst=i,this.type=r,this.nativeEvent=o,this.target=l,this.currentTarget=null;for(var u in e)e.hasOwnProperty(u)&&(n=e[u],this[u]=n?n(o):o[u]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?qi:Pf,this.isPropagationStopped=Pf,this}return ie(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=qi)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=qi)},persist:function(){},isPersistent:qi}),t}var wr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cc=Ge(wr),Pi=ie({},wr,{view:0,detail:0}),wy=Ge(Pi),xu,wu,zr,Il=ie({},Pi,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:fc,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==zr&&(zr&&e.type==="mousemove"?(xu=e.screenX-zr.screenX,wu=e.screenY-zr.screenY):wu=xu=0,zr=e),xu)},movementY:function(e){return"movementY"in e?e.movementY:wu}}),$f=Ge(Il),_y=ie({},Il,{dataTransfer:0}),ky=Ge(_y),Sy=ie({},Pi,{relatedTarget:0}),_u=Ge(Sy),My=ie({},wr,{animationName:0,elapsedTime:0,pseudoElement:0}),Cy=Ge(My),Ey=ie({},wr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Ny=Ge(Ey),Ty=ie({},wr,{data:0}),zf=Ge(Ty),Py={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},$y={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},zy={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ry(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=zy[e])?!!t[e]:!1}function fc(){return Ry}var by=ie({},Pi,{key:function(e){if(e.key){var t=Py[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=vo(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?$y[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:fc,charCode:function(e){return e.type==="keypress"?vo(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?vo(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Ly=Ge(by),Ay=ie({},Il,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Rf=Ge(Ay),Iy=ie({},Pi,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:fc}),Oy=Ge(Iy),Fy=ie({},wr,{propertyName:0,elapsedTime:0,pseudoElement:0}),Dy=Ge(Fy),Hy=ie({},Il,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),jy=Ge(Hy),By=[9,13,27,32],dc=Rt&&"CompositionEvent"in window,Qr=null;Rt&&"documentMode"in document&&(Qr=document.documentMode);var Uy=Rt&&"TextEvent"in window&&!Qr,Hh=Rt&&(!dc||Qr&&8<Qr&&11>=Qr),bf=" ",Lf=!1;function jh(e,t){switch(e){case"keyup":return By.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bh(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var Hn=!1;function Wy(e,t){switch(e){case"compositionend":return Bh(t);case"keypress":return t.which!==32?null:(Lf=!0,bf);case"textInput":return e=t.data,e===bf&&Lf?null:e;default:return null}}function Vy(e,t){if(Hn)return e==="compositionend"||!dc&&jh(e,t)?(e=Dh(),yo=sc=Xt=null,Hn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Hh&&t.locale!=="ko"?null:t.data;default:return null}}var Xy={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Af(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!Xy[e.type]:t==="textarea"}function Uh(e,t,n,r){wh(r),t=Fo(t,"onChange"),0<t.length&&(n=new cc("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var qr=null,fi=null;function Qy(e){ep(e,0)}function Ol(e){var t=Un(e);if(hh(t))return e}function qy(e,t){if(e==="change")return t}var Wh=!1;if(Rt){var ku;if(Rt){var Su="oninput"in document;if(!Su){var If=document.createElement("div");If.setAttribute("oninput","return;"),Su=typeof If.oninput=="function"}ku=Su}else ku=!1;Wh=ku&&(!document.documentMode||9<document.documentMode)}function Of(){qr&&(qr.detachEvent("onpropertychange",Vh),fi=qr=null)}function Vh(e){if(e.propertyName==="value"&&Ol(fi)){var t=[];Uh(t,fi,e,ic(e)),Mh(Qy,t)}}function Gy(e,t,n){e==="focusin"?(Of(),qr=t,fi=n,qr.attachEvent("onpropertychange",Vh)):e==="focusout"&&Of()}function Yy(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Ol(fi)}function Ky(e,t){if(e==="click")return Ol(t)}function Zy(e,t){if(e==="input"||e==="change")return Ol(t)}function Jy(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var ft=typeof Object.is=="function"?Object.is:Jy;function di(e,t){if(ft(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!wa.call(t,i)||!ft(e[i],t[i]))return!1}return!0}function Ff(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Df(e,t){var n=Ff(e);e=0;for(var r;n;){if(n.nodeType===3){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Ff(n)}}function Xh(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Xh(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Qh(){for(var e=window,t=zo();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href=="string"}catch{n=!1}if(n)e=t.contentWindow;else break;t=zo(e.document)}return t}function hc(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function ev(e){var t=Qh(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&Xh(n.ownerDocument.documentElement,n)){if(r!==null&&hc(n)){if(t=r.start,e=r.end,e===void 0&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var i=n.textContent.length,o=Math.min(r.start,i);r=r.end===void 0?o:Math.min(r.end,i),!e.extend&&o>r&&(i=r,r=o,o=i),i=Df(n,o);var l=Df(n,r);i&&l&&(e.rangeCount!==1||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&(t=t.createRange(),t.setStart(i.node,i.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var tv=Rt&&"documentMode"in document&&11>=document.documentMode,jn=null,Da=null,Gr=null,Ha=!1;function Hf(e,t,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Ha||jn==null||jn!==zo(r)||(r=jn,"selectionStart"in r&&hc(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Gr&&di(Gr,r)||(Gr=r,r=Fo(Da,"onSelect"),0<r.length&&(t=new cc("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=jn)))}function Gi(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Bn={animationend:Gi("Animation","AnimationEnd"),animationiteration:Gi("Animation","AnimationIteration"),animationstart:Gi("Animation","AnimationStart"),transitionend:Gi("Transition","TransitionEnd")},Mu={},qh={};Rt&&(qh=document.createElement("div").style,"AnimationEvent"in window||(delete Bn.animationend.animation,delete Bn.animationiteration.animation,delete Bn.animationstart.animation),"TransitionEvent"in window||delete Bn.transitionend.transition);function Fl(e){if(Mu[e])return Mu[e];if(!Bn[e])return e;var t=Bn[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in qh)return Mu[e]=t[n];return e}var Gh=Fl("animationend"),Yh=Fl("animationiteration"),Kh=Fl("animationstart"),Zh=Fl("transitionend"),Jh=new Map,jf="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function sn(e,t){Jh.set(e,t),Rn(t,[e])}for(var Cu=0;Cu<jf.length;Cu++){var Eu=jf[Cu],nv=Eu.toLowerCase(),rv=Eu[0].toUpperCase()+Eu.slice(1);sn(nv,"on"+rv)}sn(Gh,"onAnimationEnd");sn(Yh,"onAnimationIteration");sn(Kh,"onAnimationStart");sn("dblclick","onDoubleClick");sn("focusin","onFocus");sn("focusout","onBlur");sn(Zh,"onTransitionEnd");ur("onMouseEnter",["mouseout","mouseover"]);ur("onMouseLeave",["mouseout","mouseover"]);ur("onPointerEnter",["pointerout","pointerover"]);ur("onPointerLeave",["pointerout","pointerover"]);Rn("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Rn("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Rn("onBeforeInput",["compositionend","keypress","textInput","paste"]);Rn("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Rn("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Rn("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Hr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),iv=new Set("cancel close invalid load scroll toggle".split(" ").concat(Hr));function Bf(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,ny(r,t,void 0,e),e.currentTarget=null}function ep(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var u=r[l],a=u.instance,s=u.currentTarget;if(u=u.listener,a!==o&&i.isPropagationStopped())break e;Bf(i,u,s),o=a}else for(l=0;l<r.length;l++){if(u=r[l],a=u.instance,s=u.currentTarget,u=u.listener,a!==o&&i.isPropagationStopped())break e;Bf(i,u,s),o=a}}}if(bo)throw e=Aa,bo=!1,Aa=null,e}function K(e,t){var n=t[Va];n===void 0&&(n=t[Va]=new Set);var r=e+"__bubble";n.has(r)||(tp(t,e,2,!1),n.add(r))}function Nu(e,t,n){var r=0;t&&(r|=4),tp(n,e,r,t)}var Yi="_reactListening"+Math.random().toString(36).slice(2);function hi(e){if(!e[Yi]){e[Yi]=!0,ah.forEach(function(n){n!=="selectionchange"&&(iv.has(n)||Nu(n,!1,e),Nu(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Yi]||(t[Yi]=!0,Nu("selectionchange",!1,t))}}function tp(e,t,n,r){switch(Fh(t)){case 1:var i=vy;break;case 4:i=xy;break;default:i=ac}n=i.bind(null,t,n,e),i=void 0,!La||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(i=!0),r?i!==void 0?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):i!==void 0?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function Tu(e,t,n,r,i){var o=r;if(!(t&1)&&!(t&2)&&r!==null)e:for(;;){if(r===null)return;var l=r.tag;if(l===3||l===4){var u=r.stateNode.containerInfo;if(u===i||u.nodeType===8&&u.parentNode===i)break;if(l===4)for(l=r.return;l!==null;){var a=l.tag;if((a===3||a===4)&&(a=l.stateNode.containerInfo,a===i||a.nodeType===8&&a.parentNode===i))return;l=l.return}for(;u!==null;){if(l=gn(u),l===null)return;if(a=l.tag,a===5||a===6){r=o=l;continue e}u=u.parentNode}}r=r.return}Mh(function(){var s=o,c=ic(n),f=[];e:{var d=Jh.get(e);if(d!==void 0){var m=cc,y=e;switch(e){case"keypress":if(vo(n)===0)break e;case"keydown":case"keyup":m=Ly;break;case"focusin":y="focus",m=_u;break;case"focusout":y="blur",m=_u;break;case"beforeblur":case"afterblur":m=_u;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":m=$f;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":m=ky;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":m=Oy;break;case Gh:case Yh:case Kh:m=Cy;break;case Zh:m=Dy;break;case"scroll":m=wy;break;case"wheel":m=jy;break;case"copy":case"cut":case"paste":m=Ny;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":m=Rf}var v=(t&4)!==0,k=!v&&e==="scroll",p=v?d!==null?d+"Capture":null:d;v=[];for(var h=s,g;h!==null;){g=h;var x=g.stateNode;if(g.tag===5&&x!==null&&(g=x,p!==null&&(x=ui(h,p),x!=null&&v.push(pi(h,x,g)))),k)break;h=h.return}0<v.length&&(d=new m(d,y,null,n,c),f.push({event:d,listeners:v}))}}if(!(t&7)){e:{if(d=e==="mouseover"||e==="pointerover",m=e==="mouseout"||e==="pointerout",d&&n!==Ra&&(y=n.relatedTarget||n.fromElement)&&(gn(y)||y[bt]))break e;if((m||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,m?(y=n.relatedTarget||n.toElement,m=s,y=y?gn(y):null,y!==null&&(k=bn(y),y!==k||y.tag!==5&&y.tag!==6)&&(y=null)):(m=null,y=s),m!==y)){if(v=$f,x="onMouseLeave",p="onMouseEnter",h="mouse",(e==="pointerout"||e==="pointerover")&&(v=Rf,x="onPointerLeave",p="onPointerEnter",h="pointer"),k=m==null?d:Un(m),g=y==null?d:Un(y),d=new v(x,h+"leave",m,n,c),d.target=k,d.relatedTarget=g,x=null,gn(c)===s&&(v=new v(p,h+"enter",y,n,c),v.target=g,v.relatedTarget=k,x=v),k=x,m&&y)t:{for(v=m,p=y,h=0,g=v;g;g=In(g))h++;for(g=0,x=p;x;x=In(x))g++;for(;0<h-g;)v=In(v),h--;for(;0<g-h;)p=In(p),g--;for(;h--;){if(v===p||p!==null&&v===p.alternate)break t;v=In(v),p=In(p)}v=null}else v=null;m!==null&&Uf(f,d,m,v,!1),y!==null&&k!==null&&Uf(f,k,y,v,!0)}}e:{if(d=s?Un(s):window,m=d.nodeName&&d.nodeName.toLowerCase(),m==="select"||m==="input"&&d.type==="file")var w=qy;else if(Af(d))if(Wh)w=Zy;else{w=Yy;var S=Gy}else(m=d.nodeName)&&m.toLowerCase()==="input"&&(d.type==="checkbox"||d.type==="radio")&&(w=Ky);if(w&&(w=w(e,s))){Uh(f,w,n,c);break e}S&&S(e,d,s),e==="focusout"&&(S=d._wrapperState)&&S.controlled&&d.type==="number"&&Na(d,"number",d.value)}switch(S=s?Un(s):window,e){case"focusin":(Af(S)||S.contentEditable==="true")&&(jn=S,Da=s,Gr=null);break;case"focusout":Gr=Da=jn=null;break;case"mousedown":Ha=!0;break;case"contextmenu":case"mouseup":case"dragend":Ha=!1,Hf(f,n,c);break;case"selectionchange":if(tv)break;case"keydown":case"keyup":Hf(f,n,c)}var _;if(dc)e:{switch(e){case"compositionstart":var T="onCompositionStart";break e;case"compositionend":T="onCompositionEnd";break e;case"compositionupdate":T="onCompositionUpdate";break e}T=void 0}else Hn?jh(e,n)&&(T="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(T="onCompositionStart");T&&(Hh&&n.locale!=="ko"&&(Hn||T!=="onCompositionStart"?T==="onCompositionEnd"&&Hn&&(_=Dh()):(Xt=c,sc="value"in Xt?Xt.value:Xt.textContent,Hn=!0)),S=Fo(s,T),0<S.length&&(T=new zf(T,e,null,n,c),f.push({event:T,listeners:S}),_?T.data=_:(_=Bh(n),_!==null&&(T.data=_)))),(_=Uy?Wy(e,n):Vy(e,n))&&(s=Fo(s,"onBeforeInput"),0<s.length&&(c=new zf("onBeforeInput","beforeinput",null,n,c),f.push({event:c,listeners:s}),c.data=_))}ep(f,t)})}function pi(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Fo(e,t){for(var n=t+"Capture",r=[];e!==null;){var i=e,o=i.stateNode;i.tag===5&&o!==null&&(i=o,o=ui(e,n),o!=null&&r.unshift(pi(e,o,i)),o=ui(e,t),o!=null&&r.push(pi(e,o,i))),e=e.return}return r}function In(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Uf(e,t,n,r,i){for(var o=t._reactName,l=[];n!==null&&n!==r;){var u=n,a=u.alternate,s=u.stateNode;if(a!==null&&a===r)break;u.tag===5&&s!==null&&(u=s,i?(a=ui(n,o),a!=null&&l.unshift(pi(n,a,u))):i||(a=ui(n,o),a!=null&&l.push(pi(n,a,u)))),n=n.return}l.length!==0&&e.push({event:t,listeners:l})}var ov=/\r\n?/g,lv=/\u0000|\uFFFD/g;function Wf(e){return(typeof e=="string"?e:""+e).replace(ov,`
`).replace(lv,"")}function Ki(e,t,n){if(t=Wf(t),Wf(e)!==t&&n)throw Error(M(425))}function Do(){}var ja=null,Ba=null;function Ua(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var Wa=typeof setTimeout=="function"?setTimeout:void 0,uv=typeof clearTimeout=="function"?clearTimeout:void 0,Vf=typeof Promise=="function"?Promise:void 0,av=typeof queueMicrotask=="function"?queueMicrotask:typeof Vf<"u"?function(e){return Vf.resolve(null).then(e).catch(sv)}:Wa;function sv(e){setTimeout(function(){throw e})}function Pu(e,t){var n=t,r=0;do{var i=n.nextSibling;if(e.removeChild(n),i&&i.nodeType===8)if(n=i.data,n==="/$"){if(r===0){e.removeChild(i),ci(t);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=i}while(n);ci(t)}function Kt(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function Xf(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(t===0)return e;t--}else n==="/$"&&t++}e=e.previousSibling}return null}var _r=Math.random().toString(36).slice(2),vt="__reactFiber$"+_r,mi="__reactProps$"+_r,bt="__reactContainer$"+_r,Va="__reactEvents$"+_r,cv="__reactListeners$"+_r,fv="__reactHandles$"+_r;function gn(e){var t=e[vt];if(t)return t;for(var n=e.parentNode;n;){if(t=n[bt]||n[vt]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=Xf(e);e!==null;){if(n=e[vt])return n;e=Xf(e)}return t}e=n,n=e.parentNode}return null}function $i(e){return e=e[vt]||e[bt],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Un(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(M(33))}function Dl(e){return e[mi]||null}var Xa=[],Wn=-1;function cn(e){return{current:e}}function Z(e){0>Wn||(e.current=Xa[Wn],Xa[Wn]=null,Wn--)}function Y(e,t){Wn++,Xa[Wn]=e.current,e.current=t}var on={},Ne=cn(on),Ie=cn(!1),Cn=on;function ar(e,t){var n=e.type.contextTypes;if(!n)return on;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i={},o;for(o in n)i[o]=t[o];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Oe(e){return e=e.childContextTypes,e!=null}function Ho(){Z(Ie),Z(Ne)}function Qf(e,t,n){if(Ne.current!==on)throw Error(M(168));Y(Ne,t),Y(Ie,n)}function np(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var i in r)if(!(i in t))throw Error(M(108,Gg(e)||"Unknown",i));return ie({},n,r)}function jo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||on,Cn=Ne.current,Y(Ne,e),Y(Ie,Ie.current),!0}function qf(e,t,n){var r=e.stateNode;if(!r)throw Error(M(169));n?(e=np(e,t,Cn),r.__reactInternalMemoizedMergedChildContext=e,Z(Ie),Z(Ne),Y(Ne,e)):Z(Ie),Y(Ie,n)}var Tt=null,Hl=!1,$u=!1;function rp(e){Tt===null?Tt=[e]:Tt.push(e)}function dv(e){Hl=!0,rp(e)}function fn(){if(!$u&&Tt!==null){$u=!0;var e=0,t=Q;try{var n=Tt;for(Q=1;e<n.length;e++){var r=n[e];do r=r(!0);while(r!==null)}Tt=null,Hl=!1}catch(i){throw Tt!==null&&(Tt=Tt.slice(e+1)),Th(oc,fn),i}finally{Q=t,$u=!1}}return null}var Vn=[],Xn=0,Bo=null,Uo=0,Ye=[],Ke=0,En=null,Pt=1,$t="";function hn(e,t){Vn[Xn++]=Uo,Vn[Xn++]=Bo,Bo=e,Uo=t}function ip(e,t,n){Ye[Ke++]=Pt,Ye[Ke++]=$t,Ye[Ke++]=En,En=e;var r=Pt;e=$t;var i=32-st(r)-1;r&=~(1<<i),n+=1;var o=32-st(t)+i;if(30<o){var l=i-i%5;o=(r&(1<<l)-1).toString(32),r>>=l,i-=l,Pt=1<<32-st(t)+i|n<<i|r,$t=o+e}else Pt=1<<o|n<<i|r,$t=e}function pc(e){e.return!==null&&(hn(e,1),ip(e,1,0))}function mc(e){for(;e===Bo;)Bo=Vn[--Xn],Vn[Xn]=null,Uo=Vn[--Xn],Vn[Xn]=null;for(;e===En;)En=Ye[--Ke],Ye[Ke]=null,$t=Ye[--Ke],Ye[Ke]=null,Pt=Ye[--Ke],Ye[Ke]=null}var We=null,Be=null,te=!1,lt=null;function op(e,t){var n=Ze(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function Gf(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,We=e,Be=Kt(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,We=e,Be=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=En!==null?{id:Pt,overflow:$t}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=Ze(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,We=e,Be=null,!0):!1;default:return!1}}function Qa(e){return(e.mode&1)!==0&&(e.flags&128)===0}function qa(e){if(te){var t=Be;if(t){var n=t;if(!Gf(e,t)){if(Qa(e))throw Error(M(418));t=Kt(n.nextSibling);var r=We;t&&Gf(e,t)?op(r,n):(e.flags=e.flags&-4097|2,te=!1,We=e)}}else{if(Qa(e))throw Error(M(418));e.flags=e.flags&-4097|2,te=!1,We=e}}}function Yf(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;We=e}function Zi(e){if(e!==We)return!1;if(!te)return Yf(e),te=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!Ua(e.type,e.memoizedProps)),t&&(t=Be)){if(Qa(e))throw lp(),Error(M(418));for(;t;)op(e,t),t=Kt(t.nextSibling)}if(Yf(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(M(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(t===0){Be=Kt(e.nextSibling);break e}t--}else n!=="$"&&n!=="$!"&&n!=="$?"||t++}e=e.nextSibling}Be=null}}else Be=We?Kt(e.stateNode.nextSibling):null;return!0}function lp(){for(var e=Be;e;)e=Kt(e.nextSibling)}function sr(){Be=We=null,te=!1}function gc(e){lt===null?lt=[e]:lt.push(e)}var hv=Ot.ReactCurrentBatchConfig;function Rr(e,t,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(M(309));var r=n.stateNode}if(!r)throw Error(M(147,e));var i=r,o=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===o?t.ref:(t=function(l){var u=i.refs;l===null?delete u[o]:u[o]=l},t._stringRef=o,t)}if(typeof e!="string")throw Error(M(284));if(!n._owner)throw Error(M(290,e))}return e}function Ji(e,t){throw e=Object.prototype.toString.call(t),Error(M(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Kf(e){var t=e._init;return t(e._payload)}function up(e){function t(p,h){if(e){var g=p.deletions;g===null?(p.deletions=[h],p.flags|=16):g.push(h)}}function n(p,h){if(!e)return null;for(;h!==null;)t(p,h),h=h.sibling;return null}function r(p,h){for(p=new Map;h!==null;)h.key!==null?p.set(h.key,h):p.set(h.index,h),h=h.sibling;return p}function i(p,h){return p=tn(p,h),p.index=0,p.sibling=null,p}function o(p,h,g){return p.index=g,e?(g=p.alternate,g!==null?(g=g.index,g<h?(p.flags|=2,h):g):(p.flags|=2,h)):(p.flags|=1048576,h)}function l(p){return e&&p.alternate===null&&(p.flags|=2),p}function u(p,h,g,x){return h===null||h.tag!==6?(h=Ou(g,p.mode,x),h.return=p,h):(h=i(h,g),h.return=p,h)}function a(p,h,g,x){var w=g.type;return w===Dn?c(p,h,g.props.children,x,g.key):h!==null&&(h.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===Bt&&Kf(w)===h.type)?(x=i(h,g.props),x.ref=Rr(p,h,g),x.return=p,x):(x=Co(g.type,g.key,g.props,null,p.mode,x),x.ref=Rr(p,h,g),x.return=p,x)}function s(p,h,g,x){return h===null||h.tag!==4||h.stateNode.containerInfo!==g.containerInfo||h.stateNode.implementation!==g.implementation?(h=Fu(g,p.mode,x),h.return=p,h):(h=i(h,g.children||[]),h.return=p,h)}function c(p,h,g,x,w){return h===null||h.tag!==7?(h=_n(g,p.mode,x,w),h.return=p,h):(h=i(h,g),h.return=p,h)}function f(p,h,g){if(typeof h=="string"&&h!==""||typeof h=="number")return h=Ou(""+h,p.mode,g),h.return=p,h;if(typeof h=="object"&&h!==null){switch(h.$$typeof){case Bi:return g=Co(h.type,h.key,h.props,null,p.mode,g),g.ref=Rr(p,null,h),g.return=p,g;case Fn:return h=Fu(h,p.mode,g),h.return=p,h;case Bt:var x=h._init;return f(p,x(h._payload),g)}if(Fr(h)||Nr(h))return h=_n(h,p.mode,g,null),h.return=p,h;Ji(p,h)}return null}function d(p,h,g,x){var w=h!==null?h.key:null;if(typeof g=="string"&&g!==""||typeof g=="number")return w!==null?null:u(p,h,""+g,x);if(typeof g=="object"&&g!==null){switch(g.$$typeof){case Bi:return g.key===w?a(p,h,g,x):null;case Fn:return g.key===w?s(p,h,g,x):null;case Bt:return w=g._init,d(p,h,w(g._payload),x)}if(Fr(g)||Nr(g))return w!==null?null:c(p,h,g,x,null);Ji(p,g)}return null}function m(p,h,g,x,w){if(typeof x=="string"&&x!==""||typeof x=="number")return p=p.get(g)||null,u(h,p,""+x,w);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Bi:return p=p.get(x.key===null?g:x.key)||null,a(h,p,x,w);case Fn:return p=p.get(x.key===null?g:x.key)||null,s(h,p,x,w);case Bt:var S=x._init;return m(p,h,g,S(x._payload),w)}if(Fr(x)||Nr(x))return p=p.get(g)||null,c(h,p,x,w,null);Ji(h,x)}return null}function y(p,h,g,x){for(var w=null,S=null,_=h,T=h=0,I=null;_!==null&&T<g.length;T++){_.index>T?(I=_,_=null):I=_.sibling;var z=d(p,_,g[T],x);if(z===null){_===null&&(_=I);break}e&&_&&z.alternate===null&&t(p,_),h=o(z,h,T),S===null?w=z:S.sibling=z,S=z,_=I}if(T===g.length)return n(p,_),te&&hn(p,T),w;if(_===null){for(;T<g.length;T++)_=f(p,g[T],x),_!==null&&(h=o(_,h,T),S===null?w=_:S.sibling=_,S=_);return te&&hn(p,T),w}for(_=r(p,_);T<g.length;T++)I=m(_,p,T,g[T],x),I!==null&&(e&&I.alternate!==null&&_.delete(I.key===null?T:I.key),h=o(I,h,T),S===null?w=I:S.sibling=I,S=I);return e&&_.forEach(function(R){return t(p,R)}),te&&hn(p,T),w}function v(p,h,g,x){var w=Nr(g);if(typeof w!="function")throw Error(M(150));if(g=w.call(g),g==null)throw Error(M(151));for(var S=w=null,_=h,T=h=0,I=null,z=g.next();_!==null&&!z.done;T++,z=g.next()){_.index>T?(I=_,_=null):I=_.sibling;var R=d(p,_,z.value,x);if(R===null){_===null&&(_=I);break}e&&_&&R.alternate===null&&t(p,_),h=o(R,h,T),S===null?w=R:S.sibling=R,S=R,_=I}if(z.done)return n(p,_),te&&hn(p,T),w;if(_===null){for(;!z.done;T++,z=g.next())z=f(p,z.value,x),z!==null&&(h=o(z,h,T),S===null?w=z:S.sibling=z,S=z);return te&&hn(p,T),w}for(_=r(p,_);!z.done;T++,z=g.next())z=m(_,p,T,z.value,x),z!==null&&(e&&z.alternate!==null&&_.delete(z.key===null?T:z.key),h=o(z,h,T),S===null?w=z:S.sibling=z,S=z);return e&&_.forEach(function(W){return t(p,W)}),te&&hn(p,T),w}function k(p,h,g,x){if(typeof g=="object"&&g!==null&&g.type===Dn&&g.key===null&&(g=g.props.children),typeof g=="object"&&g!==null){switch(g.$$typeof){case Bi:e:{for(var w=g.key,S=h;S!==null;){if(S.key===w){if(w=g.type,w===Dn){if(S.tag===7){n(p,S.sibling),h=i(S,g.props.children),h.return=p,p=h;break e}}else if(S.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===Bt&&Kf(w)===S.type){n(p,S.sibling),h=i(S,g.props),h.ref=Rr(p,S,g),h.return=p,p=h;break e}n(p,S);break}else t(p,S);S=S.sibling}g.type===Dn?(h=_n(g.props.children,p.mode,x,g.key),h.return=p,p=h):(x=Co(g.type,g.key,g.props,null,p.mode,x),x.ref=Rr(p,h,g),x.return=p,p=x)}return l(p);case Fn:e:{for(S=g.key;h!==null;){if(h.key===S)if(h.tag===4&&h.stateNode.containerInfo===g.containerInfo&&h.stateNode.implementation===g.implementation){n(p,h.sibling),h=i(h,g.children||[]),h.return=p,p=h;break e}else{n(p,h);break}else t(p,h);h=h.sibling}h=Fu(g,p.mode,x),h.return=p,p=h}return l(p);case Bt:return S=g._init,k(p,h,S(g._payload),x)}if(Fr(g))return y(p,h,g,x);if(Nr(g))return v(p,h,g,x);Ji(p,g)}return typeof g=="string"&&g!==""||typeof g=="number"?(g=""+g,h!==null&&h.tag===6?(n(p,h.sibling),h=i(h,g),h.return=p,p=h):(n(p,h),h=Ou(g,p.mode,x),h.return=p,p=h),l(p)):n(p,h)}return k}var cr=up(!0),ap=up(!1),Wo=cn(null),Vo=null,Qn=null,yc=null;function vc(){yc=Qn=Vo=null}function xc(e){var t=Wo.current;Z(Wo),e._currentValue=t}function Ga(e,t,n){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function nr(e,t){Vo=e,yc=Qn=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(Le=!0),e.firstContext=null)}function et(e){var t=e._currentValue;if(yc!==e)if(e={context:e,memoizedValue:t,next:null},Qn===null){if(Vo===null)throw Error(M(308));Qn=e,Vo.dependencies={lanes:0,firstContext:e}}else Qn=Qn.next=e;return t}var yn=null;function wc(e){yn===null?yn=[e]:yn.push(e)}function sp(e,t,n,r){var i=t.interleaved;return i===null?(n.next=n,wc(t)):(n.next=i.next,i.next=n),t.interleaved=n,Lt(e,r)}function Lt(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}var Ut=!1;function _c(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function cp(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function zt(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Zt(e,t,n){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,H&2){var i=r.pending;return i===null?t.next=t:(t.next=i.next,i.next=t),r.pending=t,Lt(e,n)}return i=r.interleaved,i===null?(t.next=t,wc(r)):(t.next=i.next,i.next=t),r.interleaved=t,Lt(e,n)}function xo(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,lc(e,n)}}function Zf(e,t){var n=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var i=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?i=o=l:o=o.next=l,n=n.next}while(n!==null);o===null?i=o=t:o=o.next=t}else i=o=t;n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Xo(e,t,n,r){var i=e.updateQueue;Ut=!1;var o=i.firstBaseUpdate,l=i.lastBaseUpdate,u=i.shared.pending;if(u!==null){i.shared.pending=null;var a=u,s=a.next;a.next=null,l===null?o=s:l.next=s,l=a;var c=e.alternate;c!==null&&(c=c.updateQueue,u=c.lastBaseUpdate,u!==l&&(u===null?c.firstBaseUpdate=s:u.next=s,c.lastBaseUpdate=a))}if(o!==null){var f=i.baseState;l=0,c=s=a=null,u=o;do{var d=u.lane,m=u.eventTime;if((r&d)===d){c!==null&&(c=c.next={eventTime:m,lane:0,tag:u.tag,payload:u.payload,callback:u.callback,next:null});e:{var y=e,v=u;switch(d=t,m=n,v.tag){case 1:if(y=v.payload,typeof y=="function"){f=y.call(m,f,d);break e}f=y;break e;case 3:y.flags=y.flags&-65537|128;case 0:if(y=v.payload,d=typeof y=="function"?y.call(m,f,d):y,d==null)break e;f=ie({},f,d);break e;case 2:Ut=!0}}u.callback!==null&&u.lane!==0&&(e.flags|=64,d=i.effects,d===null?i.effects=[u]:d.push(u))}else m={eventTime:m,lane:d,tag:u.tag,payload:u.payload,callback:u.callback,next:null},c===null?(s=c=m,a=f):c=c.next=m,l|=d;if(u=u.next,u===null){if(u=i.shared.pending,u===null)break;d=u,u=d.next,d.next=null,i.lastBaseUpdate=d,i.shared.pending=null}}while(!0);if(c===null&&(a=f),i.baseState=a,i.firstBaseUpdate=s,i.lastBaseUpdate=c,t=i.shared.interleaved,t!==null){i=t;do l|=i.lane,i=i.next;while(i!==t)}else o===null&&(i.shared.lanes=0);Tn|=l,e.lanes=l,e.memoizedState=f}}function Jf(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(i!==null){if(r.callback=null,r=n,typeof i!="function")throw Error(M(191,i));i.call(r)}}}var zi={},kt=cn(zi),gi=cn(zi),yi=cn(zi);function vn(e){if(e===zi)throw Error(M(174));return e}function kc(e,t){switch(Y(yi,t),Y(gi,e),Y(kt,zi),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Pa(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=Pa(t,e)}Z(kt),Y(kt,t)}function fr(){Z(kt),Z(gi),Z(yi)}function fp(e){vn(yi.current);var t=vn(kt.current),n=Pa(t,e.type);t!==n&&(Y(gi,e),Y(kt,n))}function Sc(e){gi.current===e&&(Z(kt),Z(gi))}var ne=cn(0);function Qo(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var zu=[];function Mc(){for(var e=0;e<zu.length;e++)zu[e]._workInProgressVersionPrimary=null;zu.length=0}var wo=Ot.ReactCurrentDispatcher,Ru=Ot.ReactCurrentBatchConfig,Nn=0,re=null,fe=null,pe=null,qo=!1,Yr=!1,vi=0,pv=0;function Se(){throw Error(M(321))}function Cc(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ft(e[n],t[n]))return!1;return!0}function Ec(e,t,n,r,i,o){if(Nn=o,re=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,wo.current=e===null||e.memoizedState===null?vv:xv,e=n(r,i),Yr){o=0;do{if(Yr=!1,vi=0,25<=o)throw Error(M(301));o+=1,pe=fe=null,t.updateQueue=null,wo.current=wv,e=n(r,i)}while(Yr)}if(wo.current=Go,t=fe!==null&&fe.next!==null,Nn=0,pe=fe=re=null,qo=!1,t)throw Error(M(300));return e}function Nc(){var e=vi!==0;return vi=0,e}function mt(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return pe===null?re.memoizedState=pe=e:pe=pe.next=e,pe}function tt(){if(fe===null){var e=re.alternate;e=e!==null?e.memoizedState:null}else e=fe.next;var t=pe===null?re.memoizedState:pe.next;if(t!==null)pe=t,fe=e;else{if(e===null)throw Error(M(310));fe=e,e={memoizedState:fe.memoizedState,baseState:fe.baseState,baseQueue:fe.baseQueue,queue:fe.queue,next:null},pe===null?re.memoizedState=pe=e:pe=pe.next=e}return pe}function xi(e,t){return typeof t=="function"?t(e):t}function bu(e){var t=tt(),n=t.queue;if(n===null)throw Error(M(311));n.lastRenderedReducer=e;var r=fe,i=r.baseQueue,o=n.pending;if(o!==null){if(i!==null){var l=i.next;i.next=o.next,o.next=l}r.baseQueue=i=o,n.pending=null}if(i!==null){o=i.next,r=r.baseState;var u=l=null,a=null,s=o;do{var c=s.lane;if((Nn&c)===c)a!==null&&(a=a.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),r=s.hasEagerState?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};a===null?(u=a=f,l=r):a=a.next=f,re.lanes|=c,Tn|=c}s=s.next}while(s!==null&&s!==o);a===null?l=r:a.next=u,ft(r,t.memoizedState)||(Le=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=a,n.lastRenderedState=r}if(e=n.interleaved,e!==null){i=e;do o=i.lane,re.lanes|=o,Tn|=o,i=i.next;while(i!==e)}else i===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Lu(e){var t=tt(),n=t.queue;if(n===null)throw Error(M(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(i!==null){n.pending=null;var l=i=i.next;do o=e(o,l.action),l=l.next;while(l!==i);ft(o,t.memoizedState)||(Le=!0),t.memoizedState=o,t.baseQueue===null&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function dp(){}function hp(e,t){var n=re,r=tt(),i=t(),o=!ft(r.memoizedState,i);if(o&&(r.memoizedState=i,Le=!0),r=r.queue,Tc(gp.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||pe!==null&&pe.memoizedState.tag&1){if(n.flags|=2048,wi(9,mp.bind(null,n,r,i,t),void 0,null),ge===null)throw Error(M(349));Nn&30||pp(n,t,i)}return i}function pp(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=re.updateQueue,t===null?(t={lastEffect:null,stores:null},re.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function mp(e,t,n,r){t.value=n,t.getSnapshot=r,yp(t)&&vp(e)}function gp(e,t,n){return n(function(){yp(t)&&vp(e)})}function yp(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ft(e,n)}catch{return!0}}function vp(e){var t=Lt(e,1);t!==null&&ct(t,e,1,-1)}function ed(e){var t=mt();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xi,lastRenderedState:e},t.queue=e,e=e.dispatch=yv.bind(null,re,e),[t.memoizedState,e]}function wi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},t=re.updateQueue,t===null?(t={lastEffect:null,stores:null},re.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e)),e}function xp(){return tt().memoizedState}function _o(e,t,n,r){var i=mt();re.flags|=e,i.memoizedState=wi(1|t,n,void 0,r===void 0?null:r)}function jl(e,t,n,r){var i=tt();r=r===void 0?null:r;var o=void 0;if(fe!==null){var l=fe.memoizedState;if(o=l.destroy,r!==null&&Cc(r,l.deps)){i.memoizedState=wi(t,n,o,r);return}}re.flags|=e,i.memoizedState=wi(1|t,n,o,r)}function td(e,t){return _o(8390656,8,e,t)}function Tc(e,t){return jl(2048,8,e,t)}function wp(e,t){return jl(4,2,e,t)}function _p(e,t){return jl(4,4,e,t)}function kp(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Sp(e,t,n){return n=n!=null?n.concat([e]):null,jl(4,4,kp.bind(null,t,e),n)}function Pc(){}function Mp(e,t){var n=tt();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&Cc(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Cp(e,t){var n=tt();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&Cc(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ep(e,t,n){return Nn&21?(ft(n,t)||(n=zh(),re.lanes|=n,Tn|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,Le=!0),e.memoizedState=n)}function mv(e,t){var n=Q;Q=n!==0&&4>n?n:4,e(!0);var r=Ru.transition;Ru.transition={};try{e(!1),t()}finally{Q=n,Ru.transition=r}}function Np(){return tt().memoizedState}function gv(e,t,n){var r=en(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Tp(e))Pp(t,n);else if(n=sp(e,t,n,r),n!==null){var i=Pe();ct(n,e,r,i),$p(n,t,r)}}function yv(e,t,n){var r=en(e),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Tp(e))Pp(t,i);else{var o=e.alternate;if(e.lanes===0&&(o===null||o.lanes===0)&&(o=t.lastRenderedReducer,o!==null))try{var l=t.lastRenderedState,u=o(l,n);if(i.hasEagerState=!0,i.eagerState=u,ft(u,l)){var a=t.interleaved;a===null?(i.next=i,wc(t)):(i.next=a.next,a.next=i),t.interleaved=i;return}}catch{}finally{}n=sp(e,t,i,r),n!==null&&(i=Pe(),ct(n,e,r,i),$p(n,t,r))}}function Tp(e){var t=e.alternate;return e===re||t!==null&&t===re}function Pp(e,t){Yr=qo=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function $p(e,t,n){if(n&4194240){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,lc(e,n)}}var Go={readContext:et,useCallback:Se,useContext:Se,useEffect:Se,useImperativeHandle:Se,useInsertionEffect:Se,useLayoutEffect:Se,useMemo:Se,useReducer:Se,useRef:Se,useState:Se,useDebugValue:Se,useDeferredValue:Se,useTransition:Se,useMutableSource:Se,useSyncExternalStore:Se,useId:Se,unstable_isNewReconciler:!1},vv={readContext:et,useCallback:function(e,t){return mt().memoizedState=[e,t===void 0?null:t],e},useContext:et,useEffect:td,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,_o(4194308,4,kp.bind(null,t,e),n)},useLayoutEffect:function(e,t){return _o(4194308,4,e,t)},useInsertionEffect:function(e,t){return _o(4,2,e,t)},useMemo:function(e,t){var n=mt();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=mt();return t=n!==void 0?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=gv.bind(null,re,e),[r.memoizedState,e]},useRef:function(e){var t=mt();return e={current:e},t.memoizedState=e},useState:ed,useDebugValue:Pc,useDeferredValue:function(e){return mt().memoizedState=e},useTransition:function(){var e=ed(!1),t=e[0];return e=mv.bind(null,e[1]),mt().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=re,i=mt();if(te){if(n===void 0)throw Error(M(407));n=n()}else{if(n=t(),ge===null)throw Error(M(349));Nn&30||pp(r,t,n)}i.memoizedState=n;var o={value:n,getSnapshot:t};return i.queue=o,td(gp.bind(null,r,o,e),[e]),r.flags|=2048,wi(9,mp.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=mt(),t=ge.identifierPrefix;if(te){var n=$t,r=Pt;n=(r&~(1<<32-st(r)-1)).toString(32)+n,t=":"+t+"R"+n,n=vi++,0<n&&(t+="H"+n.toString(32)),t+=":"}else n=pv++,t=":"+t+"r"+n.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},xv={readContext:et,useCallback:Mp,useContext:et,useEffect:Tc,useImperativeHandle:Sp,useInsertionEffect:wp,useLayoutEffect:_p,useMemo:Cp,useReducer:bu,useRef:xp,useState:function(){return bu(xi)},useDebugValue:Pc,useDeferredValue:function(e){var t=tt();return Ep(t,fe.memoizedState,e)},useTransition:function(){var e=bu(xi)[0],t=tt().memoizedState;return[e,t]},useMutableSource:dp,useSyncExternalStore:hp,useId:Np,unstable_isNewReconciler:!1},wv={readContext:et,useCallback:Mp,useContext:et,useEffect:Tc,useImperativeHandle:Sp,useInsertionEffect:wp,useLayoutEffect:_p,useMemo:Cp,useReducer:Lu,useRef:xp,useState:function(){return Lu(xi)},useDebugValue:Pc,useDeferredValue:function(e){var t=tt();return fe===null?t.memoizedState=e:Ep(t,fe.memoizedState,e)},useTransition:function(){var e=Lu(xi)[0],t=tt().memoizedState;return[e,t]},useMutableSource:dp,useSyncExternalStore:hp,useId:Np,unstable_isNewReconciler:!1};function it(e,t){if(e&&e.defaultProps){t=ie({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}function Ya(e,t,n,r){t=e.memoizedState,n=n(r,t),n=n==null?t:ie({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var Bl={isMounted:function(e){return(e=e._reactInternals)?bn(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Pe(),i=en(e),o=zt(r,i);o.payload=t,n!=null&&(o.callback=n),t=Zt(e,o,i),t!==null&&(ct(t,e,i,r),xo(t,e,i))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Pe(),i=en(e),o=zt(r,i);o.tag=1,o.payload=t,n!=null&&(o.callback=n),t=Zt(e,o,i),t!==null&&(ct(t,e,i,r),xo(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Pe(),r=en(e),i=zt(n,r);i.tag=2,t!=null&&(i.callback=t),t=Zt(e,i,r),t!==null&&(ct(t,e,r,n),xo(t,e,r))}};function nd(e,t,n,r,i,o,l){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,o,l):t.prototype&&t.prototype.isPureReactComponent?!di(n,r)||!di(i,o):!0}function zp(e,t,n){var r=!1,i=on,o=t.contextType;return typeof o=="object"&&o!==null?o=et(o):(i=Oe(t)?Cn:Ne.current,r=t.contextTypes,o=(r=r!=null)?ar(e,i):on),t=new t(n,o),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Bl,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function rd(e,t,n,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(n,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Bl.enqueueReplaceState(t,t.state,null)}function Ka(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs={},_c(e);var o=t.contextType;typeof o=="object"&&o!==null?i.context=et(o):(o=Oe(t)?Cn:Ne.current,i.context=ar(e,o)),i.state=e.memoizedState,o=t.getDerivedStateFromProps,typeof o=="function"&&(Ya(e,t,o,n),i.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(t=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),t!==i.state&&Bl.enqueueReplaceState(i,i.state,null),Xo(e,n,i,r),i.state=e.memoizedState),typeof i.componentDidMount=="function"&&(e.flags|=4194308)}function dr(e,t){try{var n="",r=t;do n+=qg(r),r=r.return;while(r);var i=n}catch(o){i=`
Error generating stack: `+o.message+`
`+o.stack}return{value:e,source:t,stack:i,digest:null}}function Au(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function Za(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var _v=typeof WeakMap=="function"?WeakMap:Map;function Rp(e,t,n){n=zt(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ko||(Ko=!0,as=r),Za(e,t)},n}function bp(e,t,n){n=zt(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r=="function"){var i=t.value;n.payload=function(){return r(i)},n.callback=function(){Za(e,t)}}var o=e.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){Za(e,t),typeof r!="function"&&(Jt===null?Jt=new Set([this]):Jt.add(this));var l=t.stack;this.componentDidCatch(t.value,{componentStack:l!==null?l:""})}),n}function id(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new _v;var i=new Set;r.set(t,i)}else i=r.get(t),i===void 0&&(i=new Set,r.set(t,i));i.has(n)||(i.add(n),e=Av.bind(null,e,t,n),t.then(e,e))}function od(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function ld(e,t,n,r,i){return e.mode&1?(e.flags|=65536,e.lanes=i,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=zt(-1,1),t.tag=2,Zt(n,t,1))),n.lanes|=1),e)}var kv=Ot.ReactCurrentOwner,Le=!1;function Te(e,t,n,r){t.child=e===null?ap(t,null,n,r):cr(t,e.child,n,r)}function ud(e,t,n,r,i){n=n.render;var o=t.ref;return nr(t,i),r=Ec(e,t,n,r,o,i),n=Nc(),e!==null&&!Le?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,At(e,t,i)):(te&&n&&pc(t),t.flags|=1,Te(e,t,r,i),t.child)}function ad(e,t,n,r,i){if(e===null){var o=n.type;return typeof o=="function"&&!Oc(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=o,Lp(e,t,o,r,i)):(e=Co(n.type,null,r,t,t.mode,i),e.ref=t.ref,e.return=t,t.child=e)}if(o=e.child,!(e.lanes&i)){var l=o.memoizedProps;if(n=n.compare,n=n!==null?n:di,n(l,r)&&e.ref===t.ref)return At(e,t,i)}return t.flags|=1,e=tn(o,r),e.ref=t.ref,e.return=t,t.child=e}function Lp(e,t,n,r,i){if(e!==null){var o=e.memoizedProps;if(di(o,r)&&e.ref===t.ref)if(Le=!1,t.pendingProps=r=o,(e.lanes&i)!==0)e.flags&131072&&(Le=!0);else return t.lanes=e.lanes,At(e,t,i)}return Ja(e,t,n,r,i)}function Ap(e,t,n){var r=t.pendingProps,i=r.children,o=e!==null?e.memoizedState:null;if(r.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Y(Gn,je),je|=n;else{if(!(n&1073741824))return e=o!==null?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Y(Gn,je),je|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,Y(Gn,je),je|=r}else o!==null?(r=o.baseLanes|n,t.memoizedState=null):r=n,Y(Gn,je),je|=r;return Te(e,t,i,n),t.child}function Ip(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ja(e,t,n,r,i){var o=Oe(n)?Cn:Ne.current;return o=ar(t,o),nr(t,i),n=Ec(e,t,n,r,o,i),r=Nc(),e!==null&&!Le?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,At(e,t,i)):(te&&r&&pc(t),t.flags|=1,Te(e,t,n,i),t.child)}function sd(e,t,n,r,i){if(Oe(n)){var o=!0;jo(t)}else o=!1;if(nr(t,i),t.stateNode===null)ko(e,t),zp(t,n,r),Ka(t,n,r,i),r=!0;else if(e===null){var l=t.stateNode,u=t.memoizedProps;l.props=u;var a=l.context,s=n.contextType;typeof s=="object"&&s!==null?s=et(s):(s=Oe(n)?Cn:Ne.current,s=ar(t,s));var c=n.getDerivedStateFromProps,f=typeof c=="function"||typeof l.getSnapshotBeforeUpdate=="function";f||typeof l.UNSAFE_componentWillReceiveProps!="function"&&typeof l.componentWillReceiveProps!="function"||(u!==r||a!==s)&&rd(t,l,r,s),Ut=!1;var d=t.memoizedState;l.state=d,Xo(t,r,l,i),a=t.memoizedState,u!==r||d!==a||Ie.current||Ut?(typeof c=="function"&&(Ya(t,n,c,r),a=t.memoizedState),(u=Ut||nd(t,n,u,r,d,a,s))?(f||typeof l.UNSAFE_componentWillMount!="function"&&typeof l.componentWillMount!="function"||(typeof l.componentWillMount=="function"&&l.componentWillMount(),typeof l.UNSAFE_componentWillMount=="function"&&l.UNSAFE_componentWillMount()),typeof l.componentDidMount=="function"&&(t.flags|=4194308)):(typeof l.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=a),l.props=r,l.state=a,l.context=s,r=u):(typeof l.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{l=t.stateNode,cp(e,t),u=t.memoizedProps,s=t.type===t.elementType?u:it(t.type,u),l.props=s,f=t.pendingProps,d=l.context,a=n.contextType,typeof a=="object"&&a!==null?a=et(a):(a=Oe(n)?Cn:Ne.current,a=ar(t,a));var m=n.getDerivedStateFromProps;(c=typeof m=="function"||typeof l.getSnapshotBeforeUpdate=="function")||typeof l.UNSAFE_componentWillReceiveProps!="function"&&typeof l.componentWillReceiveProps!="function"||(u!==f||d!==a)&&rd(t,l,r,a),Ut=!1,d=t.memoizedState,l.state=d,Xo(t,r,l,i);var y=t.memoizedState;u!==f||d!==y||Ie.current||Ut?(typeof m=="function"&&(Ya(t,n,m,r),y=t.memoizedState),(s=Ut||nd(t,n,s,r,d,y,a)||!1)?(c||typeof l.UNSAFE_componentWillUpdate!="function"&&typeof l.componentWillUpdate!="function"||(typeof l.componentWillUpdate=="function"&&l.componentWillUpdate(r,y,a),typeof l.UNSAFE_componentWillUpdate=="function"&&l.UNSAFE_componentWillUpdate(r,y,a)),typeof l.componentDidUpdate=="function"&&(t.flags|=4),typeof l.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof l.componentDidUpdate!="function"||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),typeof l.getSnapshotBeforeUpdate!="function"||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=y),l.props=r,l.state=y,l.context=a,r=s):(typeof l.componentDidUpdate!="function"||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),typeof l.getSnapshotBeforeUpdate!="function"||u===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return es(e,t,n,r,o,i)}function es(e,t,n,r,i,o){Ip(e,t);var l=(t.flags&128)!==0;if(!r&&!l)return i&&qf(t,n,!1),At(e,t,o);r=t.stateNode,kv.current=t;var u=l&&typeof n.getDerivedStateFromError!="function"?null:r.render();return t.flags|=1,e!==null&&l?(t.child=cr(t,e.child,null,o),t.child=cr(t,null,u,o)):Te(e,t,u,o),t.memoizedState=r.state,i&&qf(t,n,!0),t.child}function Op(e){var t=e.stateNode;t.pendingContext?Qf(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Qf(e,t.context,!1),kc(e,t.containerInfo)}function cd(e,t,n,r,i){return sr(),gc(i),t.flags|=256,Te(e,t,n,r),t.child}var ts={dehydrated:null,treeContext:null,retryLane:0};function ns(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fp(e,t,n){var r=t.pendingProps,i=ne.current,o=!1,l=(t.flags&128)!==0,u;if((u=l)||(u=e!==null&&e.memoizedState===null?!1:(i&2)!==0),u?(o=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(i|=1),Y(ne,i&1),e===null)return qa(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(l=r.children,e=r.fallback,o?(r=t.mode,o=t.child,l={mode:"hidden",children:l},!(r&1)&&o!==null?(o.childLanes=0,o.pendingProps=l):o=Vl(l,r,0,null),e=_n(e,r,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=ns(n),t.memoizedState=ts,e):$c(t,l));if(i=e.memoizedState,i!==null&&(u=i.dehydrated,u!==null))return Sv(e,t,l,r,u,i,n);if(o){o=r.fallback,l=t.mode,i=e.child,u=i.sibling;var a={mode:"hidden",children:r.children};return!(l&1)&&t.child!==i?(r=t.child,r.childLanes=0,r.pendingProps=a,t.deletions=null):(r=tn(i,a),r.subtreeFlags=i.subtreeFlags&14680064),u!==null?o=tn(u,o):(o=_n(o,l,n,null),o.flags|=2),o.return=t,r.return=t,r.sibling=o,t.child=r,r=o,o=t.child,l=e.child.memoizedState,l=l===null?ns(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=ts,r}return o=e.child,e=o.sibling,r=tn(o,{mode:"visible",children:r.children}),!(t.mode&1)&&(r.lanes=n),r.return=t,r.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function $c(e,t){return t=Vl({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function eo(e,t,n,r){return r!==null&&gc(r),cr(t,e.child,null,n),e=$c(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function Sv(e,t,n,r,i,o,l){if(n)return t.flags&256?(t.flags&=-257,r=Au(Error(M(422))),eo(e,t,l,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(o=r.fallback,i=t.mode,r=Vl({mode:"visible",children:r.children},i,0,null),o=_n(o,i,l,null),o.flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,t.mode&1&&cr(t,e.child,null,l),t.child.memoizedState=ns(l),t.memoizedState=ts,o);if(!(t.mode&1))return eo(e,t,l,null);if(i.data==="$!"){if(r=i.nextSibling&&i.nextSibling.dataset,r)var u=r.dgst;return r=u,o=Error(M(419)),r=Au(o,r,void 0),eo(e,t,l,r)}if(u=(l&e.childLanes)!==0,Le||u){if(r=ge,r!==null){switch(l&-l){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=i&(r.suspendedLanes|l)?0:i,i!==0&&i!==o.retryLane&&(o.retryLane=i,Lt(e,i),ct(r,e,i,-1))}return Ic(),r=Au(Error(M(421))),eo(e,t,l,r)}return i.data==="$?"?(t.flags|=128,t.child=e.child,t=Iv.bind(null,e),i._reactRetry=t,null):(e=o.treeContext,Be=Kt(i.nextSibling),We=t,te=!0,lt=null,e!==null&&(Ye[Ke++]=Pt,Ye[Ke++]=$t,Ye[Ke++]=En,Pt=e.id,$t=e.overflow,En=t),t=$c(t,r.children),t.flags|=4096,t)}function fd(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),Ga(e.return,t,n)}function Iu(e,t,n,r,i){var o=e.memoizedState;o===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=i)}function Dp(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(Te(e,t,r.children,n),r=ne.current,r&2)r=r&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&fd(e,n,t);else if(e.tag===19)fd(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Y(ne,r),!(t.mode&1))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;n!==null;)e=n.alternate,e!==null&&Qo(e)===null&&(i=n),n=n.sibling;n=i,n===null?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Iu(t,!1,i,n,o);break;case"backwards":for(n=null,i=t.child,t.child=null;i!==null;){if(e=i.alternate,e!==null&&Qo(e)===null){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Iu(t,!0,n,null,o);break;case"together":Iu(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function ko(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function At(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),Tn|=t.lanes,!(n&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(M(153));if(t.child!==null){for(e=t.child,n=tn(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=tn(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function Mv(e,t,n){switch(t.tag){case 3:Op(t),sr();break;case 5:fp(t);break;case 1:Oe(t.type)&&jo(t);break;case 4:kc(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;Y(Wo,r._currentValue),r._currentValue=i;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(Y(ne,ne.current&1),t.flags|=128,null):n&t.child.childLanes?Fp(e,t,n):(Y(ne,ne.current&1),e=At(e,t,n),e!==null?e.sibling:null);Y(ne,ne.current&1);break;case 19:if(r=(n&t.childLanes)!==0,e.flags&128){if(r)return Dp(e,t,n);t.flags|=128}if(i=t.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),Y(ne,ne.current),r)break;return null;case 22:case 23:return t.lanes=0,Ap(e,t,n)}return At(e,t,n)}var Hp,rs,jp,Bp;Hp=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};rs=function(){};jp=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,vn(kt.current);var o=null;switch(n){case"input":i=Ca(e,i),r=Ca(e,r),o=[];break;case"select":i=ie({},i,{value:void 0}),r=ie({},r,{value:void 0}),o=[];break;case"textarea":i=Ta(e,i),r=Ta(e,r),o=[];break;default:typeof i.onClick!="function"&&typeof r.onClick=="function"&&(e.onclick=Do)}$a(n,r);var l;n=null;for(s in i)if(!r.hasOwnProperty(s)&&i.hasOwnProperty(s)&&i[s]!=null)if(s==="style"){var u=i[s];for(l in u)u.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else s!=="dangerouslySetInnerHTML"&&s!=="children"&&s!=="suppressContentEditableWarning"&&s!=="suppressHydrationWarning"&&s!=="autoFocus"&&(oi.hasOwnProperty(s)?o||(o=[]):(o=o||[]).push(s,null));for(s in r){var a=r[s];if(u=i!=null?i[s]:void 0,r.hasOwnProperty(s)&&a!==u&&(a!=null||u!=null))if(s==="style")if(u){for(l in u)!u.hasOwnProperty(l)||a&&a.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in a)a.hasOwnProperty(l)&&u[l]!==a[l]&&(n||(n={}),n[l]=a[l])}else n||(o||(o=[]),o.push(s,n)),n=a;else s==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,u=u?u.__html:void 0,a!=null&&u!==a&&(o=o||[]).push(s,a)):s==="children"?typeof a!="string"&&typeof a!="number"||(o=o||[]).push(s,""+a):s!=="suppressContentEditableWarning"&&s!=="suppressHydrationWarning"&&(oi.hasOwnProperty(s)?(a!=null&&s==="onScroll"&&K("scroll",e),o||u===a||(o=[])):(o=o||[]).push(s,a))}n&&(o=o||[]).push("style",n);var s=o;(t.updateQueue=s)&&(t.flags|=4)}};Bp=function(e,t,n,r){n!==r&&(t.flags|=4)};function br(e,t){if(!te)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Me(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var i=e.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags&14680064,r|=i.flags&14680064,i.return=e,i=i.sibling;else for(i=e.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Cv(e,t,n){var r=t.pendingProps;switch(mc(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Me(t),null;case 1:return Oe(t.type)&&Ho(),Me(t),null;case 3:return r=t.stateNode,fr(),Z(Ie),Z(Ne),Mc(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(Zi(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,lt!==null&&(fs(lt),lt=null))),rs(e,t),Me(t),null;case 5:Sc(t);var i=vn(yi.current);if(n=t.type,e!==null&&t.stateNode!=null)jp(e,t,n,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(M(166));return Me(t),null}if(e=vn(kt.current),Zi(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[vt]=t,r[mi]=o,e=(t.mode&1)!==0,n){case"dialog":K("cancel",r),K("close",r);break;case"iframe":case"object":case"embed":K("load",r);break;case"video":case"audio":for(i=0;i<Hr.length;i++)K(Hr[i],r);break;case"source":K("error",r);break;case"img":case"image":case"link":K("error",r),K("load",r);break;case"details":K("toggle",r);break;case"input":wf(r,o),K("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},K("invalid",r);break;case"textarea":kf(r,o),K("invalid",r)}$a(n,o),i=null;for(var l in o)if(o.hasOwnProperty(l)){var u=o[l];l==="children"?typeof u=="string"?r.textContent!==u&&(o.suppressHydrationWarning!==!0&&Ki(r.textContent,u,e),i=["children",u]):typeof u=="number"&&r.textContent!==""+u&&(o.suppressHydrationWarning!==!0&&Ki(r.textContent,u,e),i=["children",""+u]):oi.hasOwnProperty(l)&&u!=null&&l==="onScroll"&&K("scroll",r)}switch(n){case"input":Ui(r),_f(r,o,!0);break;case"textarea":Ui(r),Sf(r);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(r.onclick=Do)}r=i,t.updateQueue=r,r!==null&&(t.flags|=4)}else{l=i.nodeType===9?i:i.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=gh(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=l.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof r.is=="string"?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),n==="select"&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[vt]=t,e[mi]=r,Hp(e,t,!1,!1),t.stateNode=e;e:{switch(l=za(n,r),n){case"dialog":K("cancel",e),K("close",e),i=r;break;case"iframe":case"object":case"embed":K("load",e),i=r;break;case"video":case"audio":for(i=0;i<Hr.length;i++)K(Hr[i],e);i=r;break;case"source":K("error",e),i=r;break;case"img":case"image":case"link":K("error",e),K("load",e),i=r;break;case"details":K("toggle",e),i=r;break;case"input":wf(e,r),i=Ca(e,r),K("invalid",e);break;case"option":i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=ie({},r,{value:void 0}),K("invalid",e);break;case"textarea":kf(e,r),i=Ta(e,r),K("invalid",e);break;default:i=r}$a(n,i),u=i;for(o in u)if(u.hasOwnProperty(o)){var a=u[o];o==="style"?xh(e,a):o==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,a!=null&&yh(e,a)):o==="children"?typeof a=="string"?(n!=="textarea"||a!=="")&&li(e,a):typeof a=="number"&&li(e,""+a):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(oi.hasOwnProperty(o)?a!=null&&o==="onScroll"&&K("scroll",e):a!=null&&ec(e,o,a,l))}switch(n){case"input":Ui(e),_f(e,r,!1);break;case"textarea":Ui(e),Sf(e);break;case"option":r.value!=null&&e.setAttribute("value",""+rn(r.value));break;case"select":e.multiple=!!r.multiple,o=r.value,o!=null?Zn(e,!!r.multiple,o,!1):r.defaultValue!=null&&Zn(e,!!r.multiple,r.defaultValue,!0);break;default:typeof i.onClick=="function"&&(e.onclick=Do)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return Me(t),null;case 6:if(e&&t.stateNode!=null)Bp(e,t,e.memoizedProps,r);else{if(typeof r!="string"&&t.stateNode===null)throw Error(M(166));if(n=vn(yi.current),vn(kt.current),Zi(t)){if(r=t.stateNode,n=t.memoizedProps,r[vt]=t,(o=r.nodeValue!==n)&&(e=We,e!==null))switch(e.tag){case 3:Ki(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Ki(r.nodeValue,n,(e.mode&1)!==0)}o&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[vt]=t,t.stateNode=r}return Me(t),null;case 13:if(Z(ne),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(te&&Be!==null&&t.mode&1&&!(t.flags&128))lp(),sr(),t.flags|=98560,o=!1;else if(o=Zi(t),r!==null&&r.dehydrated!==null){if(e===null){if(!o)throw Error(M(318));if(o=t.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(M(317));o[vt]=t}else sr(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;Me(t),o=!1}else lt!==null&&(fs(lt),lt=null),o=!0;if(!o)return t.flags&65536?t:null}return t.flags&128?(t.lanes=n,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,t.mode&1&&(e===null||ne.current&1?de===0&&(de=3):Ic())),t.updateQueue!==null&&(t.flags|=4),Me(t),null);case 4:return fr(),rs(e,t),e===null&&hi(t.stateNode.containerInfo),Me(t),null;case 10:return xc(t.type._context),Me(t),null;case 17:return Oe(t.type)&&Ho(),Me(t),null;case 19:if(Z(ne),o=t.memoizedState,o===null)return Me(t),null;if(r=(t.flags&128)!==0,l=o.rendering,l===null)if(r)br(o,!1);else{if(de!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(l=Qo(e),l!==null){for(t.flags|=128,br(o,!1),r=l.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)o=n,e=r,o.flags&=14680066,l=o.alternate,l===null?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Y(ne,ne.current&1|2),t.child}e=e.sibling}o.tail!==null&&ue()>hr&&(t.flags|=128,r=!0,br(o,!1),t.lanes=4194304)}else{if(!r)if(e=Qo(l),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),br(o,!0),o.tail===null&&o.tailMode==="hidden"&&!l.alternate&&!te)return Me(t),null}else 2*ue()-o.renderingStartTime>hr&&n!==1073741824&&(t.flags|=128,r=!0,br(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(n=o.last,n!==null?n.sibling=l:t.child=l,o.last=l)}return o.tail!==null?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=ue(),t.sibling=null,n=ne.current,Y(ne,r?n&1|2:n&1),t):(Me(t),null);case 22:case 23:return Ac(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&t.mode&1?je&1073741824&&(Me(t),t.subtreeFlags&6&&(t.flags|=8192)):Me(t),null;case 24:return null;case 25:return null}throw Error(M(156,t.tag))}function Ev(e,t){switch(mc(t),t.tag){case 1:return Oe(t.type)&&Ho(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return fr(),Z(Ie),Z(Ne),Mc(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return Sc(t),null;case 13:if(Z(ne),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(M(340));sr()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return Z(ne),null;case 4:return fr(),null;case 10:return xc(t.type._context),null;case 22:case 23:return Ac(),null;case 24:return null;default:return null}}var to=!1,Ee=!1,Nv=typeof WeakSet=="function"?WeakSet:Set,$=null;function qn(e,t){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){oe(e,t,r)}else n.current=null}function is(e,t,n){try{n()}catch(r){oe(e,t,r)}}var dd=!1;function Tv(e,t){if(ja=Io,e=Qh(),hc(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var i=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var l=0,u=-1,a=-1,s=0,c=0,f=e,d=null;t:for(;;){for(var m;f!==n||i!==0&&f.nodeType!==3||(u=l+i),f!==o||r!==0&&f.nodeType!==3||(a=l+r),f.nodeType===3&&(l+=f.nodeValue.length),(m=f.firstChild)!==null;)d=f,f=m;for(;;){if(f===e)break t;if(d===n&&++s===i&&(u=l),d===o&&++c===r&&(a=l),(m=f.nextSibling)!==null)break;f=d,d=f.parentNode}f=m}n=u===-1||a===-1?null:{start:u,end:a}}else n=null}n=n||{start:0,end:0}}else n=null;for(Ba={focusedElem:e,selectionRange:n},Io=!1,$=t;$!==null;)if(t=$,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,$=e;else for(;$!==null;){t=$;try{var y=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(y!==null){var v=y.memoizedProps,k=y.memoizedState,p=t.stateNode,h=p.getSnapshotBeforeUpdate(t.elementType===t.type?v:it(t.type,v),k);p.__reactInternalSnapshotBeforeUpdate=h}break;case 3:var g=t.stateNode.containerInfo;g.nodeType===1?g.textContent="":g.nodeType===9&&g.documentElement&&g.removeChild(g.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(M(163))}}catch(x){oe(t,t.return,x)}if(e=t.sibling,e!==null){e.return=t.return,$=e;break}$=t.return}return y=dd,dd=!1,y}function Kr(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var i=r=r.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,o!==void 0&&is(t,n,o)}i=i.next}while(i!==r)}}function Ul(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function os(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t=="function"?t(e):t.current=e}}function Up(e){var t=e.alternate;t!==null&&(e.alternate=null,Up(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[vt],delete t[mi],delete t[Va],delete t[cv],delete t[fv])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Wp(e){return e.tag===5||e.tag===3||e.tag===4}function hd(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Wp(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function ls(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=Do));else if(r!==4&&(e=e.child,e!==null))for(ls(e,t,n),e=e.sibling;e!==null;)ls(e,t,n),e=e.sibling}function us(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(us(e,t,n),e=e.sibling;e!==null;)us(e,t,n),e=e.sibling}var ve=null,ot=!1;function jt(e,t,n){for(n=n.child;n!==null;)Vp(e,t,n),n=n.sibling}function Vp(e,t,n){if(_t&&typeof _t.onCommitFiberUnmount=="function")try{_t.onCommitFiberUnmount(Al,n)}catch{}switch(n.tag){case 5:Ee||qn(n,t);case 6:var r=ve,i=ot;ve=null,jt(e,t,n),ve=r,ot=i,ve!==null&&(ot?(e=ve,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):ve.removeChild(n.stateNode));break;case 18:ve!==null&&(ot?(e=ve,n=n.stateNode,e.nodeType===8?Pu(e.parentNode,n):e.nodeType===1&&Pu(e,n),ci(e)):Pu(ve,n.stateNode));break;case 4:r=ve,i=ot,ve=n.stateNode.containerInfo,ot=!0,jt(e,t,n),ve=r,ot=i;break;case 0:case 11:case 14:case 15:if(!Ee&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){i=r=r.next;do{var o=i,l=o.destroy;o=o.tag,l!==void 0&&(o&2||o&4)&&is(n,t,l),i=i.next}while(i!==r)}jt(e,t,n);break;case 1:if(!Ee&&(qn(n,t),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(u){oe(n,t,u)}jt(e,t,n);break;case 21:jt(e,t,n);break;case 22:n.mode&1?(Ee=(r=Ee)||n.memoizedState!==null,jt(e,t,n),Ee=r):jt(e,t,n);break;default:jt(e,t,n)}}function pd(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new Nv),t.forEach(function(r){var i=Ov.bind(null,e,r);n.has(r)||(n.add(r),r.then(i,i))})}}function rt(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];try{var o=e,l=t,u=l;e:for(;u!==null;){switch(u.tag){case 5:ve=u.stateNode,ot=!1;break e;case 3:ve=u.stateNode.containerInfo,ot=!0;break e;case 4:ve=u.stateNode.containerInfo,ot=!0;break e}u=u.return}if(ve===null)throw Error(M(160));Vp(o,l,i),ve=null,ot=!1;var a=i.alternate;a!==null&&(a.return=null),i.return=null}catch(s){oe(i,t,s)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)Xp(t,e),t=t.sibling}function Xp(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(rt(t,e),pt(e),r&4){try{Kr(3,e,e.return),Ul(3,e)}catch(v){oe(e,e.return,v)}try{Kr(5,e,e.return)}catch(v){oe(e,e.return,v)}}break;case 1:rt(t,e),pt(e),r&512&&n!==null&&qn(n,n.return);break;case 5:if(rt(t,e),pt(e),r&512&&n!==null&&qn(n,n.return),e.flags&32){var i=e.stateNode;try{li(i,"")}catch(v){oe(e,e.return,v)}}if(r&4&&(i=e.stateNode,i!=null)){var o=e.memoizedProps,l=n!==null?n.memoizedProps:o,u=e.type,a=e.updateQueue;if(e.updateQueue=null,a!==null)try{u==="input"&&o.type==="radio"&&o.name!=null&&ph(i,o),za(u,l);var s=za(u,o);for(l=0;l<a.length;l+=2){var c=a[l],f=a[l+1];c==="style"?xh(i,f):c==="dangerouslySetInnerHTML"?yh(i,f):c==="children"?li(i,f):ec(i,c,f,s)}switch(u){case"input":Ea(i,o);break;case"textarea":mh(i,o);break;case"select":var d=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var m=o.value;m!=null?Zn(i,!!o.multiple,m,!1):d!==!!o.multiple&&(o.defaultValue!=null?Zn(i,!!o.multiple,o.defaultValue,!0):Zn(i,!!o.multiple,o.multiple?[]:"",!1))}i[mi]=o}catch(v){oe(e,e.return,v)}}break;case 6:if(rt(t,e),pt(e),r&4){if(e.stateNode===null)throw Error(M(162));i=e.stateNode,o=e.memoizedProps;try{i.nodeValue=o}catch(v){oe(e,e.return,v)}}break;case 3:if(rt(t,e),pt(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{ci(t.containerInfo)}catch(v){oe(e,e.return,v)}break;case 4:rt(t,e),pt(e);break;case 13:rt(t,e),pt(e),i=e.child,i.flags&8192&&(o=i.memoizedState!==null,i.stateNode.isHidden=o,!o||i.alternate!==null&&i.alternate.memoizedState!==null||(bc=ue())),r&4&&pd(e);break;case 22:if(c=n!==null&&n.memoizedState!==null,e.mode&1?(Ee=(s=Ee)||c,rt(t,e),Ee=s):rt(t,e),pt(e),r&8192){if(s=e.memoizedState!==null,(e.stateNode.isHidden=s)&&!c&&e.mode&1)for($=e,c=e.child;c!==null;){for(f=$=c;$!==null;){switch(d=$,m=d.child,d.tag){case 0:case 11:case 14:case 15:Kr(4,d,d.return);break;case 1:qn(d,d.return);var y=d.stateNode;if(typeof y.componentWillUnmount=="function"){r=d,n=d.return;try{t=r,y.props=t.memoizedProps,y.state=t.memoizedState,y.componentWillUnmount()}catch(v){oe(r,n,v)}}break;case 5:qn(d,d.return);break;case 22:if(d.memoizedState!==null){gd(f);continue}}m!==null?(m.return=d,$=m):gd(f)}c=c.sibling}e:for(c=null,f=e;;){if(f.tag===5){if(c===null){c=f;try{i=f.stateNode,s?(o=i.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(u=f.stateNode,a=f.memoizedProps.style,l=a!=null&&a.hasOwnProperty("display")?a.display:null,u.style.display=vh("display",l))}catch(v){oe(e,e.return,v)}}}else if(f.tag===6){if(c===null)try{f.stateNode.nodeValue=s?"":f.memoizedProps}catch(v){oe(e,e.return,v)}}else if((f.tag!==22&&f.tag!==23||f.memoizedState===null||f===e)&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;f.sibling===null;){if(f.return===null||f.return===e)break e;c===f&&(c=null),f=f.return}c===f&&(c=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:rt(t,e),pt(e),r&4&&pd(e);break;case 21:break;default:rt(t,e),pt(e)}}function pt(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(Wp(n)){var r=n;break e}n=n.return}throw Error(M(160))}switch(r.tag){case 5:var i=r.stateNode;r.flags&32&&(li(i,""),r.flags&=-33);var o=hd(e);us(e,o,i);break;case 3:case 4:var l=r.stateNode.containerInfo,u=hd(e);ls(e,u,l);break;default:throw Error(M(161))}}catch(a){oe(e,e.return,a)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function Pv(e,t,n){$=e,Qp(e)}function Qp(e,t,n){for(var r=(e.mode&1)!==0;$!==null;){var i=$,o=i.child;if(i.tag===22&&r){var l=i.memoizedState!==null||to;if(!l){var u=i.alternate,a=u!==null&&u.memoizedState!==null||Ee;u=to;var s=Ee;if(to=l,(Ee=a)&&!s)for($=i;$!==null;)l=$,a=l.child,l.tag===22&&l.memoizedState!==null?yd(i):a!==null?(a.return=l,$=a):yd(i);for(;o!==null;)$=o,Qp(o),o=o.sibling;$=i,to=u,Ee=s}md(e)}else i.subtreeFlags&8772&&o!==null?(o.return=i,$=o):md(e)}}function md(e){for(;$!==null;){var t=$;if(t.flags&8772){var n=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:Ee||Ul(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!Ee)if(n===null)r.componentDidMount();else{var i=t.elementType===t.type?n.memoizedProps:it(t.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;o!==null&&Jf(t,o,r);break;case 3:var l=t.updateQueue;if(l!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}Jf(t,l,n)}break;case 5:var u=t.stateNode;if(n===null&&t.flags&4){n=u;var a=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":a.autoFocus&&n.focus();break;case"img":a.src&&(n.src=a.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var s=t.alternate;if(s!==null){var c=s.memoizedState;if(c!==null){var f=c.dehydrated;f!==null&&ci(f)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(M(163))}Ee||t.flags&512&&os(t)}catch(d){oe(t,t.return,d)}}if(t===e){$=null;break}if(n=t.sibling,n!==null){n.return=t.return,$=n;break}$=t.return}}function gd(e){for(;$!==null;){var t=$;if(t===e){$=null;break}var n=t.sibling;if(n!==null){n.return=t.return,$=n;break}$=t.return}}function yd(e){for(;$!==null;){var t=$;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Ul(4,t)}catch(a){oe(t,n,a)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount=="function"){var i=t.return;try{r.componentDidMount()}catch(a){oe(t,i,a)}}var o=t.return;try{os(t)}catch(a){oe(t,o,a)}break;case 5:var l=t.return;try{os(t)}catch(a){oe(t,l,a)}}}catch(a){oe(t,t.return,a)}if(t===e){$=null;break}var u=t.sibling;if(u!==null){u.return=t.return,$=u;break}$=t.return}}var $v=Math.ceil,Yo=Ot.ReactCurrentDispatcher,zc=Ot.ReactCurrentOwner,Je=Ot.ReactCurrentBatchConfig,H=0,ge=null,se=null,we=0,je=0,Gn=cn(0),de=0,_i=null,Tn=0,Wl=0,Rc=0,Zr=null,be=null,bc=0,hr=1/0,Nt=null,Ko=!1,as=null,Jt=null,no=!1,Qt=null,Zo=0,Jr=0,ss=null,So=-1,Mo=0;function Pe(){return H&6?ue():So!==-1?So:So=ue()}function en(e){return e.mode&1?H&2&&we!==0?we&-we:hv.transition!==null?(Mo===0&&(Mo=zh()),Mo):(e=Q,e!==0||(e=window.event,e=e===void 0?16:Fh(e.type)),e):1}function ct(e,t,n,r){if(50<Jr)throw Jr=0,ss=null,Error(M(185));Ti(e,n,r),(!(H&2)||e!==ge)&&(e===ge&&(!(H&2)&&(Wl|=n),de===4&&Vt(e,we)),Fe(e,r),n===1&&H===0&&!(t.mode&1)&&(hr=ue()+500,Hl&&fn()))}function Fe(e,t){var n=e.callbackNode;hy(e,t);var r=Ao(e,e===ge?we:0);if(r===0)n!==null&&Ef(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&Ef(n),t===1)e.tag===0?dv(vd.bind(null,e)):rp(vd.bind(null,e)),av(function(){!(H&6)&&fn()}),n=null;else{switch(Rh(r)){case 1:n=oc;break;case 4:n=Ph;break;case 16:n=Lo;break;case 536870912:n=$h;break;default:n=Lo}n=t1(n,qp.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function qp(e,t){if(So=-1,Mo=0,H&6)throw Error(M(327));var n=e.callbackNode;if(rr()&&e.callbackNode!==n)return null;var r=Ao(e,e===ge?we:0);if(r===0)return null;if(r&30||r&e.expiredLanes||t)t=Jo(e,r);else{t=r;var i=H;H|=2;var o=Yp();(ge!==e||we!==t)&&(Nt=null,hr=ue()+500,wn(e,t));do try{bv();break}catch(u){Gp(e,u)}while(!0);vc(),Yo.current=o,H=i,se!==null?t=0:(ge=null,we=0,t=de)}if(t!==0){if(t===2&&(i=Ia(e),i!==0&&(r=i,t=cs(e,i))),t===1)throw n=_i,wn(e,0),Vt(e,r),Fe(e,ue()),n;if(t===6)Vt(e,r);else{if(i=e.current.alternate,!(r&30)&&!zv(i)&&(t=Jo(e,r),t===2&&(o=Ia(e),o!==0&&(r=o,t=cs(e,o))),t===1))throw n=_i,wn(e,0),Vt(e,r),Fe(e,ue()),n;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(M(345));case 2:pn(e,be,Nt);break;case 3:if(Vt(e,r),(r&130023424)===r&&(t=bc+500-ue(),10<t)){if(Ao(e,0)!==0)break;if(i=e.suspendedLanes,(i&r)!==r){Pe(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=Wa(pn.bind(null,e,be,Nt),t);break}pn(e,be,Nt);break;case 4:if(Vt(e,r),(r&4194240)===r)break;for(t=e.eventTimes,i=-1;0<r;){var l=31-st(r);o=1<<l,l=t[l],l>i&&(i=l),r&=~o}if(r=i,r=ue()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*$v(r/1960))-r,10<r){e.timeoutHandle=Wa(pn.bind(null,e,be,Nt),r);break}pn(e,be,Nt);break;case 5:pn(e,be,Nt);break;default:throw Error(M(329))}}}return Fe(e,ue()),e.callbackNode===n?qp.bind(null,e):null}function cs(e,t){var n=Zr;return e.current.memoizedState.isDehydrated&&(wn(e,t).flags|=256),e=Jo(e,t),e!==2&&(t=be,be=n,t!==null&&fs(t)),e}function fs(e){be===null?be=e:be.push.apply(be,e)}function zv(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var i=n[r],o=i.getSnapshot;i=i.value;try{if(!ft(o(),i))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Vt(e,t){for(t&=~Rc,t&=~Wl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-st(t),r=1<<n;e[n]=-1,t&=~r}}function vd(e){if(H&6)throw Error(M(327));rr();var t=Ao(e,0);if(!(t&1))return Fe(e,ue()),null;var n=Jo(e,t);if(e.tag!==0&&n===2){var r=Ia(e);r!==0&&(t=r,n=cs(e,r))}if(n===1)throw n=_i,wn(e,0),Vt(e,t),Fe(e,ue()),n;if(n===6)throw Error(M(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,pn(e,be,Nt),Fe(e,ue()),null}function Lc(e,t){var n=H;H|=1;try{return e(t)}finally{H=n,H===0&&(hr=ue()+500,Hl&&fn())}}function Pn(e){Qt!==null&&Qt.tag===0&&!(H&6)&&rr();var t=H;H|=1;var n=Je.transition,r=Q;try{if(Je.transition=null,Q=1,e)return e()}finally{Q=r,Je.transition=n,H=t,!(H&6)&&fn()}}function Ac(){je=Gn.current,Z(Gn)}function wn(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,uv(n)),se!==null)for(n=se.return;n!==null;){var r=n;switch(mc(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&Ho();break;case 3:fr(),Z(Ie),Z(Ne),Mc();break;case 5:Sc(r);break;case 4:fr();break;case 13:Z(ne);break;case 19:Z(ne);break;case 10:xc(r.type._context);break;case 22:case 23:Ac()}n=n.return}if(ge=e,se=e=tn(e.current,null),we=je=t,de=0,_i=null,Rc=Wl=Tn=0,be=Zr=null,yn!==null){for(t=0;t<yn.length;t++)if(n=yn[t],r=n.interleaved,r!==null){n.interleaved=null;var i=r.next,o=n.pending;if(o!==null){var l=o.next;o.next=i,r.next=l}n.pending=r}yn=null}return e}function Gp(e,t){do{var n=se;try{if(vc(),wo.current=Go,qo){for(var r=re.memoizedState;r!==null;){var i=r.queue;i!==null&&(i.pending=null),r=r.next}qo=!1}if(Nn=0,pe=fe=re=null,Yr=!1,vi=0,zc.current=null,n===null||n.return===null){de=1,_i=t,se=null;break}e:{var o=e,l=n.return,u=n,a=t;if(t=we,u.flags|=32768,a!==null&&typeof a=="object"&&typeof a.then=="function"){var s=a,c=u,f=c.tag;if(!(c.mode&1)&&(f===0||f===11||f===15)){var d=c.alternate;d?(c.updateQueue=d.updateQueue,c.memoizedState=d.memoizedState,c.lanes=d.lanes):(c.updateQueue=null,c.memoizedState=null)}var m=od(l);if(m!==null){m.flags&=-257,ld(m,l,u,o,t),m.mode&1&&id(o,s,t),t=m,a=s;var y=t.updateQueue;if(y===null){var v=new Set;v.add(a),t.updateQueue=v}else y.add(a);break e}else{if(!(t&1)){id(o,s,t),Ic();break e}a=Error(M(426))}}else if(te&&u.mode&1){var k=od(l);if(k!==null){!(k.flags&65536)&&(k.flags|=256),ld(k,l,u,o,t),gc(dr(a,u));break e}}o=a=dr(a,u),de!==4&&(de=2),Zr===null?Zr=[o]:Zr.push(o),o=l;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t;var p=Rp(o,a,t);Zf(o,p);break e;case 1:u=a;var h=o.type,g=o.stateNode;if(!(o.flags&128)&&(typeof h.getDerivedStateFromError=="function"||g!==null&&typeof g.componentDidCatch=="function"&&(Jt===null||!Jt.has(g)))){o.flags|=65536,t&=-t,o.lanes|=t;var x=bp(o,u,t);Zf(o,x);break e}}o=o.return}while(o!==null)}Zp(n)}catch(w){t=w,se===n&&n!==null&&(se=n=n.return);continue}break}while(!0)}function Yp(){var e=Yo.current;return Yo.current=Go,e===null?Go:e}function Ic(){(de===0||de===3||de===2)&&(de=4),ge===null||!(Tn&268435455)&&!(Wl&268435455)||Vt(ge,we)}function Jo(e,t){var n=H;H|=2;var r=Yp();(ge!==e||we!==t)&&(Nt=null,wn(e,t));do try{Rv();break}catch(i){Gp(e,i)}while(!0);if(vc(),H=n,Yo.current=r,se!==null)throw Error(M(261));return ge=null,we=0,de}function Rv(){for(;se!==null;)Kp(se)}function bv(){for(;se!==null&&!iy();)Kp(se)}function Kp(e){var t=e1(e.alternate,e,je);e.memoizedProps=e.pendingProps,t===null?Zp(e):se=t,zc.current=null}function Zp(e){var t=e;do{var n=t.alternate;if(e=t.return,t.flags&32768){if(n=Ev(n,t),n!==null){n.flags&=32767,se=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{de=6,se=null;return}}else if(n=Cv(n,t,je),n!==null){se=n;return}if(t=t.sibling,t!==null){se=t;return}se=t=e}while(t!==null);de===0&&(de=5)}function pn(e,t,n){var r=Q,i=Je.transition;try{Je.transition=null,Q=1,Lv(e,t,n,r)}finally{Je.transition=i,Q=r}return null}function Lv(e,t,n,r){do rr();while(Qt!==null);if(H&6)throw Error(M(327));n=e.finishedWork;var i=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(M(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(py(e,o),e===ge&&(se=ge=null,we=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||no||(no=!0,t1(Lo,function(){return rr(),null})),o=(n.flags&15990)!==0,n.subtreeFlags&15990||o){o=Je.transition,Je.transition=null;var l=Q;Q=1;var u=H;H|=4,zc.current=null,Tv(e,n),Xp(n,e),ev(Ba),Io=!!ja,Ba=ja=null,e.current=n,Pv(n),oy(),H=u,Q=l,Je.transition=o}else e.current=n;if(no&&(no=!1,Qt=e,Zo=i),o=e.pendingLanes,o===0&&(Jt=null),ay(n.stateNode),Fe(e,ue()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)i=t[n],r(i.value,{componentStack:i.stack,digest:i.digest});if(Ko)throw Ko=!1,e=as,as=null,e;return Zo&1&&e.tag!==0&&rr(),o=e.pendingLanes,o&1?e===ss?Jr++:(Jr=0,ss=e):Jr=0,fn(),null}function rr(){if(Qt!==null){var e=Rh(Zo),t=Je.transition,n=Q;try{if(Je.transition=null,Q=16>e?16:e,Qt===null)var r=!1;else{if(e=Qt,Qt=null,Zo=0,H&6)throw Error(M(331));var i=H;for(H|=4,$=e.current;$!==null;){var o=$,l=o.child;if($.flags&16){var u=o.deletions;if(u!==null){for(var a=0;a<u.length;a++){var s=u[a];for($=s;$!==null;){var c=$;switch(c.tag){case 0:case 11:case 15:Kr(8,c,o)}var f=c.child;if(f!==null)f.return=c,$=f;else for(;$!==null;){c=$;var d=c.sibling,m=c.return;if(Up(c),c===s){$=null;break}if(d!==null){d.return=m,$=d;break}$=m}}}var y=o.alternate;if(y!==null){var v=y.child;if(v!==null){y.child=null;do{var k=v.sibling;v.sibling=null,v=k}while(v!==null)}}$=o}}if(o.subtreeFlags&2064&&l!==null)l.return=o,$=l;else e:for(;$!==null;){if(o=$,o.flags&2048)switch(o.tag){case 0:case 11:case 15:Kr(9,o,o.return)}var p=o.sibling;if(p!==null){p.return=o.return,$=p;break e}$=o.return}}var h=e.current;for($=h;$!==null;){l=$;var g=l.child;if(l.subtreeFlags&2064&&g!==null)g.return=l,$=g;else e:for(l=h;$!==null;){if(u=$,u.flags&2048)try{switch(u.tag){case 0:case 11:case 15:Ul(9,u)}}catch(w){oe(u,u.return,w)}if(u===l){$=null;break e}var x=u.sibling;if(x!==null){x.return=u.return,$=x;break e}$=u.return}}if(H=i,fn(),_t&&typeof _t.onPostCommitFiberRoot=="function")try{_t.onPostCommitFiberRoot(Al,e)}catch{}r=!0}return r}finally{Q=n,Je.transition=t}}return!1}function xd(e,t,n){t=dr(n,t),t=Rp(e,t,1),e=Zt(e,t,1),t=Pe(),e!==null&&(Ti(e,1,t),Fe(e,t))}function oe(e,t,n){if(e.tag===3)xd(e,e,n);else for(;t!==null;){if(t.tag===3){xd(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(Jt===null||!Jt.has(r))){e=dr(n,e),e=bp(t,e,1),t=Zt(t,e,1),e=Pe(),t!==null&&(Ti(t,1,e),Fe(t,e));break}}t=t.return}}function Av(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=Pe(),e.pingedLanes|=e.suspendedLanes&n,ge===e&&(we&n)===n&&(de===4||de===3&&(we&130023424)===we&&500>ue()-bc?wn(e,0):Rc|=n),Fe(e,t)}function Jp(e,t){t===0&&(e.mode&1?(t=Xi,Xi<<=1,!(Xi&130023424)&&(Xi=4194304)):t=1);var n=Pe();e=Lt(e,t),e!==null&&(Ti(e,t,n),Fe(e,n))}function Iv(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),Jp(e,n)}function Ov(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;i!==null&&(n=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(M(314))}r!==null&&r.delete(t),Jp(e,n)}var e1;e1=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Ie.current)Le=!0;else{if(!(e.lanes&n)&&!(t.flags&128))return Le=!1,Mv(e,t,n);Le=!!(e.flags&131072)}else Le=!1,te&&t.flags&1048576&&ip(t,Uo,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;ko(e,t),e=t.pendingProps;var i=ar(t,Ne.current);nr(t,n),i=Ec(null,t,r,e,i,n);var o=Nc();return t.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Oe(r)?(o=!0,jo(t)):o=!1,t.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,_c(t),i.updater=Bl,t.stateNode=i,i._reactInternals=t,Ka(t,r,e,n),t=es(null,t,r,!0,o,n)):(t.tag=0,te&&o&&pc(t),Te(null,t,i,n),t=t.child),t;case 16:r=t.elementType;e:{switch(ko(e,t),e=t.pendingProps,i=r._init,r=i(r._payload),t.type=r,i=t.tag=Dv(r),e=it(r,e),i){case 0:t=Ja(null,t,r,e,n);break e;case 1:t=sd(null,t,r,e,n);break e;case 11:t=ud(null,t,r,e,n);break e;case 14:t=ad(null,t,r,it(r.type,e),n);break e}throw Error(M(306,r,""))}return t;case 0:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:it(r,i),Ja(e,t,r,i,n);case 1:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:it(r,i),sd(e,t,r,i,n);case 3:e:{if(Op(t),e===null)throw Error(M(387));r=t.pendingProps,o=t.memoizedState,i=o.element,cp(e,t),Xo(t,r,null,n);var l=t.memoizedState;if(r=l.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=o,t.memoizedState=o,t.flags&256){i=dr(Error(M(423)),t),t=cd(e,t,r,n,i);break e}else if(r!==i){i=dr(Error(M(424)),t),t=cd(e,t,r,n,i);break e}else for(Be=Kt(t.stateNode.containerInfo.firstChild),We=t,te=!0,lt=null,n=ap(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(sr(),r===i){t=At(e,t,n);break e}Te(e,t,r,n)}t=t.child}return t;case 5:return fp(t),e===null&&qa(t),r=t.type,i=t.pendingProps,o=e!==null?e.memoizedProps:null,l=i.children,Ua(r,i)?l=null:o!==null&&Ua(r,o)&&(t.flags|=32),Ip(e,t),Te(e,t,l,n),t.child;case 6:return e===null&&qa(t),null;case 13:return Fp(e,t,n);case 4:return kc(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=cr(t,null,r,n):Te(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:it(r,i),ud(e,t,r,i,n);case 7:return Te(e,t,t.pendingProps,n),t.child;case 8:return Te(e,t,t.pendingProps.children,n),t.child;case 12:return Te(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,o=t.memoizedProps,l=i.value,Y(Wo,r._currentValue),r._currentValue=l,o!==null)if(ft(o.value,l)){if(o.children===i.children&&!Ie.current){t=At(e,t,n);break e}}else for(o=t.child,o!==null&&(o.return=t);o!==null;){var u=o.dependencies;if(u!==null){l=o.child;for(var a=u.firstContext;a!==null;){if(a.context===r){if(o.tag===1){a=zt(-1,n&-n),a.tag=2;var s=o.updateQueue;if(s!==null){s=s.shared;var c=s.pending;c===null?a.next=a:(a.next=c.next,c.next=a),s.pending=a}}o.lanes|=n,a=o.alternate,a!==null&&(a.lanes|=n),Ga(o.return,n,t),u.lanes|=n;break}a=a.next}}else if(o.tag===10)l=o.type===t.type?null:o.child;else if(o.tag===18){if(l=o.return,l===null)throw Error(M(341));l.lanes|=n,u=l.alternate,u!==null&&(u.lanes|=n),Ga(l,n,t),l=o.sibling}else l=o.child;if(l!==null)l.return=o;else for(l=o;l!==null;){if(l===t){l=null;break}if(o=l.sibling,o!==null){o.return=l.return,l=o;break}l=l.return}o=l}Te(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,nr(t,n),i=et(i),r=r(i),t.flags|=1,Te(e,t,r,n),t.child;case 14:return r=t.type,i=it(r,t.pendingProps),i=it(r.type,i),ad(e,t,r,i,n);case 15:return Lp(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:it(r,i),ko(e,t),t.tag=1,Oe(r)?(e=!0,jo(t)):e=!1,nr(t,n),zp(t,r,i),Ka(t,r,i,n),es(null,t,r,!0,e,n);case 19:return Dp(e,t,n);case 22:return Ap(e,t,n)}throw Error(M(156,t.tag))};function t1(e,t){return Th(e,t)}function Fv(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ze(e,t,n,r){return new Fv(e,t,n,r)}function Oc(e){return e=e.prototype,!(!e||!e.isReactComponent)}function Dv(e){if(typeof e=="function")return Oc(e)?1:0;if(e!=null){if(e=e.$$typeof,e===nc)return 11;if(e===rc)return 14}return 2}function tn(e,t){var n=e.alternate;return n===null?(n=Ze(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Co(e,t,n,r,i,o){var l=2;if(r=e,typeof e=="function")Oc(e)&&(l=1);else if(typeof e=="string")l=5;else e:switch(e){case Dn:return _n(n.children,i,o,t);case tc:l=8,i|=8;break;case _a:return e=Ze(12,n,t,i|2),e.elementType=_a,e.lanes=o,e;case ka:return e=Ze(13,n,t,i),e.elementType=ka,e.lanes=o,e;case Sa:return e=Ze(19,n,t,i),e.elementType=Sa,e.lanes=o,e;case fh:return Vl(n,i,o,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case sh:l=10;break e;case ch:l=9;break e;case nc:l=11;break e;case rc:l=14;break e;case Bt:l=16,r=null;break e}throw Error(M(130,e==null?e:typeof e,""))}return t=Ze(l,n,t,i),t.elementType=e,t.type=r,t.lanes=o,t}function _n(e,t,n,r){return e=Ze(7,e,r,t),e.lanes=n,e}function Vl(e,t,n,r){return e=Ze(22,e,r,t),e.elementType=fh,e.lanes=n,e.stateNode={isHidden:!1},e}function Ou(e,t,n){return e=Ze(6,e,null,t),e.lanes=n,e}function Fu(e,t,n){return t=Ze(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Hv(e,t,n,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=vu(0),this.expirationTimes=vu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=vu(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Fc(e,t,n,r,i,o,l,u,a){return e=new Hv(e,t,n,u,a),t===1?(t=1,o===!0&&(t|=8)):t=0,o=Ze(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},_c(o),e}function jv(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Fn,key:r==null?null:""+r,children:e,containerInfo:t,implementation:n}}function n1(e){if(!e)return on;e=e._reactInternals;e:{if(bn(e)!==e||e.tag!==1)throw Error(M(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Oe(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(M(171))}if(e.tag===1){var n=e.type;if(Oe(n))return np(e,n,t)}return t}function r1(e,t,n,r,i,o,l,u,a){return e=Fc(n,r,!0,e,i,o,l,u,a),e.context=n1(null),n=e.current,r=Pe(),i=en(n),o=zt(r,i),o.callback=t??null,Zt(n,o,i),e.current.lanes=i,Ti(e,i,r),Fe(e,r),e}function Xl(e,t,n,r){var i=t.current,o=Pe(),l=en(i);return n=n1(n),t.context===null?t.context=n:t.pendingContext=n,t=zt(o,l),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=Zt(i,t,l),e!==null&&(ct(e,i,l,o),xo(e,i,l)),l}function el(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function wd(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function Dc(e,t){wd(e,t),(e=e.alternate)&&wd(e,t)}function Bv(){return null}var i1=typeof reportError=="function"?reportError:function(e){console.error(e)};function Hc(e){this._internalRoot=e}Ql.prototype.render=Hc.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(M(409));Xl(e,t,null,null)};Ql.prototype.unmount=Hc.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;Pn(function(){Xl(null,e,null,null)}),t[bt]=null}};function Ql(e){this._internalRoot=e}Ql.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ah();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Wt.length&&t!==0&&t<Wt[n].priority;n++);Wt.splice(n,0,e),n===0&&Oh(e)}};function jc(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function ql(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function _d(){}function Uv(e,t,n,r,i){if(i){if(typeof r=="function"){var o=r;r=function(){var s=el(l);o.call(s)}}var l=r1(t,r,e,0,null,!1,!1,"",_d);return e._reactRootContainer=l,e[bt]=l.current,hi(e.nodeType===8?e.parentNode:e),Pn(),l}for(;i=e.lastChild;)e.removeChild(i);if(typeof r=="function"){var u=r;r=function(){var s=el(a);u.call(s)}}var a=Fc(e,0,!1,null,null,!1,!1,"",_d);return e._reactRootContainer=a,e[bt]=a.current,hi(e.nodeType===8?e.parentNode:e),Pn(function(){Xl(t,a,n,r)}),a}function Gl(e,t,n,r,i){var o=n._reactRootContainer;if(o){var l=o;if(typeof i=="function"){var u=i;i=function(){var a=el(l);u.call(a)}}Xl(t,l,e,i)}else l=Uv(n,t,e,i,r);return el(l)}bh=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=Dr(t.pendingLanes);n!==0&&(lc(t,n|1),Fe(t,ue()),!(H&6)&&(hr=ue()+500,fn()))}break;case 13:Pn(function(){var r=Lt(e,1);if(r!==null){var i=Pe();ct(r,e,1,i)}}),Dc(e,1)}};uc=function(e){if(e.tag===13){var t=Lt(e,134217728);if(t!==null){var n=Pe();ct(t,e,134217728,n)}Dc(e,134217728)}};Lh=function(e){if(e.tag===13){var t=en(e),n=Lt(e,t);if(n!==null){var r=Pe();ct(n,e,t,r)}Dc(e,t)}};Ah=function(){return Q};Ih=function(e,t){var n=Q;try{return Q=e,t()}finally{Q=n}};ba=function(e,t,n){switch(t){case"input":if(Ea(e,n),t=n.name,n.type==="radio"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=Dl(r);if(!i)throw Error(M(90));hh(r),Ea(r,i)}}}break;case"textarea":mh(e,n);break;case"select":t=n.value,t!=null&&Zn(e,!!n.multiple,t,!1)}};kh=Lc;Sh=Pn;var Wv={usingClientEntryPoint:!1,Events:[$i,Un,Dl,wh,_h,Lc]},Lr={findFiberByHostInstance:gn,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Vv={bundleType:Lr.bundleType,version:Lr.version,rendererPackageName:Lr.rendererPackageName,rendererConfig:Lr.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ot.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Eh(e),e===null?null:e.stateNode},findFiberByHostInstance:Lr.findFiberByHostInstance||Bv,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var ro=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ro.isDisabled&&ro.supportsFiber)try{Al=ro.inject(Vv),_t=ro}catch{}}qe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Wv;qe.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!jc(t))throw Error(M(200));return jv(e,t,null,n)};qe.createRoot=function(e,t){if(!jc(e))throw Error(M(299));var n=!1,r="",i=i1;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(i=t.onRecoverableError)),t=Fc(e,1,!1,null,null,n,!1,r,i),e[bt]=t.current,hi(e.nodeType===8?e.parentNode:e),new Hc(t)};qe.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(M(188)):(e=Object.keys(e).join(","),Error(M(268,e)));return e=Eh(t),e=e===null?null:e.stateNode,e};qe.flushSync=function(e){return Pn(e)};qe.hydrate=function(e,t,n){if(!ql(t))throw Error(M(200));return Gl(null,e,t,!0,n)};qe.hydrateRoot=function(e,t,n){if(!jc(e))throw Error(M(405));var r=n!=null&&n.hydratedSources||null,i=!1,o="",l=i1;if(n!=null&&(n.unstable_strictMode===!0&&(i=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(l=n.onRecoverableError)),t=r1(t,null,e,1,n??null,i,!1,o,l),e[bt]=t.current,hi(e),r)for(e=0;e<r.length;e++)n=r[e],i=n._getVersion,i=i(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,i]:t.mutableSourceEagerHydrationData.push(n,i);return new Ql(t)};qe.render=function(e,t,n){if(!ql(t))throw Error(M(200));return Gl(null,e,t,!1,n)};qe.unmountComponentAtNode=function(e){if(!ql(e))throw Error(M(40));return e._reactRootContainer?(Pn(function(){Gl(null,null,e,!1,function(){e._reactRootContainer=null,e[bt]=null})}),!0):!1};qe.unstable_batchedUpdates=Lc;qe.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!ql(n))throw Error(M(200));if(e==null||e._reactInternals===void 0)throw Error(M(38));return Gl(e,t,n,!1,r)};qe.version="18.3.1-next-f1338f8080-20240426";function o1(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(o1)}catch(e){console.error(e)}}o1(),oh.exports=qe;var Xv=oh.exports,l1,kd=Xv;l1=kd.createRoot,kd.hydrateRoot;var Qv=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,qv=X0(function(e){return Qv.test(e)||e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)<91}),Gv=Ys(function(e,t){var n=e.styles,r=bl([n],void 0,F.useContext(Ks)),i=F.useRef();return gf(function(){var o=t.key+"-global",l=new t.sheet.constructor({key:o,nonce:t.sheet.nonce,container:t.sheet.container,speedy:t.sheet.isSpeedy}),u=!1,a=document.querySelector('style[data-emotion="'+o+" "+r.name+'"]');return t.sheet.tags.length&&(l.before=t.sheet.tags[0]),a!==null&&(u=!0,a.setAttribute("data-emotion",o),l.hydrate([a])),i.current=[l,u],function(){l.flush()}},[t]),gf(function(){var o=i.current,l=o[0],u=o[1];if(u){o[1]=!1;return}if(r.next!==void 0&&Gs(t,r.next,!0),l.tags.length){var a=l.tags[l.tags.length-1].nextElementSibling;l.before=a,l.flush()}t.insert("",r,l,!1)},[t,r.name]),null});function Yv(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return bl(t)}var Kv=qv,Zv=function(t){return t!=="theme"},Sd=function(t){return typeof t=="string"&&t.charCodeAt(0)>96?Kv:Zv},Md=function(t,n,r){var i;if(n){var o=n.shouldForwardProp;i=t.__emotion_forwardProp&&o?function(l){return t.__emotion_forwardProp(l)&&o(l)}:o}return typeof i!="function"&&r&&(i=t.__emotion_forwardProp),i},Jv=!1,e2=function(t){var n=t.cache,r=t.serialized,i=t.isStringTag;return qs(n,r,i),th(function(){return Gs(n,r,i)}),null},A=function e(t,n){var r=t.__emotion_real===t,i=r&&t.__emotion_base||t,o,l;n!==void 0&&(o=n.label,l=n.target);var u=Md(t,n,r),a=u||Sd(i),s=!a("as");return function(){var c=arguments,f=r&&t.__emotion_styles!==void 0?t.__emotion_styles.slice(0):[];if(o!==void 0&&f.push("label:"+o+";"),c[0]==null||c[0].raw===void 0)f.push.apply(f,c);else{f.push(c[0][0]);for(var d=c.length,m=1;m<d;m++)f.push(c[m],c[0][m])}var y=Ys(function(v,k,p){var h=s&&v.as||i,g="",x=[],w=v;if(v.theme==null){w={};for(var S in v)w[S]=v[S];w.theme=F.useContext(Ks)}typeof v.className=="string"?g=Z0(k.registered,x,v.className):v.className!=null&&(g=v.className+" ");var _=bl(f.concat(x),k.registered,w);g+=k.key+"-"+_.name,l!==void 0&&(g+=" "+l);var T=s&&u===void 0?Sd(h):a,I={};for(var z in v)s&&z==="as"||T(z)&&(I[z]=v[z]);return I.className=g,p&&(I.ref=p),F.createElement(F.Fragment,null,F.createElement(e2,{cache:k,serialized:_,isStringTag:typeof h=="string"}),F.createElement(h,I))});return y.displayName=o!==void 0?o:"Styled("+(typeof i=="string"?i:i.displayName||i.name||"Component")+")",y.defaultProps=t.defaultProps,y.__emotion_real=y,y.__emotion_base=i,y.__emotion_styles=f,y.__emotion_forwardProp=u,Object.defineProperty(y,"toString",{value:function(){return l===void 0&&Jv?"NO_COMPONENT_SELECTOR":"."+l}}),y.withComponent=function(v,k){return e(v,va({},n,k,{shouldForwardProp:Md(y,k,!0)})).apply(void 0,f)},y}};const u1=(e,t)=>{if(typeof e=="number"){if(t===3)return{mode:"rgb",r:(e>>8&15|e>>4&240)/255,g:(e>>4&15|e&240)/255,b:(e&15|e<<4&240)/255};if(t===4)return{mode:"rgb",r:(e>>12&15|e>>8&240)/255,g:(e>>8&15|e>>4&240)/255,b:(e>>4&15|e&240)/255,alpha:(e&15|e<<4&240)/255};if(t===6)return{mode:"rgb",r:(e>>16&255)/255,g:(e>>8&255)/255,b:(e&255)/255};if(t===8)return{mode:"rgb",r:(e>>24&255)/255,g:(e>>16&255)/255,b:(e>>8&255)/255,alpha:(e&255)/255}}},t2={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},n2=e=>u1(t2[e.toLowerCase()],6),r2=/^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i,i2=e=>{let t;return(t=e.match(r2))?u1(parseInt(t[1],16),t[1].length):void 0},nn="([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)",ei=`${nn}%`,Bc=`(?:${nn}%|${nn})`,o2=`(?:${nn}(deg|grad|rad|turn)|${nn})`,pr="\\s*,\\s*",l2=new RegExp(`^rgba?\\(\\s*${nn}${pr}${nn}${pr}${nn}\\s*(?:,\\s*${Bc}\\s*)?\\)$`),u2=new RegExp(`^rgba?\\(\\s*${ei}${pr}${ei}${pr}${ei}\\s*(?:,\\s*${Bc}\\s*)?\\)$`),a2=e=>{let t={mode:"rgb"},n;if(n=e.match(l2))n[1]!==void 0&&(t.r=n[1]/255),n[2]!==void 0&&(t.g=n[2]/255),n[3]!==void 0&&(t.b=n[3]/255);else if(n=e.match(u2))n[1]!==void 0&&(t.r=n[1]/100),n[2]!==void 0&&(t.g=n[2]/100),n[3]!==void 0&&(t.b=n[3]/100);else return;return n[4]!==void 0?t.alpha=Math.max(0,Math.min(1,n[4]/100)):n[5]!==void 0&&(t.alpha=Math.max(0,Math.min(1,+n[5]))),t},s2=(e,t)=>e===void 0?void 0:typeof e!="object"?x2(e):e.mode!==void 0?e:t?{...e,mode:t}:void 0,Yl=(e="rgb")=>t=>(t=s2(t,e))!==void 0?t.mode===e?t:xt[t.mode][e]?xt[t.mode][e](t):e==="rgb"?xt[t.mode].rgb(t):xt.rgb[e](xt[t.mode].rgb(t)):void 0,xt={},a1={},tl=[],s1={},c2=e=>e,V=e=>(xt[e.mode]={...xt[e.mode],...e.toMode},Object.keys(e.fromMode||{}).forEach(t=>{xt[t]||(xt[t]={}),xt[t][e.mode]=e.fromMode[t]}),e.ranges||(e.ranges={}),e.difference||(e.difference={}),e.channels.forEach(t=>{if(e.ranges[t]===void 0&&(e.ranges[t]=[0,1]),!e.interpolate[t])throw new Error(`Missing interpolator for: ${t}`);typeof e.interpolate[t]=="function"&&(e.interpolate[t]={use:e.interpolate[t]}),e.interpolate[t].fixup||(e.interpolate[t].fixup=c2)}),a1[e.mode]=e,(e.parse||[]).forEach(t=>{d2(t,e.mode)}),Yl(e.mode)),f2=e=>a1[e],d2=(e,t)=>{if(typeof e=="string"){if(!t)throw new Error("'mode' required when 'parser' is a string");s1[e]=t}else typeof e=="function"&&tl.indexOf(e)<0&&tl.push(e)},ds=/[^\x00-\x7F]|[a-zA-Z_]/,h2=/[^\x00-\x7F]|[-\w]/,C={Function:"function",Ident:"ident",Number:"number",Percentage:"percentage",ParenClose:")",None:"none",Hue:"hue",Alpha:"alpha"};let L=0;function io(e){let t=e[L],n=e[L+1];return t==="-"||t==="+"?/\d/.test(n)||n==="."&&/\d/.test(e[L+2]):t==="."?/\d/.test(n):/\d/.test(t)}function hs(e){if(L>=e.length)return!1;let t=e[L];if(ds.test(t))return!0;if(t==="-"){if(e.length-L<2)return!1;let n=e[L+1];return!!(n==="-"||ds.test(n))}return!1}const p2={deg:1,rad:180/Math.PI,grad:9/10,turn:360};function Ar(e){let t="";if((e[L]==="-"||e[L]==="+")&&(t+=e[L++]),t+=oo(e),e[L]==="."&&/\d/.test(e[L+1])&&(t+=e[L++]+oo(e)),(e[L]==="e"||e[L]==="E")&&((e[L+1]==="-"||e[L+1]==="+")&&/\d/.test(e[L+2])?t+=e[L++]+e[L++]+oo(e):/\d/.test(e[L+1])&&(t+=e[L++]+oo(e))),hs(e)){let n=nl(e);return n==="deg"||n==="rad"||n==="turn"||n==="grad"?{type:C.Hue,value:t*p2[n]}:void 0}return e[L]==="%"?(L++,{type:C.Percentage,value:+t}):{type:C.Number,value:+t}}function oo(e){let t="";for(;/\d/.test(e[L]);)t+=e[L++];return t}function nl(e){let t="";for(;L<e.length&&h2.test(e[L]);)t+=e[L++];return t}function m2(e){let t=nl(e);return e[L]==="("?(L++,{type:C.Function,value:t}):t==="none"?{type:C.None,value:void 0}:{type:C.Ident,value:t}}function g2(e=""){let t=e.trim(),n=[],r;for(L=0;L<t.length;){if(r=t[L++],r===`
`||r==="	"||r===" "){for(;L<t.length&&(t[L]===`
`||t[L]==="	"||t[L]===" ");)L++;continue}if(r===",")return;if(r===")"){n.push({type:C.ParenClose});continue}if(r==="+"){if(L--,io(t)){n.push(Ar(t));continue}return}if(r==="-"){if(L--,io(t)){n.push(Ar(t));continue}if(hs(t)){n.push({type:C.Ident,value:nl(t)});continue}return}if(r==="."){if(L--,io(t)){n.push(Ar(t));continue}return}if(r==="/"){for(;L<t.length&&(t[L]===`
`||t[L]==="	"||t[L]===" ");)L++;let i;if(io(t)&&(i=Ar(t),i.type!==C.Hue)){n.push({type:C.Alpha,value:i});continue}if(hs(t)&&nl(t)==="none"){n.push({type:C.Alpha,value:{type:C.None,value:void 0}});continue}return}if(/\d/.test(r)){L--,n.push(Ar(t));continue}if(ds.test(r)){L--,n.push(m2(t));continue}return}return n}function y2(e){e._i=0;let t=e[e._i++];if(!t||t.type!==C.Function||t.value!=="color"||(t=e[e._i++],t.type!==C.Ident))return;const n=s1[t.value];if(!n)return;const r={mode:n},i=c1(e,!1);if(!i)return;const o=f2(n).channels;for(let l=0,u,a;l<o.length;l++)u=i[l],a=o[l],u.type!==C.None&&(r[a]=u.type===C.Number?u.value:u.value/100,a==="alpha"&&(r[a]=Math.max(0,Math.min(1,r[a]))));return r}function c1(e,t){const n=[];let r;for(;e._i<e.length;){if(r=e[e._i++],r.type===C.None||r.type===C.Number||r.type===C.Alpha||r.type===C.Percentage||t&&r.type===C.Hue){n.push(r);continue}if(r.type===C.ParenClose){if(e._i<e.length)return;continue}return}if(!(n.length<3||n.length>4)){if(n.length===4){if(n[3].type!==C.Alpha)return;n[3]=n[3].value}return n.length===3&&n.push({type:C.None,value:void 0}),n.every(i=>i.type!==C.Alpha)?n:void 0}}function v2(e,t){e._i=0;let n=e[e._i++];if(!n||n.type!==C.Function)return;let r=c1(e,t);if(r)return r.unshift(n.value),r}const x2=e=>{if(typeof e!="string")return;const t=g2(e),n=t?v2(t,!0):void 0;let r,i=0,o=tl.length;for(;i<o;)if((r=tl[i++](e,n))!==void 0)return r;return t?y2(t):void 0};function w2(e,t){if(!t||t[0]!=="rgb"&&t[0]!=="rgba")return;const n={mode:"rgb"},[,r,i,o,l]=t;if(!(r.type===C.Hue||i.type===C.Hue||o.type===C.Hue))return r.type!==C.None&&(n.r=r.type===C.Number?r.value/255:r.value/100),i.type!==C.None&&(n.g=i.type===C.Number?i.value/255:i.value/100),o.type!==C.None&&(n.b=o.type===C.Number?o.value/255:o.value/100),l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const _2=e=>e==="transparent"?{mode:"rgb",r:0,g:0,b:0,alpha:0}:void 0,k2=(e,t,n)=>e+n*(t-e),S2=e=>{let t=[];for(let n=0;n<e.length-1;n++){let r=e[n],i=e[n+1];r===void 0&&i===void 0?t.push(void 0):r!==void 0&&i!==void 0?t.push([r,i]):t.push(r!==void 0?[r,r]:[i,i])}return t},M2=e=>t=>{let n=S2(t);return r=>{let i=r*n.length,o=r>=1?n.length-1:Math.max(Math.floor(i),0),l=n[o];return l===void 0?void 0:e(l[0],l[1],i-o)}},E=M2(k2),he=e=>{let t=!1,n=e.map(r=>r!==void 0?(t=!0,r):1);return t?n:e},kr={mode:"rgb",channels:["r","g","b","alpha"],parse:[w2,i2,a2,n2,_2,"srgb"],serialize:"srgb",interpolate:{r:E,g:E,b:E,alpha:{use:E,fixup:he}},gamut:!0,white:{r:1,g:1,b:1},black:{r:0,g:0,b:0}},Du=(e=0)=>Math.pow(Math.abs(e),563/256)*Math.sign(e),Cd=e=>{let t=Du(e.r),n=Du(e.g),r=Du(e.b),i={mode:"xyz65",x:.5766690429101305*t+.1855582379065463*n+.1882286462349947*r,y:.297344975250536*t+.6273635662554661*n+.0752914584939979*r,z:.0270313613864123*t+.0706888525358272*n+.9913375368376386*r};return e.alpha!==void 0&&(i.alpha=e.alpha),i},Hu=e=>Math.pow(Math.abs(e),256/563)*Math.sign(e),Ed=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i={mode:"a98",r:Hu(e*2.0415879038107465-t*.5650069742788597-.3447313507783297*n),g:Hu(e*-.9692436362808798+t*1.8759675015077206+.0415550574071756*n),b:Hu(e*.0134442806320312-t*.1183623922310184+1.0151749943912058*n)};return r!==void 0&&(i.alpha=r),i},ju=(e=0)=>{const t=Math.abs(e);return t<=.04045?e/12.92:(Math.sign(e)||1)*Math.pow((t+.055)/1.055,2.4)},Sr=({r:e,g:t,b:n,alpha:r})=>{let i={mode:"lrgb",r:ju(e),g:ju(t),b:ju(n)};return r!==void 0&&(i.alpha=r),i},Ln=e=>{let{r:t,g:n,b:r,alpha:i}=Sr(e),o={mode:"xyz65",x:.4123907992659593*t+.357584339383878*n+.1804807884018343*r,y:.2126390058715102*t+.715168678767756*n+.0721923153607337*r,z:.0193308187155918*t+.119194779794626*n+.9505321522496607*r};return i!==void 0&&(o.alpha=i),o},Bu=(e=0)=>{const t=Math.abs(e);return t>.0031308?(Math.sign(e)||1)*(1.055*Math.pow(t,1/2.4)-.055):e*12.92},Mr=({r:e,g:t,b:n,alpha:r},i="rgb")=>{let o={mode:i,r:Bu(e),g:Bu(t),b:Bu(n)};return r!==void 0&&(o.alpha=r),o},An=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Mr({r:e*3.2409699419045226-t*1.537383177570094-.4986107602930034*n,g:e*-.9692436362808796+t*1.8759675015077204+.0415550574071756*n,b:e*.0556300796969936-t*.2039769588889765+1.0569715142428784*n});return r!==void 0&&(i.alpha=r),i},C2={...kr,mode:"a98",parse:["a98-rgb"],serialize:"a98-rgb",fromMode:{rgb:e=>Ed(Ln(e)),xyz65:Ed},toMode:{rgb:e=>An(Cd(e)),xyz65:Cd}},ke=e=>(e=e%360)<0?e+360:e,E2=(e,t)=>e.map((n,r,i)=>{if(n===void 0)return n;let o=ke(n);return r===0||e[r-1]===void 0?o:t(o-ke(i[r-1]))}).reduce((n,r)=>!n.length||r===void 0||n[n.length-1]===void 0?(n.push(r),n):(n.push(r+n[n.length-1]),n),[]),Ft=e=>E2(e,t=>Math.abs(t)<=180?t:t-360*Math.sign(t)),me=[-.14861,1.78277,-.29227,-.90649,1.97294,0],N2=Math.PI/180,T2=180/Math.PI;let Nd=me[3]*me[4],Td=me[1]*me[4],Pd=me[1]*me[2]-me[0]*me[3];const P2=({r:e,g:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=(Pd*n+e*Nd-t*Td)/(Pd+Nd-Td),o=n-i,l=(me[4]*(t-i)-me[2]*o)/me[3],u={mode:"cubehelix",l:i,s:i===0||i===1?void 0:Math.sqrt(o*o+l*l)/(me[4]*i*(1-i))};return u.s&&(u.h=Math.atan2(l,o)*T2-120),r!==void 0&&(u.alpha=r),u},$2=({h:e,s:t,l:n,alpha:r})=>{let i={mode:"rgb"};e=(e===void 0?0:e+120)*N2,n===void 0&&(n=0);let o=t===void 0?0:t*n*(1-n),l=Math.cos(e),u=Math.sin(e);return i.r=n+o*(me[0]*l+me[1]*u),i.g=n+o*(me[2]*l+me[3]*u),i.b=n+o*(me[4]*l+me[5]*u),r!==void 0&&(i.alpha=r),i},Kl=(e,t)=>{if(e.h===void 0||t.h===void 0||!e.s||!t.s)return 0;let n=ke(e.h),r=ke(t.h),i=Math.sin((r-n+360)/2*Math.PI/180);return 2*Math.sqrt(e.s*t.s)*i},z2=(e,t)=>{if(e.h===void 0||t.h===void 0)return 0;let n=ke(e.h),r=ke(t.h);return Math.abs(r-n)>180?n-(r-360*Math.sign(r-n)):r-n},Zl=(e,t)=>{if(e.h===void 0||t.h===void 0||!e.c||!t.c)return 0;let n=ke(e.h),r=ke(t.h),i=Math.sin((r-n+360)/2*Math.PI/180);return 2*Math.sqrt(e.c*t.c)*i},R2=(e=1,t=1,n=1)=>{let r=Yl("lab65");return(i,o)=>{let l=r(i),u=r(o),a=l.l,s=l.a,c=l.b,f=Math.sqrt(s*s+c*c),d=u.l,m=u.a,y=u.b,v=Math.sqrt(m*m+y*y),k=(f+v)/2,p=.5*(1-Math.sqrt(Math.pow(k,7)/(Math.pow(k,7)+Math.pow(25,7)))),h=s*(1+p),g=m*(1+p),x=Math.sqrt(h*h+c*c),w=Math.sqrt(g*g+y*y),S=Math.abs(h)+Math.abs(c)===0?0:Math.atan2(c,h);S+=(S<0)*2*Math.PI;let _=Math.abs(g)+Math.abs(y)===0?0:Math.atan2(y,g);_+=(_<0)*2*Math.PI;let T=d-a,I=w-x,z=x*w===0?0:_-S;z-=(z>Math.PI)*2*Math.PI,z+=(z<-Math.PI)*2*Math.PI;let R=2*Math.sqrt(x*w)*Math.sin(z/2),W=(a+d)/2,j=(x+w)/2,J;x*w===0?J=S+_:(J=(S+_)/2,J-=(Math.abs(S-_)>Math.PI)*Math.PI,J+=(J<0)*2*Math.PI);let Ct=Math.pow(W-50,2),He=1-.17*Math.cos(J-Math.PI/6)+.24*Math.cos(2*J)+.32*Math.cos(3*J+Math.PI/30)-.2*Math.cos(4*J-63*Math.PI/180),Re=1+.015*Ct/Math.sqrt(20+Ct),N=1+.045*j,b=1+.015*j*He,O=30*Math.PI/180*Math.exp(-1*Math.pow((180/Math.PI*J-275)/25,2)),G=2*Math.sqrt(Math.pow(j,7)/(Math.pow(j,7)+Math.pow(25,7))),ee=-1*Math.sin(2*O)*G;return Math.sqrt(Math.pow(T/(e*Re),2)+Math.pow(I/(t*N),2)+Math.pow(R/(n*b),2)+ee*I/(t*N)*R/(n*b))}},Dt=e=>{let t=e.reduce((r,i)=>{if(i!==void 0){let o=i*Math.PI/180;r.sin+=Math.sin(o),r.cos+=Math.cos(o)}return r},{sin:0,cos:0}),n=Math.atan2(t.sin,t.cos)*180/Math.PI;return n<0?360+n:n},b2={mode:"cubehelix",channels:["h","s","l","alpha"],parse:["--cubehelix"],serialize:"--cubehelix",ranges:{h:[0,360],s:[0,4.614],l:[0,1]},fromMode:{rgb:P2},toMode:{rgb:$2},interpolate:{h:{use:E,fixup:Ft},s:E,l:E,alpha:{use:E,fixup:he}},difference:{h:Kl},average:{h:Dt}},ln=({l:e,a:t,b:n,alpha:r},i="lch")=>{t===void 0&&(t=0),n===void 0&&(n=0);let o=Math.sqrt(t*t+n*n),l={mode:i,l:e,c:o};return o&&(l.h=ke(Math.atan2(n,t)*180/Math.PI)),r!==void 0&&(l.alpha=r),l},un=({l:e,c:t,h:n,alpha:r},i="lab")=>{n===void 0&&(n=0);let o={mode:i,l:e,a:t?t*Math.cos(n/180*Math.PI):0,b:t?t*Math.sin(n/180*Math.PI):0};return r!==void 0&&(o.alpha=r),o},f1=Math.pow(29,3)/Math.pow(3,3),d1=Math.pow(6,3)/Math.pow(29,3),ce={X:.3457/.3585,Y:1,Z:(1-.3457-.3585)/.3585},ir={X:.3127/.329,Y:1,Z:(1-.3127-.329)/.329};let Uu=e=>Math.pow(e,3)>d1?Math.pow(e,3):(116*e-16)/f1;const h1=({l:e,a:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=(e+16)/116,o=t/500+i,l=i-n/200,u={mode:"xyz65",x:Uu(o)*ir.X,y:Uu(i)*ir.Y,z:Uu(l)*ir.Z};return r!==void 0&&(u.alpha=r),u},Jl=e=>An(h1(e)),Wu=e=>e>d1?Math.cbrt(e):(f1*e+16)/116,p1=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Wu(e/ir.X),o=Wu(t/ir.Y),l=Wu(n/ir.Z),u={mode:"lab65",l:116*o-16,a:500*(i-o),b:200*(o-l)};return r!==void 0&&(u.alpha=r),u},eu=e=>{let t=p1(Ln(e));return e.r===e.b&&e.b===e.g&&(t.a=t.b=0),t},rl=1,m1=1,ki=26/180*Math.PI,il=Math.cos(ki),ol=Math.sin(ki),g1=100/Math.log(139/100),ps=({l:e,c:t,h:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i={mode:"lab65",l:(Math.exp(e*rl/g1)-1)/.0039},o=(Math.exp(.0435*t*m1*rl)-1)/.075,l=o*Math.cos(n/180*Math.PI-ki),u=o*Math.sin(n/180*Math.PI-ki);return i.a=l*il-u/.83*ol,i.b=l*ol+u/.83*il,r!==void 0&&(i.alpha=r),i},ms=({l:e,a:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=t*il+n*ol,o=.83*(n*il-t*ol),l=Math.sqrt(i*i+o*o),u={mode:"dlch",l:g1/rl*Math.log(1+.0039*e),c:Math.log(1+.075*l)/(.0435*m1*rl)};return u.c&&(u.h=ke((Math.atan2(o,i)+ki)/Math.PI*180)),r!==void 0&&(u.alpha=r),u},$d=e=>ps(ln(e,"dlch")),zd=e=>un(ms(e),"dlab"),L2={mode:"dlab",parse:["--din99o-lab"],serialize:"--din99o-lab",toMode:{lab65:$d,rgb:e=>Jl($d(e))},fromMode:{lab65:zd,rgb:e=>zd(eu(e))},channels:["l","a","b","alpha"],ranges:{l:[0,100],a:[-40.09,45.501],b:[-40.469,44.344]},interpolate:{l:E,a:E,b:E,alpha:{use:E,fixup:he}}},A2={mode:"dlch",parse:["--din99o-lch"],serialize:"--din99o-lch",toMode:{lab65:ps,dlab:e=>un(e,"dlab"),rgb:e=>Jl(ps(e))},fromMode:{lab65:ms,dlab:e=>ln(e,"dlch"),rgb:e=>ms(eu(e))},channels:["l","c","h","alpha"],ranges:{l:[0,100],c:[0,51.484],h:[0,360]},interpolate:{l:E,c:E,h:{use:E,fixup:Ft},alpha:{use:E,fixup:he}},difference:{h:Zl},average:{h:Dt}};function I2({h:e,s:t,i:n,alpha:r}){e=ke(e!==void 0?e:0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.abs(e/60%2-1),o;switch(Math.floor(e/60)){case 0:o={r:n*(1+t*(3/(2-i)-1)),g:n*(1+t*(3*(1-i)/(2-i)-1)),b:n*(1-t)};break;case 1:o={r:n*(1+t*(3*(1-i)/(2-i)-1)),g:n*(1+t*(3/(2-i)-1)),b:n*(1-t)};break;case 2:o={r:n*(1-t),g:n*(1+t*(3/(2-i)-1)),b:n*(1+t*(3*(1-i)/(2-i)-1))};break;case 3:o={r:n*(1-t),g:n*(1+t*(3*(1-i)/(2-i)-1)),b:n*(1+t*(3/(2-i)-1))};break;case 4:o={r:n*(1+t*(3*(1-i)/(2-i)-1)),g:n*(1-t),b:n*(1+t*(3/(2-i)-1))};break;case 5:o={r:n*(1+t*(3/(2-i)-1)),g:n*(1-t),b:n*(1+t*(3*(1-i)/(2-i)-1))};break;default:o={r:n*(1-t),g:n*(1-t),b:n*(1-t)}}return o.mode="rgb",r!==void 0&&(o.alpha=r),o}function O2({r:e,g:t,b:n,alpha:r}){e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.max(e,t,n),o=Math.min(e,t,n),l={mode:"hsi",s:e+t+n===0?0:1-3*o/(e+t+n),i:(e+t+n)/3};return i-o!==0&&(l.h=(i===e?(t-n)/(i-o)+(t<n)*6:i===t?(n-e)/(i-o)+2:(e-t)/(i-o)+4)*60),r!==void 0&&(l.alpha=r),l}const F2={mode:"hsi",toMode:{rgb:I2},parse:["--hsi"],serialize:"--hsi",fromMode:{rgb:O2},channels:["h","s","i","alpha"],ranges:{h:[0,360]},gamut:"rgb",interpolate:{h:{use:E,fixup:Ft},s:E,i:E,alpha:{use:E,fixup:he}},difference:{h:Kl},average:{h:Dt}};function D2({h:e,s:t,l:n,alpha:r}){e=ke(e!==void 0?e:0),t===void 0&&(t=0),n===void 0&&(n=0);let i=n+t*(n<.5?n:1-n),o=i-(i-n)*2*Math.abs(e/60%2-1),l;switch(Math.floor(e/60)){case 0:l={r:i,g:o,b:2*n-i};break;case 1:l={r:o,g:i,b:2*n-i};break;case 2:l={r:2*n-i,g:i,b:o};break;case 3:l={r:2*n-i,g:o,b:i};break;case 4:l={r:o,g:2*n-i,b:i};break;case 5:l={r:i,g:2*n-i,b:o};break;default:l={r:2*n-i,g:2*n-i,b:2*n-i}}return l.mode="rgb",r!==void 0&&(l.alpha=r),l}function H2({r:e,g:t,b:n,alpha:r}){e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.max(e,t,n),o=Math.min(e,t,n),l={mode:"hsl",s:i===o?0:(i-o)/(1-Math.abs(i+o-1)),l:.5*(i+o)};return i-o!==0&&(l.h=(i===e?(t-n)/(i-o)+(t<n)*6:i===t?(n-e)/(i-o)+2:(e-t)/(i-o)+4)*60),r!==void 0&&(l.alpha=r),l}const j2=(e,t)=>{switch(t){case"deg":return+e;case"rad":return e/Math.PI*180;case"grad":return e/10*9;case"turn":return e*360}},B2=new RegExp(`^hsla?\\(\\s*${o2}${pr}${ei}${pr}${ei}\\s*(?:,\\s*${Bc}\\s*)?\\)$`),U2=e=>{let t=e.match(B2);if(!t)return;let n={mode:"hsl"};return t[3]!==void 0?n.h=+t[3]:t[1]!==void 0&&t[2]!==void 0&&(n.h=j2(t[1],t[2])),t[4]!==void 0&&(n.s=Math.min(Math.max(0,t[4]/100),1)),t[5]!==void 0&&(n.l=Math.min(Math.max(0,t[5]/100),1)),t[6]!==void 0?n.alpha=Math.max(0,Math.min(1,t[6]/100)):t[7]!==void 0&&(n.alpha=Math.max(0,Math.min(1,+t[7]))),n};function W2(e,t){if(!t||t[0]!=="hsl"&&t[0]!=="hsla")return;const n={mode:"hsl"},[,r,i,o,l]=t;if(r.type!==C.None){if(r.type===C.Percentage)return;n.h=r.value}if(i.type!==C.None){if(i.type===C.Hue)return;n.s=i.value/100}if(o.type!==C.None){if(o.type===C.Hue)return;n.l=o.value/100}return l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const y1={mode:"hsl",toMode:{rgb:D2},fromMode:{rgb:H2},channels:["h","s","l","alpha"],ranges:{h:[0,360]},gamut:"rgb",parse:[W2,U2],serialize:e=>`hsl(${e.h!==void 0?e.h:"none"} ${e.s!==void 0?e.s*100+"%":"none"} ${e.l!==void 0?e.l*100+"%":"none"}${e.alpha<1?` / ${e.alpha}`:""})`,interpolate:{h:{use:E,fixup:Ft},s:E,l:E,alpha:{use:E,fixup:he}},difference:{h:Kl},average:{h:Dt}};function v1({h:e,s:t,v:n,alpha:r}){e=ke(e!==void 0?e:0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.abs(e/60%2-1),o;switch(Math.floor(e/60)){case 0:o={r:n,g:n*(1-t*i),b:n*(1-t)};break;case 1:o={r:n*(1-t*i),g:n,b:n*(1-t)};break;case 2:o={r:n*(1-t),g:n,b:n*(1-t*i)};break;case 3:o={r:n*(1-t),g:n*(1-t*i),b:n};break;case 4:o={r:n*(1-t*i),g:n*(1-t),b:n};break;case 5:o={r:n,g:n*(1-t),b:n*(1-t*i)};break;default:o={r:n*(1-t),g:n*(1-t),b:n*(1-t)}}return o.mode="rgb",r!==void 0&&(o.alpha=r),o}function x1({r:e,g:t,b:n,alpha:r}){e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.max(e,t,n),o=Math.min(e,t,n),l={mode:"hsv",s:i===0?0:1-o/i,v:i};return i-o!==0&&(l.h=(i===e?(t-n)/(i-o)+(t<n)*6:i===t?(n-e)/(i-o)+2:(e-t)/(i-o)+4)*60),r!==void 0&&(l.alpha=r),l}const w1={mode:"hsv",toMode:{rgb:v1},parse:["--hsv"],serialize:"--hsv",fromMode:{rgb:x1},channels:["h","s","v","alpha"],ranges:{h:[0,360]},gamut:"rgb",interpolate:{h:{use:E,fixup:Ft},s:E,v:E,alpha:{use:E,fixup:he}},difference:{h:Kl},average:{h:Dt}};function V2({h:e,w:t,b:n,alpha:r}){if(t===void 0&&(t=0),n===void 0&&(n=0),t+n>1){let i=t+n;t/=i,n/=i}return v1({h:e,s:n===1?1:1-t/(1-n),v:1-n,alpha:r})}function X2(e){let t=x1(e);if(t===void 0)return;let n=t.s!==void 0?t.s:0,r=t.v!==void 0?t.v:0,i={mode:"hwb",w:(1-n)*r,b:1-r};return t.h!==void 0&&(i.h=t.h),t.alpha!==void 0&&(i.alpha=t.alpha),i}function Q2(e,t){if(!t||t[0]!=="hwb")return;const n={mode:"hwb"},[,r,i,o,l]=t;if(r.type!==C.None){if(r.type===C.Percentage)return;n.h=r.value}if(i.type!==C.None){if(i.type===C.Hue)return;n.w=i.value/100}if(o.type!==C.None){if(o.type===C.Hue)return;n.b=o.value/100}return l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const q2={mode:"hwb",toMode:{rgb:V2},fromMode:{rgb:X2},channels:["h","w","b","alpha"],ranges:{h:[0,360]},gamut:"rgb",parse:[Q2],serialize:e=>`hwb(${e.h!==void 0?e.h:"none"} ${e.w!==void 0?e.w*100+"%":"none"} ${e.b!==void 0?e.b*100+"%":"none"}${e.alpha<1?` / ${e.alpha}`:""})`,interpolate:{h:{use:E,fixup:Ft},w:E,b:E,alpha:{use:E,fixup:he}},difference:{h:z2},average:{h:Dt}},_1=203,tu=.1593017578125,k1=78.84375,nu=.8359375,ru=18.8515625,iu=18.6875;function Vu(e){if(e<0)return 0;const t=Math.pow(e,1/k1);return 1e4*Math.pow(Math.max(0,t-nu)/(ru-iu*t),1/tu)}function Xu(e){if(e<0)return 0;const t=Math.pow(e/1e4,tu);return Math.pow((nu+ru*t)/(1+iu*t),k1)}const Qu=e=>Math.max(e/_1,0),Rd=({i:e,t,p:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);const i=Vu(e+.008609037037932761*t+.11102962500302593*n),o=Vu(e-.00860903703793275*t-.11102962500302599*n),l=Vu(e+.5600313357106791*t-.32062717498731885*n),u={mode:"xyz65",x:Qu(2.070152218389422*i-1.3263473389671556*o+.2066510476294051*l),y:Qu(.3647385209748074*i+.680566024947227*o-.0453045459220346*l),z:Qu(-.049747207535812*i-.0492609666966138*o+1.1880659249923042*l)};return r!==void 0&&(u.alpha=r),u},qu=(e=0)=>Math.max(e*_1,0),bd=({x:e,y:t,z:n,alpha:r})=>{const i=qu(e),o=qu(t),l=qu(n),u=Xu(.3592832590121217*i+.6976051147779502*o-.0358915932320289*l),a=Xu(-.1920808463704995*i+1.1004767970374323*o+.0753748658519118*l),s=Xu(.0070797844607477*i+.0748396662186366*o+.8433265453898765*l),c=.5*u+.5*a,f=1.61376953125*u-3.323486328125*a+1.709716796875*s,d=4.378173828125*u-4.24560546875*a-.132568359375*s,m={mode:"itp",i:c,t:f,p:d};return r!==void 0&&(m.alpha=r),m},G2={mode:"itp",channels:["i","t","p","alpha"],parse:["--ictcp"],serialize:"--ictcp",toMode:{xyz65:Rd,rgb:e=>An(Rd(e))},fromMode:{xyz65:bd,rgb:e=>bd(Ln(e))},ranges:{i:[0,.581],t:[-.369,.272],p:[-.164,.331]},interpolate:{i:E,t:E,p:E,alpha:{use:E,fixup:he}}},Y2=134.03437499999998,K2=16295499532821565e-27,Gu=e=>{if(e<0)return 0;let t=Math.pow(e/1e4,tu);return Math.pow((nu+ru*t)/(1+iu*t),Y2)},Yu=(e=0)=>Math.max(e*203,0),S1=({x:e,y:t,z:n,alpha:r})=>{e=Yu(e),t=Yu(t),n=Yu(n);let i=1.15*e-.15*n,o=.66*t+.34*e,l=Gu(.41478972*i+.579999*o+.014648*n),u=Gu(-.20151*i+1.120649*o+.0531008*n),a=Gu(-.0166008*i+.2648*o+.6684799*n),s=(l+u)/2,c={mode:"jab",j:.44*s/(1-.56*s)-K2,a:3.524*l-4.066708*u+.542708*a,b:.199076*l+1.096799*u-1.295875*a};return r!==void 0&&(c.alpha=r),c},Z2=134.03437499999998,Ld=16295499532821565e-27,Ku=e=>{if(e<0)return 0;let t=Math.pow(e,1/Z2);return 1e4*Math.pow((nu-t)/(iu*t-ru),1/tu)},Zu=e=>e/203,M1=({j:e,a:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=(e+Ld)/(.44+.56*(e+Ld)),o=Ku(i+.13860504*t+.058047316*n),l=Ku(i-.13860504*t-.058047316*n),u=Ku(i-.096019242*t-.8118919*n),a={mode:"xyz65",x:Zu(1.661373024652174*o-.914523081304348*l+.23136208173913045*u),y:Zu(-.3250758611844533*o+1.571847026732543*l-.21825383453227928*u),z:Zu(-.090982811*o-.31272829*l+1.5227666*u)};return r!==void 0&&(a.alpha=r),a},C1=e=>{let t=S1(Ln(e));return e.r===e.b&&e.b===e.g&&(t.a=t.b=0),t},E1=e=>An(M1(e)),J2={mode:"jab",channels:["j","a","b","alpha"],parse:["--jzazbz"],serialize:"--jzazbz",fromMode:{rgb:C1,xyz65:S1},toMode:{rgb:E1,xyz65:M1},ranges:{j:[0,.222],a:[-.109,.129],b:[-.185,.134]},interpolate:{j:E,a:E,b:E,alpha:{use:E,fixup:he}}},Ad=({j:e,a:t,b:n,alpha:r})=>{t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.sqrt(t*t+n*n),o={mode:"jch",j:e,c:i};return i&&(o.h=ke(Math.atan2(n,t)*180/Math.PI)),r!==void 0&&(o.alpha=r),o},Id=({j:e,c:t,h:n,alpha:r})=>{n===void 0&&(n=0);let i={mode:"jab",j:e,a:t?t*Math.cos(n/180*Math.PI):0,b:t?t*Math.sin(n/180*Math.PI):0};return r!==void 0&&(i.alpha=r),i},ex={mode:"jch",parse:["--jzczhz"],serialize:"--jzczhz",toMode:{jab:Id,rgb:e=>E1(Id(e))},fromMode:{rgb:e=>Ad(C1(e)),jab:Ad},channels:["j","c","h","alpha"],ranges:{j:[0,.221],c:[0,.19],h:[0,360]},interpolate:{h:{use:E,fixup:Ft},c:E,j:E,alpha:{use:E,fixup:he}},difference:{h:Zl},average:{h:Dt}},ou=Math.pow(29,3)/Math.pow(3,3),Uc=Math.pow(6,3)/Math.pow(29,3);let Ju=e=>Math.pow(e,3)>Uc?Math.pow(e,3):(116*e-16)/ou;const Wc=({l:e,a:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=(e+16)/116,o=t/500+i,l=i-n/200,u={mode:"xyz50",x:Ju(o)*ce.X,y:Ju(i)*ce.Y,z:Ju(l)*ce.Z};return r!==void 0&&(u.alpha=r),u},Ri=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Mr({r:e*3.1341359569958707-t*1.6173863321612538-.4906619460083532*n,g:e*-.978795502912089+t*1.916254567259524+.03344273116131949*n,b:e*.07195537988411677-t*.2289768264158322+1.405386058324125*n});return r!==void 0&&(i.alpha=r),i},N1=e=>Ri(Wc(e)),bi=e=>{let{r:t,g:n,b:r,alpha:i}=Sr(e),o={mode:"xyz50",x:.436065742824811*t+.3851514688337912*n+.14307845442264197*r,y:.22249319175623702*t+.7168870538238823*n+.06061979053616537*r,z:.013923904500943465*t+.09708128566574634*n+.7140993584005155*r};return i!==void 0&&(o.alpha=i),o},ea=e=>e>Uc?Math.cbrt(e):(ou*e+16)/116,Vc=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=ea(e/ce.X),o=ea(t/ce.Y),l=ea(n/ce.Z),u={mode:"lab",l:116*o-16,a:500*(i-o),b:200*(o-l)};return r!==void 0&&(u.alpha=r),u},T1=e=>{let t=Vc(bi(e));return e.r===e.b&&e.b===e.g&&(t.a=t.b=0),t};function tx(e,t){if(!t||t[0]!=="lab")return;const n={mode:"lab"},[,r,i,o,l]=t;if(!(r.type===C.Hue||i.type===C.Hue||o.type===C.Hue))return r.type!==C.None&&(n.l=Math.min(Math.max(0,r.value),100)),i.type!==C.None&&(n.a=i.type===C.Number?i.value:i.value*125/100),o.type!==C.None&&(n.b=o.type===C.Number?o.value:o.value*125/100),l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const Xc={mode:"lab",toMode:{xyz50:Wc,rgb:N1},fromMode:{xyz50:Vc,rgb:T1},channels:["l","a","b","alpha"],ranges:{l:[0,100],a:[-100,100],b:[-100,100]},parse:[tx],serialize:e=>`lab(${e.l!==void 0?e.l:"none"} ${e.a!==void 0?e.a:"none"} ${e.b!==void 0?e.b:"none"}${e.alpha<1?` / ${e.alpha}`:""})`,interpolate:{l:E,a:E,b:E,alpha:{use:E,fixup:he}}},nx={...Xc,mode:"lab65",parse:["--lab-d65"],serialize:"--lab-d65",toMode:{xyz65:h1,rgb:Jl},fromMode:{xyz65:p1,rgb:eu},ranges:{l:[0,100],a:[-86.182,98.234],b:[-107.86,94.477]}};function rx(e,t){if(!t||t[0]!=="lch")return;const n={mode:"lch"},[,r,i,o,l]=t;if(r.type!==C.None){if(r.type===C.Hue)return;n.l=Math.min(Math.max(0,r.value),100)}if(i.type!==C.None&&(n.c=Math.max(0,i.type===C.Number?i.value:i.value*150/100)),o.type!==C.None){if(o.type===C.Percentage)return;n.h=o.value}return l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const Qc={mode:"lch",toMode:{lab:un,rgb:e=>N1(un(e))},fromMode:{rgb:e=>ln(T1(e)),lab:ln},channels:["l","c","h","alpha"],ranges:{l:[0,100],c:[0,150],h:[0,360]},parse:[rx],serialize:e=>`lch(${e.l!==void 0?e.l:"none"} ${e.c!==void 0?e.c:"none"} ${e.h!==void 0?e.h:"none"}${e.alpha<1?` / ${e.alpha}`:""})`,interpolate:{h:{use:E,fixup:Ft},c:E,l:E,alpha:{use:E,fixup:he}},difference:{h:Zl},average:{h:Dt}},ix={...Qc,mode:"lch65",parse:["--lch-d65"],serialize:"--lch-d65",toMode:{lab65:e=>un(e,"lab65"),rgb:e=>Jl(un(e,"lab65"))},fromMode:{rgb:e=>ln(eu(e),"lch65"),lab65:e=>ln(e,"lch65")},ranges:{l:[0,100],c:[0,133.807],h:[0,360]}},P1=({l:e,u:t,v:n,alpha:r})=>{t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.sqrt(t*t+n*n),o={mode:"lchuv",l:e,c:i};return i&&(o.h=ke(Math.atan2(n,t)*180/Math.PI)),r!==void 0&&(o.alpha=r),o},$1=({l:e,c:t,h:n,alpha:r})=>{n===void 0&&(n=0);let i={mode:"luv",l:e,u:t?t*Math.cos(n/180*Math.PI):0,v:t?t*Math.sin(n/180*Math.PI):0};return r!==void 0&&(i.alpha=r),i},z1=(e,t,n)=>4*e/(e+15*t+3*n),R1=(e,t,n)=>9*t/(e+15*t+3*n),ox=z1(ce.X,ce.Y,ce.Z),lx=R1(ce.X,ce.Y,ce.Z),ux=e=>e<=Uc?ou*e:116*Math.cbrt(e)-16,gs=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=ux(t/ce.Y),o=z1(e,t,n),l=R1(e,t,n);!isFinite(o)||!isFinite(l)?i=o=l=0:(o=13*i*(o-ox),l=13*i*(l-lx));let u={mode:"luv",l:i,u:o,v:l};return r!==void 0&&(u.alpha=r),u},ax=(e,t,n)=>4*e/(e+15*t+3*n),sx=(e,t,n)=>9*t/(e+15*t+3*n),cx=ax(ce.X,ce.Y,ce.Z),fx=sx(ce.X,ce.Y,ce.Z),ys=({l:e,u:t,v:n,alpha:r})=>{if(e===void 0&&(e=0),e===0)return{mode:"xyz50",x:0,y:0,z:0};t===void 0&&(t=0),n===void 0&&(n=0);let i=t/(13*e)+cx,o=n/(13*e)+fx,l=ce.Y*(e<=8?e/ou:Math.pow((e+16)/116,3)),u=l*(9*i)/(4*o),a=l*(12-3*i-20*o)/(4*o),s={mode:"xyz50",x:u,y:l,z:a};return r!==void 0&&(s.alpha=r),s},dx=e=>P1(gs(bi(e))),hx=e=>Ri(ys($1(e))),px={mode:"lchuv",toMode:{luv:$1,rgb:hx},fromMode:{rgb:dx,luv:P1},channels:["l","c","h","alpha"],parse:["--lchuv"],serialize:"--lchuv",ranges:{l:[0,100],c:[0,176.956],h:[0,360]},interpolate:{h:{use:E,fixup:Ft},c:E,l:E,alpha:{use:E,fixup:he}},difference:{h:Zl},average:{h:Dt}},mx={...kr,mode:"lrgb",toMode:{rgb:Mr},fromMode:{rgb:Sr},parse:["srgb-linear"],serialize:"srgb-linear"},gx={mode:"luv",toMode:{xyz50:ys,rgb:e=>Ri(ys(e))},fromMode:{xyz50:gs,rgb:e=>gs(bi(e))},channels:["l","u","v","alpha"],parse:["--luv"],serialize:"--luv",ranges:{l:[0,100],u:[-84.936,175.042],v:[-125.882,87.243]},interpolate:{l:E,u:E,v:E,alpha:{use:E,fixup:he}}},b1=({r:e,g:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.cbrt(.41222147079999993*e+.5363325363*t+.0514459929*n),o=Math.cbrt(.2119034981999999*e+.6806995450999999*t+.1073969566*n),l=Math.cbrt(.08830246189999998*e+.2817188376*t+.6299787005000002*n),u={mode:"oklab",l:.2104542553*i+.793617785*o-.0040720468*l,a:1.9779984951*i-2.428592205*o+.4505937099*l,b:.0259040371*i+.7827717662*o-.808675766*l};return r!==void 0&&(u.alpha=r),u},lu=e=>{let t=b1(Sr(e));return e.r===e.b&&e.b===e.g&&(t.a=t.b=0),t},Li=({l:e,a:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Math.pow(e*.9999999984505198+.39633779217376786*t+.2158037580607588*n,3),o=Math.pow(e*1.0000000088817609-.10556134232365635*t-.06385417477170591*n,3),l=Math.pow(e*1.0000000546724108-.08948418209496575*t-1.2914855378640917*n,3),u={mode:"lrgb",r:4.076741661347994*i-3.307711590408193*o+.230969928729428*l,g:-1.2684380040921763*i+2.6097574006633715*o-.3413193963102197*l,b:-.004196086541837188*i-.7034186144594493*o+1.7076147009309444*l};return r!==void 0&&(u.alpha=r),u},uu=e=>Mr(Li(e));function vs(e){const r=1.170873786407767;return .5*(r*e-.206+Math.sqrt((r*e-.206)*(r*e-.206)+4*.03*r*e))}function ll(e){return(e*e+.206*e)/(1.170873786407767*(e+.03))}function yx(e,t){let n,r,i,o,l,u,a,s;-1.88170328*e-.80936493*t>1?(n=1.19086277,r=1.76576728,i=.59662641,o=.75515197,l=.56771245,u=4.0767416621,a=-3.3077115913,s=.2309699292):1.81444104*e-1.19445276*t>1?(n=.73956515,r=-.45954404,i=.08285427,o=.1254107,l=.14503204,u=-1.2684380046,a=2.6097574011,s=-.3413193965):(n=1.35733652,r=-.00915799,i=-1.1513021,o=-.50559606,l=.00692167,u=-.0041960863,a=-.7034186147,s=1.707614701);let c=n+r*e+i*t+o*e*e+l*e*t,f=.3963377774*e+.2158037573*t,d=-.1055613458*e-.0638541728*t,m=-.0894841775*e-1.291485548*t;{let y=1+c*f,v=1+c*d,k=1+c*m,p=y*y*y,h=v*v*v,g=k*k*k,x=3*f*y*y,w=3*d*v*v,S=3*m*k*k,_=6*f*f*y,T=6*d*d*v,I=6*m*m*k,z=u*p+a*h+s*g,R=u*x+a*w+s*S,W=u*_+a*T+s*I;c=c-z*R/(R*R-.5*z*W)}return c}function qc(e,t){let n=yx(e,t),r=Li({l:1,a:n*e,b:n*t}),i=Math.cbrt(1/Math.max(r.r,r.g,r.b)),o=i*n;return[i,o]}function vx(e,t,n,r,i,o=null){o||(o=qc(e,t));let l;if((n-i)*o[1]-(o[0]-i)*r<=0)l=o[1]*i/(r*o[0]+o[1]*(i-n));else{l=o[1]*(i-1)/(r*(o[0]-1)+o[1]*(i-n));{let u=n-i,a=r,s=.3963377774*e+.2158037573*t,c=-.1055613458*e-.0638541728*t,f=-.0894841775*e-1.291485548*t,d=u+a*s,m=u+a*c,y=u+a*f;{let v=i*(1-l)+l*n,k=l*r,p=v+k*s,h=v+k*c,g=v+k*f,x=p*p*p,w=h*h*h,S=g*g*g,_=3*d*p*p,T=3*m*h*h,I=3*y*g*g,z=6*d*d*p,R=6*m*m*h,W=6*y*y*g,j=4.0767416621*x-3.3077115913*w+.2309699292*S-1,J=4.0767416621*_-3.3077115913*T+.2309699292*I,Ct=4.0767416621*z-3.3077115913*R+.2309699292*W,He=J/(J*J-.5*j*Ct),Re=-j*He,N=-1.2684380046*x+2.6097574011*w-.3413193965*S-1,b=-1.2684380046*_+2.6097574011*T-.3413193965*I,O=-1.2684380046*z+2.6097574011*R-.3413193965*W,G=b/(b*b-.5*N*O),ee=-N*G,dn=-.0041960863*x-.7034186147*w+1.707614701*S-1,nt=-.0041960863*_-.7034186147*T+1.707614701*I,Cr=-.0041960863*z-.7034186147*R+1.707614701*W,ht=nt/(nt*nt-.5*dn*Cr),Ht=-dn*ht;Re=He>=0?Re:1e6,ee=G>=0?ee:1e6,Ht=ht>=0?Ht:1e6,l+=Math.min(Re,Math.min(ee,Ht))}}}return l}function Gc(e,t,n=null){n||(n=qc(e,t));let r=n[0],i=n[1];return[i/r,i/(1-r)]}function L1(e,t,n){let r=qc(t,n),i=vx(t,n,e,1,e,r),o=Gc(t,n,r),l=.11516993+1/(7.4477897+4.1590124*n+t*(-2.19557347+1.75198401*n+t*(-2.13704948-10.02301043*n+t*(-4.24894561+5.38770819*n+4.69891013*t)))),u=.11239642+1/(1.6132032-.68124379*n+t*(.40370612+.90148123*n+t*(-.27087943+.6122399*n+t*(.00299215-.45399568*n-.14661872*t)))),a=i/Math.min(e*o[0],(1-e)*o[1]),s=e*l,c=(1-e)*u,f=.9*a*Math.sqrt(Math.sqrt(1/(1/(s*s*s*s)+1/(c*c*c*c))));return s=e*.4,c=(1-e)*.8,[Math.sqrt(1/(1/(s*s)+1/(c*c))),f,i]}function Od(e){const t=e.l!==void 0?e.l:0,n=e.a!==void 0?e.a:0,r=e.b!==void 0?e.b:0,i={mode:"okhsl",l:vs(t)};e.alpha!==void 0&&(i.alpha=e.alpha);let o=Math.sqrt(n*n+r*r);if(!o)return i.s=0,i;let[l,u,a]=L1(t,n/o,r/o),s;if(o<u){let c=0,f=.8*l,d=1-f/u;s=(o-c)/(f+d*(o-c))*.8}else{let c=u,f=.2*u*u*1.25*1.25/l,d=1-f/(a-u);s=.8+.2*((o-c)/(f+d*(o-c)))}return s&&(i.s=s,i.h=ke(Math.atan2(r,n)*180/Math.PI)),i}function Fd(e){let t=e.h!==void 0?e.h:0,n=e.s!==void 0?e.s:0,r=e.l!==void 0?e.l:0;const i={mode:"oklab",l:ll(r)};if(e.alpha!==void 0&&(i.alpha=e.alpha),!n||r===1)return i.a=i.b=0,i;let o=Math.cos(t/180*Math.PI),l=Math.sin(t/180*Math.PI),[u,a,s]=L1(i.l,o,l),c,f,d,m;n<.8?(c=1.25*n,f=0,d=.8*u,m=1-d/a):(c=5*(n-.8),f=a,d=.2*a*a*1.25*1.25/u,m=1-d/(s-a));let y=f+c*d/(1-m*c);return i.a=y*o,i.b=y*l,i}const xx={...y1,mode:"okhsl",channels:["h","s","l","alpha"],parse:["--okhsl"],serialize:"--okhsl",fromMode:{oklab:Od,rgb:e=>Od(lu(e))},toMode:{oklab:Fd,rgb:e=>uu(Fd(e))}};function Dd(e){let t=e.l!==void 0?e.l:0,n=e.a!==void 0?e.a:0,r=e.b!==void 0?e.b:0,i=Math.sqrt(n*n+r*r),o=i?n/i:1,l=i?r/i:1,[u,a]=Gc(o,l),s=.5,c=1-s/u,f=a/(i+t*a),d=f*t,m=f*i,y=ll(d),v=m*y/d,k=Li({l:y,a:o*v,b:l*v}),p=Math.cbrt(1/Math.max(k.r,k.g,k.b,0));t=t/p,i=i/p*vs(t)/t,t=vs(t);const h={mode:"okhsv",s:i?(s+a)*m/(a*s+a*c*m):0,v:t?t/d:0};return h.s&&(h.h=ke(Math.atan2(r,n)*180/Math.PI)),e.alpha!==void 0&&(h.alpha=e.alpha),h}function Hd(e){const t={mode:"oklab"};e.alpha!==void 0&&(t.alpha=e.alpha);const n=e.h!==void 0?e.h:0,r=e.s!==void 0?e.s:0,i=e.v!==void 0?e.v:0,o=Math.cos(n/180*Math.PI),l=Math.sin(n/180*Math.PI),[u,a]=Gc(o,l),s=.5,c=1-s/u,f=1-r*s/(s+a-a*c*r),d=r*a*s/(s+a-a*c*r),m=ll(f),y=d*m/f,v=Li({l:m,a:o*y,b:l*y}),k=Math.cbrt(1/Math.max(v.r,v.g,v.b,0)),p=ll(i*f),h=d*p/f;return t.l=p*k,t.a=h*o*k,t.b=h*l*k,t}const wx={...w1,mode:"okhsv",channels:["h","s","v","alpha"],parse:["--okhsv"],serialize:"--okhsv",fromMode:{oklab:Dd,rgb:e=>Dd(lu(e))},toMode:{oklab:Hd,rgb:e=>uu(Hd(e))}};function _x(e,t){if(!t||t[0]!=="oklab")return;const n={mode:"oklab"},[,r,i,o,l]=t;if(!(r.type===C.Hue||i.type===C.Hue||o.type===C.Hue))return r.type!==C.None&&(n.l=Math.min(Math.max(0,r.type===C.Number?r.value:r.value/100),1)),i.type!==C.None&&(n.a=i.type===C.Number?i.value:i.value*.4/100),o.type!==C.None&&(n.b=o.type===C.Number?o.value:o.value*.4/100),l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const kx={...Xc,mode:"oklab",toMode:{lrgb:Li,rgb:uu},fromMode:{lrgb:b1,rgb:lu},ranges:{l:[0,1],a:[-.4,.4],b:[-.4,.4]},parse:[_x],serialize:e=>`oklab(${e.l!==void 0?e.l:"none"} ${e.a!==void 0?e.a:"none"} ${e.b!==void 0?e.b:"none"}${e.alpha<1?` / ${e.alpha}`:""})`};function Sx(e,t){if(!t||t[0]!=="oklch")return;const n={mode:"oklch"},[,r,i,o,l]=t;if(r.type!==C.None){if(r.type===C.Hue)return;n.l=Math.min(Math.max(0,r.type===C.Number?r.value:r.value/100),1)}if(i.type!==C.None&&(n.c=Math.max(0,i.type===C.Number?i.value:i.value*.4/100)),o.type!==C.None){if(o.type===C.Percentage)return;n.h=o.value}return l.type!==C.None&&(n.alpha=Math.min(1,Math.max(0,l.type===C.Number?l.value:l.value/100))),n}const Mx={...Qc,mode:"oklch",toMode:{oklab:e=>un(e,"oklab"),rgb:e=>uu(un(e,"oklab"))},fromMode:{rgb:e=>ln(lu(e),"oklch"),oklab:e=>ln(e,"oklch")},parse:[Sx],serialize:e=>`oklch(${e.l!==void 0?e.l:"none"} ${e.c!==void 0?e.c:"none"} ${e.h!==void 0?e.h:"none"}${e.alpha<1?` / ${e.alpha}`:""})`,ranges:{l:[0,1],c:[0,.4],h:[0,360]}},jd=e=>{let{r:t,g:n,b:r,alpha:i}=Sr(e),o={mode:"xyz65",x:.486570948648216*t+.265667693169093*n+.1982172852343625*r,y:.2289745640697487*t+.6917385218365062*n+.079286914093745*r,z:0*t+.0451133818589026*n+1.043944368900976*r};return i!==void 0&&(o.alpha=i),o},Bd=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i=Mr({r:e*2.4934969119414263-t*.9313836179191242-.402710784450717*n,g:e*-.8294889695615749+t*1.7626640603183465+.0236246858419436*n,b:e*.0358458302437845-t*.0761723892680418+.9568845240076871*n},"p3");return r!==void 0&&(i.alpha=r),i},Cx={...kr,mode:"p3",parse:["display-p3"],serialize:"display-p3",fromMode:{rgb:e=>Bd(Ln(e)),xyz65:Bd},toMode:{rgb:e=>An(jd(e)),xyz65:jd}},ta=e=>{let t=Math.abs(e);return t>=1/512?Math.sign(e)*Math.pow(t,1/1.8):16*e},Ud=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i={mode:"prophoto",r:ta(e*1.3457868816471585-t*.2555720873797946-.0511018649755453*n),g:ta(e*-.5446307051249019+t*1.5082477428451466+.0205274474364214*n),b:ta(e*0+t*0+1.2119675456389452*n)};return r!==void 0&&(i.alpha=r),i},na=(e=0)=>{let t=Math.abs(e);return t>=16/512?Math.sign(e)*Math.pow(t,1.8):e/16},Wd=e=>{let t=na(e.r),n=na(e.g),r=na(e.b),i={mode:"xyz50",x:.7977666449006423*t+.1351812974005331*n+.0313477341283922*r,y:.2880748288194013*t+.7118352342418731*n+899369387256e-16*r,z:0*t+0*n+.8251046025104602*r};return e.alpha!==void 0&&(i.alpha=e.alpha),i},Ex={...kr,mode:"prophoto",parse:["prophoto-rgb"],serialize:"prophoto-rgb",fromMode:{xyz50:Ud,rgb:e=>Ud(bi(e))},toMode:{xyz50:Wd,rgb:e=>Ri(Wd(e))}},Vd=1.09929682680944,Nx=.018053968510807,ra=e=>{const t=Math.abs(e);return t>Nx?(Math.sign(e)||1)*(Vd*Math.pow(t,.45)-(Vd-1)):4.5*e},Xd=({x:e,y:t,z:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);let i={mode:"rec2020",r:ra(e*1.7166511879712683-t*.3556707837763925-.2533662813736599*n),g:ra(e*-.6666843518324893+t*1.6164812366349395+.0157685458139111*n),b:ra(e*.0176398574453108-t*.0427706132578085+.9421031212354739*n)};return r!==void 0&&(i.alpha=r),i},Qd=1.09929682680944,Tx=.018053968510807,ia=(e=0)=>{let t=Math.abs(e);return t<Tx*4.5?e/4.5:(Math.sign(e)||1)*Math.pow((t+Qd-1)/Qd,1/.45)},qd=e=>{let t=ia(e.r),n=ia(e.g),r=ia(e.b),i={mode:"xyz65",x:.6369580483012911*t+.1446169035862083*n+.1688809751641721*r,y:.262700212011267*t+.6779980715188708*n+.059301716469862*r,z:0*t+.0280726930490874*n+1.0609850577107909*r};return e.alpha!==void 0&&(i.alpha=e.alpha),i},Px={...kr,mode:"rec2020",fromMode:{xyz65:Xd,rgb:e=>Xd(Ln(e))},toMode:{xyz65:qd,rgb:e=>An(qd(e))},parse:["rec2020"],serialize:"rec2020"},kn=.0037930732552754493,A1=Math.cbrt(kn),oa=e=>Math.cbrt(e)-A1,$x=e=>{const{r:t,g:n,b:r,alpha:i}=Sr(e),o=oa(.3*t+.622*n+.078*r+kn),l=oa(.23*t+.692*n+.078*r+kn),u=oa(.2434226892454782*t+.2047674442449682*n+.5518098665095535*r+kn),a={mode:"xyb",x:(o-l)/2,y:(o+l)/2,b:u-(o+l)/2};return i!==void 0&&(a.alpha=i),a},la=e=>Math.pow(e+A1,3),zx=({x:e,y:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);const i=la(e+t)-kn,o=la(t-e)-kn,l=la(n+t)-kn,u=Mr({r:11.031566904639861*i-9.866943908131562*o-.16462299650829934*l,g:-3.2541473810744237*i+4.418770377582723*o-.16462299650829934*l,b:-3.6588512867136815*i+2.7129230459360922*o+1.9459282407775895*l});return r!==void 0&&(u.alpha=r),u},Rx={mode:"xyb",channels:["x","y","b","alpha"],parse:["--xyb"],serialize:"--xyb",toMode:{rgb:zx},fromMode:{rgb:$x},ranges:{x:[-.0154,.0281],y:[0,.8453],b:[-.2778,.388]},interpolate:{x:E,y:E,b:E,alpha:{use:E,fixup:he}}},bx={mode:"xyz50",parse:["xyz-d50"],serialize:"xyz-d50",toMode:{rgb:Ri,lab:Vc},fromMode:{rgb:bi,lab:Wc},channels:["x","y","z","alpha"],ranges:{x:[0,.964],y:[0,.999],z:[0,.825]},interpolate:{x:E,y:E,z:E,alpha:{use:E,fixup:he}}},Lx=e=>{let{x:t,y:n,z:r,alpha:i}=e;t===void 0&&(t=0),n===void 0&&(n=0),r===void 0&&(r=0);let o={mode:"xyz50",x:1.0479298208405488*t+.0229467933410191*n-.0501922295431356*r,y:.0296278156881593*t+.990434484573249*n-.0170738250293851*r,z:-.0092430581525912*t+.0150551448965779*n+.7518742899580008*r};return i!==void 0&&(o.alpha=i),o},Ax=e=>{let{x:t,y:n,z:r,alpha:i}=e;t===void 0&&(t=0),n===void 0&&(n=0),r===void 0&&(r=0);let o={mode:"xyz65",x:.9554734527042182*t-.0230985368742614*n+.0632593086610217*r,y:-.0283697069632081*t+1.0099954580058226*n+.021041398966943*r,z:.0123140016883199*t-.0205076964334779*n+1.3303659366080753*r};return i!==void 0&&(o.alpha=i),o},Ix={mode:"xyz65",toMode:{rgb:An,xyz50:Lx},fromMode:{rgb:Ln,xyz50:Ax},ranges:{x:[0,.95],y:[0,1],z:[0,1.088]},channels:["x","y","z","alpha"],parse:["xyz","xyz-d65"],serialize:"xyz-d65",interpolate:{x:E,y:E,z:E,alpha:{use:E,fixup:he}}},Ox=({r:e,g:t,b:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);const i={mode:"yiq",y:.29889531*e+.58662247*t+.11448223*n,i:.59597799*e-.2741761*t-.32180189*n,q:.21147017*e-.52261711*t+.31114694*n};return r!==void 0&&(i.alpha=r),i},Fx=({y:e,i:t,q:n,alpha:r})=>{e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0);const i={mode:"rgb",r:e+.95608445*t+.6208885*n,g:e-.27137664*t-.6486059*n,b:e-1.10561724*t+1.70250126*n};return r!==void 0&&(i.alpha=r),i},Dx={mode:"yiq",toMode:{rgb:Fx},fromMode:{rgb:Ox},channels:["y","i","q","alpha"],parse:["--yiq"],serialize:"--yiq",ranges:{i:[-.595,.595],q:[-.522,.522]},interpolate:{y:E,i:E,q:E,alpha:{use:E,fixup:he}}},Hx=e=>Math.max(0,Math.min(1,e||0)),ua=e=>Math.round(Hx(e)*255),jx=Yl("rgb"),Bx=e=>{if(e===void 0)return;let t=ua(e.r),n=ua(e.g),r=ua(e.b);return"#"+(1<<24|t<<16|n<<8|r).toString(16).slice(1)},Ai=e=>Bx(jx(e));function Gd(e){let t=Yl("lrgb")(e);return .2126*t.r+.7152*t.g+.0722*t.b}function xs(e,t){let n=Gd(e),r=Gd(t);return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)}V(C2);V(b2);V(L2);V(A2);V(F2);const aa=V(y1);V(w1);V(q2);V(G2);V(J2);V(ex);V(Xc);V(nx);V(Qc);V(ix);V(px);V(mx);V(gx);const Sn=V(xx);V(wx);V(kx);V(Mx);V(Cx);V(Ex);V(Px);const Ux=V(kr);V(Rx);V(bx);V(Ix);V(Dx);var Wx={name:"65q3c0",styles:`*{box-sizing:border-box;}html{font-family:"IBM Plex Mono",'Courier New',Courier,monospace;-webkit-font-smoothing:antialiased;}body{min-height:100vh;}#root{height:100%;width:100%;}a{text-decoration:none;color:initial;}img,svg{user-select:none;}`};const Vx=()=>P(Gv,{styles:Wx}),Ii=A("label",{target:"e1g7s6vu0"})({name:"mmdt3g",styles:"font-size:14px"}),au=A("div",{target:"e17bwa900"})({name:"1f4ajh4",styles:"display:flex;flex-direction:column;row-gap:4px"}),sa=e=>{const{labelText:t,id:n,step:r=1,value:i,onChange:o,...l}=e;return X(Xx,{children:[X(Qx,{htmlFor:n,children:[P("span",{children:t}),P("span",{children:i})]}),P("input",{id:n,type:"range",step:r,value:i,onChange:u=>o==null?void 0:o(+u.target.value),...l})]})},Xx=A(au,{target:"e15mzn1n1"})(()=>({}),""),Qx=A(Ii,{target:"e15mzn1n0"})(()=>({display:"flex",justifyContent:"space-between"}),"");function Eo(e,t){return e==null||t==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function qx(e,t){return e==null||t==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function I1(e){let t,n,r;e.length!==2?(t=Eo,n=(u,a)=>Eo(e(u),a),r=(u,a)=>e(u)-a):(t=e===Eo||e===qx?e:Gx,n=e,r=e);function i(u,a,s=0,c=u.length){if(s<c){if(t(a,a)!==0)return c;do{const f=s+c>>>1;n(u[f],a)<0?s=f+1:c=f}while(s<c)}return s}function o(u,a,s=0,c=u.length){if(s<c){if(t(a,a)!==0)return c;do{const f=s+c>>>1;n(u[f],a)<=0?s=f+1:c=f}while(s<c)}return s}function l(u,a,s=0,c=u.length){const f=i(u,a,s,c-1);return f>s&&r(u[f-1],a)>-r(u[f],a)?f-1:f}return{left:i,center:l,right:o}}function Gx(){return 0}function Yx(e){return e===null?NaN:+e}const Kx=I1(Eo),Zx=Kx.right;I1(Yx).center;const Jx=Math.sqrt(50),ew=Math.sqrt(10),tw=Math.sqrt(2);function ul(e,t,n){const r=(t-e)/Math.max(0,n),i=Math.floor(Math.log10(r)),o=r/Math.pow(10,i),l=o>=Jx?10:o>=ew?5:o>=tw?2:1;let u,a,s;return i<0?(s=Math.pow(10,-i)/l,u=Math.round(e*s),a=Math.round(t*s),u/s<e&&++u,a/s>t&&--a,s=-s):(s=Math.pow(10,i)*l,u=Math.round(e/s),a=Math.round(t/s),u*s<e&&++u,a*s>t&&--a),a<u&&.5<=n&&n<2?ul(e,t,n*2):[u,a,s]}function nw(e,t,n){if(t=+t,e=+e,n=+n,!(n>0))return[];if(e===t)return[e];const r=t<e,[i,o,l]=r?ul(t,e,n):ul(e,t,n);if(!(o>=i))return[];const u=o-i+1,a=new Array(u);if(r)if(l<0)for(let s=0;s<u;++s)a[s]=(o-s)/-l;else for(let s=0;s<u;++s)a[s]=(o-s)*l;else if(l<0)for(let s=0;s<u;++s)a[s]=(i+s)/-l;else for(let s=0;s<u;++s)a[s]=(i+s)*l;return a}function ws(e,t,n){return t=+t,e=+e,n=+n,ul(e,t,n)[2]}function rw(e,t,n){t=+t,e=+e,n=+n;const r=t<e,i=r?ws(t,e,n):ws(e,t,n);return(r?-1:1)*(i<0?1/-i:i)}function iw(e){return e}var ca=1,fa=2,_s=3,jr=4,Yd=1e-6;function ow(e){return"translate("+e+",0)"}function lw(e){return"translate(0,"+e+")"}function uw(e){return t=>+e(t)}function aw(e,t){return t=Math.max(0,e.bandwidth()-t*2)/2,e.round()&&(t=Math.round(t)),n=>+e(n)+t}function sw(){return!this.__axis}function O1(e,t){var n=[],r=null,i=null,o=6,l=6,u=3,a=typeof window<"u"&&window.devicePixelRatio>1?0:.5,s=e===ca||e===jr?-1:1,c=e===jr||e===fa?"x":"y",f=e===ca||e===_s?ow:lw;function d(m){var y=r??(t.ticks?t.ticks.apply(t,n):t.domain()),v=i??(t.tickFormat?t.tickFormat.apply(t,n):iw),k=Math.max(o,0)+u,p=t.range(),h=+p[0]+a,g=+p[p.length-1]+a,x=(t.bandwidth?aw:uw)(t.copy(),a),w=m.selection?m.selection():m,S=w.selectAll(".domain").data([null]),_=w.selectAll(".tick").data(y,t).order(),T=_.exit(),I=_.enter().append("g").attr("class","tick"),z=_.select("line"),R=_.select("text");S=S.merge(S.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),_=_.merge(I),z=z.merge(I.append("line").attr("stroke","currentColor").attr(c+"2",s*o)),R=R.merge(I.append("text").attr("fill","currentColor").attr(c,s*k).attr("dy",e===ca?"0em":e===_s?"0.71em":"0.32em")),m!==w&&(S=S.transition(m),_=_.transition(m),z=z.transition(m),R=R.transition(m),T=T.transition(m).attr("opacity",Yd).attr("transform",function(W){return isFinite(W=x(W))?f(W+a):this.getAttribute("transform")}),I.attr("opacity",Yd).attr("transform",function(W){var j=this.parentNode.__axis;return f((j&&isFinite(j=j(W))?j:x(W))+a)})),T.remove(),S.attr("d",e===jr||e===fa?l?"M"+s*l+","+h+"H"+a+"V"+g+"H"+s*l:"M"+a+","+h+"V"+g:l?"M"+h+","+s*l+"V"+a+"H"+g+"V"+s*l:"M"+h+","+a+"H"+g),_.attr("opacity",1).attr("transform",function(W){return f(x(W)+a)}),z.attr(c+"2",s*o),R.attr(c,s*k).text(v),w.filter(sw).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",e===fa?"start":e===jr?"end":"middle"),w.each(function(){this.__axis=x})}return d.scale=function(m){return arguments.length?(t=m,d):t},d.ticks=function(){return n=Array.from(arguments),d},d.tickArguments=function(m){return arguments.length?(n=m==null?[]:Array.from(m),d):n.slice()},d.tickValues=function(m){return arguments.length?(r=m==null?null:Array.from(m),d):r&&r.slice()},d.tickFormat=function(m){return arguments.length?(i=m,d):i},d.tickSize=function(m){return arguments.length?(o=l=+m,d):o},d.tickSizeInner=function(m){return arguments.length?(o=+m,d):o},d.tickSizeOuter=function(m){return arguments.length?(l=+m,d):l},d.tickPadding=function(m){return arguments.length?(u=+m,d):u},d.offset=function(m){return arguments.length?(a=+m,d):a},d}function cw(e){return O1(_s,e)}function fw(e){return O1(jr,e)}var dw={value:()=>{}};function F1(){for(var e=0,t=arguments.length,n={},r;e<t;++e){if(!(r=arguments[e]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new No(n)}function No(e){this._=e}function hw(e,t){return e.trim().split(/^|\s+/).map(function(n){var r="",i=n.indexOf(".");if(i>=0&&(r=n.slice(i+1),n=n.slice(0,i)),n&&!t.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}No.prototype=F1.prototype={constructor:No,on:function(e,t){var n=this._,r=hw(e+"",n),i,o=-1,l=r.length;if(arguments.length<2){for(;++o<l;)if((i=(e=r[o]).type)&&(i=pw(n[i],e.name)))return i;return}if(t!=null&&typeof t!="function")throw new Error("invalid callback: "+t);for(;++o<l;)if(i=(e=r[o]).type)n[i]=Kd(n[i],e.name,t);else if(t==null)for(i in n)n[i]=Kd(n[i],e.name,null);return this},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new No(e)},call:function(e,t){if((i=arguments.length-2)>0)for(var n=new Array(i),r=0,i,o;r<i;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(o=this._[e],r=0,i=o.length;r<i;++r)o[r].value.apply(t,n)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],i=0,o=r.length;i<o;++i)r[i].value.apply(t,n)}};function pw(e,t){for(var n=0,r=e.length,i;n<r;++n)if((i=e[n]).name===t)return i.value}function Kd(e,t,n){for(var r=0,i=e.length;r<i;++r)if(e[r].name===t){e[r]=dw,e=e.slice(0,r).concat(e.slice(r+1));break}return n!=null&&e.push({name:t,value:n}),e}var ks="http://www.w3.org/1999/xhtml";const Zd={svg:"http://www.w3.org/2000/svg",xhtml:ks,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function su(e){var t=e+="",n=t.indexOf(":");return n>=0&&(t=e.slice(0,n))!=="xmlns"&&(e=e.slice(n+1)),Zd.hasOwnProperty(t)?{space:Zd[t],local:e}:e}function mw(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===ks&&t.documentElement.namespaceURI===ks?t.createElement(e):t.createElementNS(n,e)}}function gw(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function D1(e){var t=su(e);return(t.local?gw:mw)(t)}function yw(){}function Yc(e){return e==null?yw:function(){return this.querySelector(e)}}function vw(e){typeof e!="function"&&(e=Yc(e));for(var t=this._groups,n=t.length,r=new Array(n),i=0;i<n;++i)for(var o=t[i],l=o.length,u=r[i]=new Array(l),a,s,c=0;c<l;++c)(a=o[c])&&(s=e.call(a,a.__data__,c,o))&&("__data__"in a&&(s.__data__=a.__data__),u[c]=s);return new Xe(r,this._parents)}function xw(e){return e==null?[]:Array.isArray(e)?e:Array.from(e)}function ww(){return[]}function H1(e){return e==null?ww:function(){return this.querySelectorAll(e)}}function _w(e){return function(){return xw(e.apply(this,arguments))}}function kw(e){typeof e=="function"?e=_w(e):e=H1(e);for(var t=this._groups,n=t.length,r=[],i=[],o=0;o<n;++o)for(var l=t[o],u=l.length,a,s=0;s<u;++s)(a=l[s])&&(r.push(e.call(a,a.__data__,s,l)),i.push(a));return new Xe(r,i)}function j1(e){return function(){return this.matches(e)}}function B1(e){return function(t){return t.matches(e)}}var Sw=Array.prototype.find;function Mw(e){return function(){return Sw.call(this.children,e)}}function Cw(){return this.firstElementChild}function Ew(e){return this.select(e==null?Cw:Mw(typeof e=="function"?e:B1(e)))}var Nw=Array.prototype.filter;function Tw(){return Array.from(this.children)}function Pw(e){return function(){return Nw.call(this.children,e)}}function $w(e){return this.selectAll(e==null?Tw:Pw(typeof e=="function"?e:B1(e)))}function zw(e){typeof e!="function"&&(e=j1(e));for(var t=this._groups,n=t.length,r=new Array(n),i=0;i<n;++i)for(var o=t[i],l=o.length,u=r[i]=[],a,s=0;s<l;++s)(a=o[s])&&e.call(a,a.__data__,s,o)&&u.push(a);return new Xe(r,this._parents)}function U1(e){return new Array(e.length)}function Rw(){return new Xe(this._enter||this._groups.map(U1),this._parents)}function al(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}al.prototype={constructor:al,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};function bw(e){return function(){return e}}function Lw(e,t,n,r,i,o){for(var l=0,u,a=t.length,s=o.length;l<s;++l)(u=t[l])?(u.__data__=o[l],r[l]=u):n[l]=new al(e,o[l]);for(;l<a;++l)(u=t[l])&&(i[l]=u)}function Aw(e,t,n,r,i,o,l){var u,a,s=new Map,c=t.length,f=o.length,d=new Array(c),m;for(u=0;u<c;++u)(a=t[u])&&(d[u]=m=l.call(a,a.__data__,u,t)+"",s.has(m)?i[u]=a:s.set(m,a));for(u=0;u<f;++u)m=l.call(e,o[u],u,o)+"",(a=s.get(m))?(r[u]=a,a.__data__=o[u],s.delete(m)):n[u]=new al(e,o[u]);for(u=0;u<c;++u)(a=t[u])&&s.get(d[u])===a&&(i[u]=a)}function Iw(e){return e.__data__}function Ow(e,t){if(!arguments.length)return Array.from(this,Iw);var n=t?Aw:Lw,r=this._parents,i=this._groups;typeof e!="function"&&(e=bw(e));for(var o=i.length,l=new Array(o),u=new Array(o),a=new Array(o),s=0;s<o;++s){var c=r[s],f=i[s],d=f.length,m=Fw(e.call(c,c&&c.__data__,s,r)),y=m.length,v=u[s]=new Array(y),k=l[s]=new Array(y),p=a[s]=new Array(d);n(c,f,v,k,p,m,t);for(var h=0,g=0,x,w;h<y;++h)if(x=v[h]){for(h>=g&&(g=h+1);!(w=k[g])&&++g<y;);x._next=w||null}}return l=new Xe(l,r),l._enter=u,l._exit=a,l}function Fw(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function Dw(){return new Xe(this._exit||this._groups.map(U1),this._parents)}function Hw(e,t,n){var r=this.enter(),i=this,o=this.exit();return typeof e=="function"?(r=e(r),r&&(r=r.selection())):r=r.append(e+""),t!=null&&(i=t(i),i&&(i=i.selection())),n==null?o.remove():n(o),r&&i?r.merge(i).order():i}function jw(e){for(var t=e.selection?e.selection():e,n=this._groups,r=t._groups,i=n.length,o=r.length,l=Math.min(i,o),u=new Array(i),a=0;a<l;++a)for(var s=n[a],c=r[a],f=s.length,d=u[a]=new Array(f),m,y=0;y<f;++y)(m=s[y]||c[y])&&(d[y]=m);for(;a<i;++a)u[a]=n[a];return new Xe(u,this._parents)}function Bw(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r=e[t],i=r.length-1,o=r[i],l;--i>=0;)(l=r[i])&&(o&&l.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(l,o),o=l);return this}function Uw(e){e||(e=Ww);function t(f,d){return f&&d?e(f.__data__,d.__data__):!f-!d}for(var n=this._groups,r=n.length,i=new Array(r),o=0;o<r;++o){for(var l=n[o],u=l.length,a=i[o]=new Array(u),s,c=0;c<u;++c)(s=l[c])&&(a[c]=s);a.sort(t)}return new Xe(i,this._parents).order()}function Ww(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function Vw(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this}function Xw(){return Array.from(this)}function Qw(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],i=0,o=r.length;i<o;++i){var l=r[i];if(l)return l}return null}function qw(){let e=0;for(const t of this)++e;return e}function Gw(){return!this.node()}function Yw(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var i=t[n],o=0,l=i.length,u;o<l;++o)(u=i[o])&&e.call(u,u.__data__,o,i);return this}function Kw(e){return function(){this.removeAttribute(e)}}function Zw(e){return function(){this.removeAttributeNS(e.space,e.local)}}function Jw(e,t){return function(){this.setAttribute(e,t)}}function e3(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function t3(e,t){return function(){var n=t.apply(this,arguments);n==null?this.removeAttribute(e):this.setAttribute(e,n)}}function n3(e,t){return function(){var n=t.apply(this,arguments);n==null?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function r3(e,t){var n=su(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((t==null?n.local?Zw:Kw:typeof t=="function"?n.local?n3:t3:n.local?e3:Jw)(n,t))}function W1(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function i3(e){return function(){this.style.removeProperty(e)}}function o3(e,t,n){return function(){this.style.setProperty(e,t,n)}}function l3(e,t,n){return function(){var r=t.apply(this,arguments);r==null?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}function u3(e,t,n){return arguments.length>1?this.each((t==null?i3:typeof t=="function"?l3:o3)(e,t,n??"")):mr(this.node(),e)}function mr(e,t){return e.style.getPropertyValue(t)||W1(e).getComputedStyle(e,null).getPropertyValue(t)}function a3(e){return function(){delete this[e]}}function s3(e,t){return function(){this[e]=t}}function c3(e,t){return function(){var n=t.apply(this,arguments);n==null?delete this[e]:this[e]=n}}function f3(e,t){return arguments.length>1?this.each((t==null?a3:typeof t=="function"?c3:s3)(e,t)):this.node()[e]}function V1(e){return e.trim().split(/^|\s+/)}function Kc(e){return e.classList||new X1(e)}function X1(e){this._node=e,this._names=V1(e.getAttribute("class")||"")}X1.prototype={add:function(e){var t=this._names.indexOf(e);t<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};function Q1(e,t){for(var n=Kc(e),r=-1,i=t.length;++r<i;)n.add(t[r])}function q1(e,t){for(var n=Kc(e),r=-1,i=t.length;++r<i;)n.remove(t[r])}function d3(e){return function(){Q1(this,e)}}function h3(e){return function(){q1(this,e)}}function p3(e,t){return function(){(t.apply(this,arguments)?Q1:q1)(this,e)}}function m3(e,t){var n=V1(e+"");if(arguments.length<2){for(var r=Kc(this.node()),i=-1,o=n.length;++i<o;)if(!r.contains(n[i]))return!1;return!0}return this.each((typeof t=="function"?p3:t?d3:h3)(n,t))}function g3(){this.textContent=""}function y3(e){return function(){this.textContent=e}}function v3(e){return function(){var t=e.apply(this,arguments);this.textContent=t??""}}function x3(e){return arguments.length?this.each(e==null?g3:(typeof e=="function"?v3:y3)(e)):this.node().textContent}function w3(){this.innerHTML=""}function _3(e){return function(){this.innerHTML=e}}function k3(e){return function(){var t=e.apply(this,arguments);this.innerHTML=t??""}}function S3(e){return arguments.length?this.each(e==null?w3:(typeof e=="function"?k3:_3)(e)):this.node().innerHTML}function M3(){this.nextSibling&&this.parentNode.appendChild(this)}function C3(){return this.each(M3)}function E3(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function N3(){return this.each(E3)}function T3(e){var t=typeof e=="function"?e:D1(e);return this.select(function(){return this.appendChild(t.apply(this,arguments))})}function P3(){return null}function $3(e,t){var n=typeof e=="function"?e:D1(e),r=t==null?P3:typeof t=="function"?t:Yc(t);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function z3(){var e=this.parentNode;e&&e.removeChild(this)}function R3(){return this.each(z3)}function b3(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function L3(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function A3(e){return this.select(e?L3:b3)}function I3(e){return arguments.length?this.property("__data__",e):this.node().__data__}function O3(e){return function(t){e.call(this,t,this.__data__)}}function F3(e){return e.trim().split(/^|\s+/).map(function(t){var n="",r=t.indexOf(".");return r>=0&&(n=t.slice(r+1),t=t.slice(0,r)),{type:t,name:n}})}function D3(e){return function(){var t=this.__on;if(t){for(var n=0,r=-1,i=t.length,o;n<i;++n)o=t[n],(!e.type||o.type===e.type)&&o.name===e.name?this.removeEventListener(o.type,o.listener,o.options):t[++r]=o;++r?t.length=r:delete this.__on}}}function H3(e,t,n){return function(){var r=this.__on,i,o=O3(t);if(r){for(var l=0,u=r.length;l<u;++l)if((i=r[l]).type===e.type&&i.name===e.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=n),i.value=t;return}}this.addEventListener(e.type,o,n),i={type:e.type,name:e.name,value:t,listener:o,options:n},r?r.push(i):this.__on=[i]}}function j3(e,t,n){var r=F3(e+""),i,o=r.length,l;if(arguments.length<2){var u=this.node().__on;if(u){for(var a=0,s=u.length,c;a<s;++a)for(i=0,c=u[a];i<o;++i)if((l=r[i]).type===c.type&&l.name===c.name)return c.value}return}for(u=t?H3:D3,i=0;i<o;++i)this.each(u(r[i],t,n));return this}function G1(e,t,n){var r=W1(e),i=r.CustomEvent;typeof i=="function"?i=new i(t,n):(i=r.document.createEvent("Event"),n?(i.initEvent(t,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(t,!1,!1)),e.dispatchEvent(i)}function B3(e,t){return function(){return G1(this,e,t)}}function U3(e,t){return function(){return G1(this,e,t.apply(this,arguments))}}function W3(e,t){return this.each((typeof t=="function"?U3:B3)(e,t))}function*V3(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],i=0,o=r.length,l;i<o;++i)(l=r[i])&&(yield l)}var Y1=[null];function Xe(e,t){this._groups=e,this._parents=t}function Oi(){return new Xe([[document.documentElement]],Y1)}function X3(){return this}Xe.prototype=Oi.prototype={constructor:Xe,select:vw,selectAll:kw,selectChild:Ew,selectChildren:$w,filter:zw,data:Ow,enter:Rw,exit:Dw,join:Hw,merge:jw,selection:X3,order:Bw,sort:Uw,call:Vw,nodes:Xw,node:Qw,size:qw,empty:Gw,each:Yw,attr:r3,style:u3,property:f3,classed:m3,text:x3,html:S3,raise:C3,lower:N3,append:T3,insert:$3,remove:R3,clone:A3,datum:I3,on:j3,dispatch:W3,[Symbol.iterator]:V3};function Jd(e){return typeof e=="string"?new Xe([[document.querySelector(e)]],[document.documentElement]):new Xe([[e]],Y1)}function Zc(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function K1(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function Fi(){}var Si=.7,sl=1/Si,or="\\s*([+-]?\\d+)\\s*",Mi="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",St="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Q3=/^#([0-9a-f]{3,8})$/,q3=new RegExp(`^rgb\\(${or},${or},${or}\\)$`),G3=new RegExp(`^rgb\\(${St},${St},${St}\\)$`),Y3=new RegExp(`^rgba\\(${or},${or},${or},${Mi}\\)$`),K3=new RegExp(`^rgba\\(${St},${St},${St},${Mi}\\)$`),Z3=new RegExp(`^hsl\\(${Mi},${St},${St}\\)$`),J3=new RegExp(`^hsla\\(${Mi},${St},${St},${Mi}\\)$`),e0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Zc(Fi,$n,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:t0,formatHex:t0,formatHex8:e5,formatHsl:t5,formatRgb:n0,toString:n0});function t0(){return this.rgb().formatHex()}function e5(){return this.rgb().formatHex8()}function t5(){return Z1(this).formatHsl()}function n0(){return this.rgb().formatRgb()}function $n(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=Q3.exec(e))?(n=t[1].length,t=parseInt(t[1],16),n===6?r0(t):n===3?new Ae(t>>8&15|t>>4&240,t>>4&15|t&240,(t&15)<<4|t&15,1):n===8?lo(t>>24&255,t>>16&255,t>>8&255,(t&255)/255):n===4?lo(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|t&240,((t&15)<<4|t&15)/255):null):(t=q3.exec(e))?new Ae(t[1],t[2],t[3],1):(t=G3.exec(e))?new Ae(t[1]*255/100,t[2]*255/100,t[3]*255/100,1):(t=Y3.exec(e))?lo(t[1],t[2],t[3],t[4]):(t=K3.exec(e))?lo(t[1]*255/100,t[2]*255/100,t[3]*255/100,t[4]):(t=Z3.exec(e))?l0(t[1],t[2]/100,t[3]/100,1):(t=J3.exec(e))?l0(t[1],t[2]/100,t[3]/100,t[4]):e0.hasOwnProperty(e)?r0(e0[e]):e==="transparent"?new Ae(NaN,NaN,NaN,0):null}function r0(e){return new Ae(e>>16&255,e>>8&255,e&255,1)}function lo(e,t,n,r){return r<=0&&(e=t=n=NaN),new Ae(e,t,n,r)}function n5(e){return e instanceof Fi||(e=$n(e)),e?(e=e.rgb(),new Ae(e.r,e.g,e.b,e.opacity)):new Ae}function Ss(e,t,n,r){return arguments.length===1?n5(e):new Ae(e,t,n,r??1)}function Ae(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}Zc(Ae,Ss,K1(Fi,{brighter(e){return e=e==null?sl:Math.pow(sl,e),new Ae(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=e==null?Si:Math.pow(Si,e),new Ae(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new Ae(Mn(this.r),Mn(this.g),Mn(this.b),cl(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:i0,formatHex:i0,formatHex8:r5,formatRgb:o0,toString:o0}));function i0(){return`#${xn(this.r)}${xn(this.g)}${xn(this.b)}`}function r5(){return`#${xn(this.r)}${xn(this.g)}${xn(this.b)}${xn((isNaN(this.opacity)?1:this.opacity)*255)}`}function o0(){const e=cl(this.opacity);return`${e===1?"rgb(":"rgba("}${Mn(this.r)}, ${Mn(this.g)}, ${Mn(this.b)}${e===1?")":`, ${e})`}`}function cl(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Mn(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function xn(e){return e=Mn(e),(e<16?"0":"")+e.toString(16)}function l0(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new at(e,t,n,r)}function Z1(e){if(e instanceof at)return new at(e.h,e.s,e.l,e.opacity);if(e instanceof Fi||(e=$n(e)),!e)return new at;if(e instanceof at)return e;e=e.rgb();var t=e.r/255,n=e.g/255,r=e.b/255,i=Math.min(t,n,r),o=Math.max(t,n,r),l=NaN,u=o-i,a=(o+i)/2;return u?(t===o?l=(n-r)/u+(n<r)*6:n===o?l=(r-t)/u+2:l=(t-n)/u+4,u/=a<.5?o+i:2-o-i,l*=60):u=a>0&&a<1?0:l,new at(l,u,a,e.opacity)}function i5(e,t,n,r){return arguments.length===1?Z1(e):new at(e,t,n,r??1)}function at(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}Zc(at,i5,K1(Fi,{brighter(e){return e=e==null?sl:Math.pow(sl,e),new at(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?Si:Math.pow(Si,e),new at(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,i=2*n-r;return new Ae(da(e>=240?e-240:e+120,i,r),da(e,i,r),da(e<120?e+240:e-120,i,r),this.opacity)},clamp(){return new at(u0(this.h),uo(this.s),uo(this.l),cl(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=cl(this.opacity);return`${e===1?"hsl(":"hsla("}${u0(this.h)}, ${uo(this.s)*100}%, ${uo(this.l)*100}%${e===1?")":`, ${e})`}`}}));function u0(e){return e=(e||0)%360,e<0?e+360:e}function uo(e){return Math.max(0,Math.min(1,e||0))}function da(e,t,n){return(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)*255}const Jc=e=>()=>e;function o5(e,t){return function(n){return e+n*t}}function l5(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}function u5(e){return(e=+e)==1?J1:function(t,n){return n-t?l5(t,n,e):Jc(isNaN(t)?n:t)}}function J1(e,t){var n=t-e;return n?o5(e,n):Jc(isNaN(e)?t:e)}const fl=function e(t){var n=u5(t);function r(i,o){var l=n((i=Ss(i)).r,(o=Ss(o)).r),u=n(i.g,o.g),a=n(i.b,o.b),s=J1(i.opacity,o.opacity);return function(c){return i.r=l(c),i.g=u(c),i.b=a(c),i.opacity=s(c),i+""}}return r.gamma=e,r}(1);function a5(e,t){t||(t=[]);var n=e?Math.min(t.length,e.length):0,r=t.slice(),i;return function(o){for(i=0;i<n;++i)r[i]=e[i]*(1-o)+t[i]*o;return r}}function s5(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function c5(e,t){var n=t?t.length:0,r=e?Math.min(n,e.length):0,i=new Array(r),o=new Array(n),l;for(l=0;l<r;++l)i[l]=ef(e[l],t[l]);for(;l<n;++l)o[l]=t[l];return function(u){for(l=0;l<r;++l)o[l]=i[l](u);return o}}function f5(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}function ut(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function d5(e,t){var n={},r={},i;(e===null||typeof e!="object")&&(e={}),(t===null||typeof t!="object")&&(t={});for(i in t)i in e?n[i]=ef(e[i],t[i]):r[i]=t[i];return function(o){for(i in n)r[i]=n[i](o);return r}}var Ms=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ha=new RegExp(Ms.source,"g");function h5(e){return function(){return e}}function p5(e){return function(t){return e(t)+""}}function em(e,t){var n=Ms.lastIndex=ha.lastIndex=0,r,i,o,l=-1,u=[],a=[];for(e=e+"",t=t+"";(r=Ms.exec(e))&&(i=ha.exec(t));)(o=i.index)>n&&(o=t.slice(n,o),u[l]?u[l]+=o:u[++l]=o),(r=r[0])===(i=i[0])?u[l]?u[l]+=i:u[++l]=i:(u[++l]=null,a.push({i:l,x:ut(r,i)})),n=ha.lastIndex;return n<t.length&&(o=t.slice(n),u[l]?u[l]+=o:u[++l]=o),u.length<2?a[0]?p5(a[0].x):h5(t):(t=a.length,function(s){for(var c=0,f;c<t;++c)u[(f=a[c]).i]=f.x(s);return u.join("")})}function ef(e,t){var n=typeof t,r;return t==null||n==="boolean"?Jc(t):(n==="number"?ut:n==="string"?(r=$n(t))?(t=r,fl):em:t instanceof $n?fl:t instanceof Date?f5:s5(t)?a5:Array.isArray(t)?c5:typeof t.valueOf!="function"&&typeof t.toString!="function"||isNaN(t)?d5:ut)(e,t)}function m5(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}var a0=180/Math.PI,Cs={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function tm(e,t,n,r,i,o){var l,u,a;return(l=Math.sqrt(e*e+t*t))&&(e/=l,t/=l),(a=e*n+t*r)&&(n-=e*a,r-=t*a),(u=Math.sqrt(n*n+r*r))&&(n/=u,r/=u,a/=u),e*r<t*n&&(e=-e,t=-t,a=-a,l=-l),{translateX:i,translateY:o,rotate:Math.atan2(t,e)*a0,skewX:Math.atan(a)*a0,scaleX:l,scaleY:u}}var ao;function g5(e){const t=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?Cs:tm(t.a,t.b,t.c,t.d,t.e,t.f)}function y5(e){return e==null||(ao||(ao=document.createElementNS("http://www.w3.org/2000/svg","g")),ao.setAttribute("transform",e),!(e=ao.transform.baseVal.consolidate()))?Cs:(e=e.matrix,tm(e.a,e.b,e.c,e.d,e.e,e.f))}function nm(e,t,n,r){function i(s){return s.length?s.pop()+" ":""}function o(s,c,f,d,m,y){if(s!==f||c!==d){var v=m.push("translate(",null,t,null,n);y.push({i:v-4,x:ut(s,f)},{i:v-2,x:ut(c,d)})}else(f||d)&&m.push("translate("+f+t+d+n)}function l(s,c,f,d){s!==c?(s-c>180?c+=360:c-s>180&&(s+=360),d.push({i:f.push(i(f)+"rotate(",null,r)-2,x:ut(s,c)})):c&&f.push(i(f)+"rotate("+c+r)}function u(s,c,f,d){s!==c?d.push({i:f.push(i(f)+"skewX(",null,r)-2,x:ut(s,c)}):c&&f.push(i(f)+"skewX("+c+r)}function a(s,c,f,d,m,y){if(s!==f||c!==d){var v=m.push(i(m)+"scale(",null,",",null,")");y.push({i:v-4,x:ut(s,f)},{i:v-2,x:ut(c,d)})}else(f!==1||d!==1)&&m.push(i(m)+"scale("+f+","+d+")")}return function(s,c){var f=[],d=[];return s=e(s),c=e(c),o(s.translateX,s.translateY,c.translateX,c.translateY,f,d),l(s.rotate,c.rotate,f,d),u(s.skewX,c.skewX,f,d),a(s.scaleX,s.scaleY,c.scaleX,c.scaleY,f,d),s=c=null,function(m){for(var y=-1,v=d.length,k;++y<v;)f[(k=d[y]).i]=k.x(m);return f.join("")}}}var v5=nm(g5,"px, ","px)","deg)"),x5=nm(y5,", ",")",")"),gr=0,Br=0,Ir=0,rm=1e3,dl,Ur,hl=0,zn=0,cu=0,Ci=typeof performance=="object"&&performance.now?performance:Date,im=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function tf(){return zn||(im(w5),zn=Ci.now()+cu)}function w5(){zn=0}function pl(){this._call=this._time=this._next=null}pl.prototype=om.prototype={constructor:pl,restart:function(e,t,n){if(typeof e!="function")throw new TypeError("callback is not a function");n=(n==null?tf():+n)+(t==null?0:+t),!this._next&&Ur!==this&&(Ur?Ur._next=this:dl=this,Ur=this),this._call=e,this._time=n,Es()},stop:function(){this._call&&(this._call=null,this._time=1/0,Es())}};function om(e,t,n){var r=new pl;return r.restart(e,t,n),r}function _5(){tf(),++gr;for(var e=dl,t;e;)(t=zn-e._time)>=0&&e._call.call(void 0,t),e=e._next;--gr}function s0(){zn=(hl=Ci.now())+cu,gr=Br=0;try{_5()}finally{gr=0,S5(),zn=0}}function k5(){var e=Ci.now(),t=e-hl;t>rm&&(cu-=t,hl=e)}function S5(){for(var e,t=dl,n,r=1/0;t;)t._call?(r>t._time&&(r=t._time),e=t,t=t._next):(n=t._next,t._next=null,t=e?e._next=n:dl=n);Ur=e,Es(r)}function Es(e){if(!gr){Br&&(Br=clearTimeout(Br));var t=e-zn;t>24?(e<1/0&&(Br=setTimeout(s0,e-Ci.now()-cu)),Ir&&(Ir=clearInterval(Ir))):(Ir||(hl=Ci.now(),Ir=setInterval(k5,rm)),gr=1,im(s0))}}function c0(e,t,n){var r=new pl;return t=t==null?0:+t,r.restart(i=>{r.stop(),e(i+t)},t,n),r}var M5=F1("start","end","cancel","interrupt"),C5=[],lm=0,f0=1,Ns=2,To=3,d0=4,Ts=5,Po=6;function fu(e,t,n,r,i,o){var l=e.__transition;if(!l)e.__transition={};else if(n in l)return;E5(e,n,{name:t,index:r,group:i,on:M5,tween:C5,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:lm})}function nf(e,t){var n=dt(e,t);if(n.state>lm)throw new Error("too late; already scheduled");return n}function Mt(e,t){var n=dt(e,t);if(n.state>To)throw new Error("too late; already running");return n}function dt(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function E5(e,t,n){var r=e.__transition,i;r[t]=n,n.timer=om(o,0,n.time);function o(s){n.state=f0,n.timer.restart(l,n.delay,n.time),n.delay<=s&&l(s-n.delay)}function l(s){var c,f,d,m;if(n.state!==f0)return a();for(c in r)if(m=r[c],m.name===n.name){if(m.state===To)return c0(l);m.state===d0?(m.state=Po,m.timer.stop(),m.on.call("interrupt",e,e.__data__,m.index,m.group),delete r[c]):+c<t&&(m.state=Po,m.timer.stop(),m.on.call("cancel",e,e.__data__,m.index,m.group),delete r[c])}if(c0(function(){n.state===To&&(n.state=d0,n.timer.restart(u,n.delay,n.time),u(s))}),n.state=Ns,n.on.call("start",e,e.__data__,n.index,n.group),n.state===Ns){for(n.state=To,i=new Array(d=n.tween.length),c=0,f=-1;c<d;++c)(m=n.tween[c].value.call(e,e.__data__,n.index,n.group))&&(i[++f]=m);i.length=f+1}}function u(s){for(var c=s<n.duration?n.ease.call(null,s/n.duration):(n.timer.restart(a),n.state=Ts,1),f=-1,d=i.length;++f<d;)i[f].call(e,c);n.state===Ts&&(n.on.call("end",e,e.__data__,n.index,n.group),a())}function a(){n.state=Po,n.timer.stop(),delete r[t];for(var s in r)return;delete e.__transition}}function N5(e,t){var n=e.__transition,r,i,o=!0,l;if(n){t=t==null?null:t+"";for(l in n){if((r=n[l]).name!==t){o=!1;continue}i=r.state>Ns&&r.state<Ts,r.state=Po,r.timer.stop(),r.on.call(i?"interrupt":"cancel",e,e.__data__,r.index,r.group),delete n[l]}o&&delete e.__transition}}function T5(e){return this.each(function(){N5(this,e)})}function P5(e,t){var n,r;return function(){var i=Mt(this,e),o=i.tween;if(o!==n){r=n=o;for(var l=0,u=r.length;l<u;++l)if(r[l].name===t){r=r.slice(),r.splice(l,1);break}}i.tween=r}}function $5(e,t,n){var r,i;if(typeof n!="function")throw new Error;return function(){var o=Mt(this,e),l=o.tween;if(l!==r){i=(r=l).slice();for(var u={name:t,value:n},a=0,s=i.length;a<s;++a)if(i[a].name===t){i[a]=u;break}a===s&&i.push(u)}o.tween=i}}function z5(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r=dt(this.node(),n).tween,i=0,o=r.length,l;i<o;++i)if((l=r[i]).name===e)return l.value;return null}return this.each((t==null?P5:$5)(n,e,t))}function rf(e,t,n){var r=e._id;return e.each(function(){var i=Mt(this,r);(i.value||(i.value={}))[t]=n.apply(this,arguments)}),function(i){return dt(i,r).value[t]}}function um(e,t){var n;return(typeof t=="number"?ut:t instanceof $n?fl:(n=$n(t))?(t=n,fl):em)(e,t)}function R5(e){return function(){this.removeAttribute(e)}}function b5(e){return function(){this.removeAttributeNS(e.space,e.local)}}function L5(e,t,n){var r,i=n+"",o;return function(){var l=this.getAttribute(e);return l===i?null:l===r?o:o=t(r=l,n)}}function A5(e,t,n){var r,i=n+"",o;return function(){var l=this.getAttributeNS(e.space,e.local);return l===i?null:l===r?o:o=t(r=l,n)}}function I5(e,t,n){var r,i,o;return function(){var l,u=n(this),a;return u==null?void this.removeAttribute(e):(l=this.getAttribute(e),a=u+"",l===a?null:l===r&&a===i?o:(i=a,o=t(r=l,u)))}}function O5(e,t,n){var r,i,o;return function(){var l,u=n(this),a;return u==null?void this.removeAttributeNS(e.space,e.local):(l=this.getAttributeNS(e.space,e.local),a=u+"",l===a?null:l===r&&a===i?o:(i=a,o=t(r=l,u)))}}function F5(e,t){var n=su(e),r=n==="transform"?x5:um;return this.attrTween(e,typeof t=="function"?(n.local?O5:I5)(n,r,rf(this,"attr."+e,t)):t==null?(n.local?b5:R5)(n):(n.local?A5:L5)(n,r,t))}function D5(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}function H5(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}function j5(e,t){var n,r;function i(){var o=t.apply(this,arguments);return o!==r&&(n=(r=o)&&H5(e,o)),n}return i._value=t,i}function B5(e,t){var n,r;function i(){var o=t.apply(this,arguments);return o!==r&&(n=(r=o)&&D5(e,o)),n}return i._value=t,i}function U5(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(t==null)return this.tween(n,null);if(typeof t!="function")throw new Error;var r=su(e);return this.tween(n,(r.local?j5:B5)(r,t))}function W5(e,t){return function(){nf(this,e).delay=+t.apply(this,arguments)}}function V5(e,t){return t=+t,function(){nf(this,e).delay=t}}function X5(e){var t=this._id;return arguments.length?this.each((typeof e=="function"?W5:V5)(t,e)):dt(this.node(),t).delay}function Q5(e,t){return function(){Mt(this,e).duration=+t.apply(this,arguments)}}function q5(e,t){return t=+t,function(){Mt(this,e).duration=t}}function G5(e){var t=this._id;return arguments.length?this.each((typeof e=="function"?Q5:q5)(t,e)):dt(this.node(),t).duration}function Y5(e,t){if(typeof t!="function")throw new Error;return function(){Mt(this,e).ease=t}}function K5(e){var t=this._id;return arguments.length?this.each(Y5(t,e)):dt(this.node(),t).ease}function Z5(e,t){return function(){var n=t.apply(this,arguments);if(typeof n!="function")throw new Error;Mt(this,e).ease=n}}function J5(e){if(typeof e!="function")throw new Error;return this.each(Z5(this._id,e))}function e4(e){typeof e!="function"&&(e=j1(e));for(var t=this._groups,n=t.length,r=new Array(n),i=0;i<n;++i)for(var o=t[i],l=o.length,u=r[i]=[],a,s=0;s<l;++s)(a=o[s])&&e.call(a,a.__data__,s,o)&&u.push(a);return new It(r,this._parents,this._name,this._id)}function t4(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,i=n.length,o=Math.min(r,i),l=new Array(r),u=0;u<o;++u)for(var a=t[u],s=n[u],c=a.length,f=l[u]=new Array(c),d,m=0;m<c;++m)(d=a[m]||s[m])&&(f[m]=d);for(;u<r;++u)l[u]=t[u];return new It(l,this._parents,this._name,this._id)}function n4(e){return(e+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||t==="start"})}function r4(e,t,n){var r,i,o=n4(t)?nf:Mt;return function(){var l=o(this,e),u=l.on;u!==r&&(i=(r=u).copy()).on(t,n),l.on=i}}function i4(e,t){var n=this._id;return arguments.length<2?dt(this.node(),n).on.on(e):this.each(r4(n,e,t))}function o4(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}function l4(){return this.on("end.remove",o4(this._id))}function u4(e){var t=this._name,n=this._id;typeof e!="function"&&(e=Yc(e));for(var r=this._groups,i=r.length,o=new Array(i),l=0;l<i;++l)for(var u=r[l],a=u.length,s=o[l]=new Array(a),c,f,d=0;d<a;++d)(c=u[d])&&(f=e.call(c,c.__data__,d,u))&&("__data__"in c&&(f.__data__=c.__data__),s[d]=f,fu(s[d],t,n,d,s,dt(c,n)));return new It(o,this._parents,t,n)}function a4(e){var t=this._name,n=this._id;typeof e!="function"&&(e=H1(e));for(var r=this._groups,i=r.length,o=[],l=[],u=0;u<i;++u)for(var a=r[u],s=a.length,c,f=0;f<s;++f)if(c=a[f]){for(var d=e.call(c,c.__data__,f,a),m,y=dt(c,n),v=0,k=d.length;v<k;++v)(m=d[v])&&fu(m,t,n,v,d,y);o.push(d),l.push(c)}return new It(o,l,t,n)}var s4=Oi.prototype.constructor;function c4(){return new s4(this._groups,this._parents)}function f4(e,t){var n,r,i;return function(){var o=mr(this,e),l=(this.style.removeProperty(e),mr(this,e));return o===l?null:o===n&&l===r?i:i=t(n=o,r=l)}}function am(e){return function(){this.style.removeProperty(e)}}function d4(e,t,n){var r,i=n+"",o;return function(){var l=mr(this,e);return l===i?null:l===r?o:o=t(r=l,n)}}function h4(e,t,n){var r,i,o;return function(){var l=mr(this,e),u=n(this),a=u+"";return u==null&&(a=u=(this.style.removeProperty(e),mr(this,e))),l===a?null:l===r&&a===i?o:(i=a,o=t(r=l,u))}}function p4(e,t){var n,r,i,o="style."+t,l="end."+o,u;return function(){var a=Mt(this,e),s=a.on,c=a.value[o]==null?u||(u=am(t)):void 0;(s!==n||i!==c)&&(r=(n=s).copy()).on(l,i=c),a.on=r}}function m4(e,t,n){var r=(e+="")=="transform"?v5:um;return t==null?this.styleTween(e,f4(e,r)).on("end.style."+e,am(e)):typeof t=="function"?this.styleTween(e,h4(e,r,rf(this,"style."+e,t))).each(p4(this._id,e)):this.styleTween(e,d4(e,r,t),n).on("end.style."+e,null)}function g4(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}function y4(e,t,n){var r,i;function o(){var l=t.apply(this,arguments);return l!==i&&(r=(i=l)&&g4(e,l,n)),r}return o._value=t,o}function v4(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(t==null)return this.tween(r,null);if(typeof t!="function")throw new Error;return this.tween(r,y4(e,t,n??""))}function x4(e){return function(){this.textContent=e}}function w4(e){return function(){var t=e(this);this.textContent=t??""}}function _4(e){return this.tween("text",typeof e=="function"?w4(rf(this,"text",e)):x4(e==null?"":e+""))}function k4(e){return function(t){this.textContent=e.call(this,t)}}function S4(e){var t,n;function r(){var i=e.apply(this,arguments);return i!==n&&(t=(n=i)&&k4(i)),t}return r._value=e,r}function M4(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(e==null)return this.tween(t,null);if(typeof e!="function")throw new Error;return this.tween(t,S4(e))}function C4(){for(var e=this._name,t=this._id,n=sm(),r=this._groups,i=r.length,o=0;o<i;++o)for(var l=r[o],u=l.length,a,s=0;s<u;++s)if(a=l[s]){var c=dt(a,t);fu(a,e,n,s,l,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new It(r,this._parents,e,n)}function E4(){var e,t,n=this,r=n._id,i=n.size();return new Promise(function(o,l){var u={value:l},a={value:function(){--i===0&&o()}};n.each(function(){var s=Mt(this,r),c=s.on;c!==e&&(t=(e=c).copy(),t._.cancel.push(u),t._.interrupt.push(u),t._.end.push(a)),s.on=t}),i===0&&o()})}var N4=0;function It(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function sm(){return++N4}var Et=Oi.prototype;It.prototype={constructor:It,select:u4,selectAll:a4,selectChild:Et.selectChild,selectChildren:Et.selectChildren,filter:e4,merge:t4,selection:c4,transition:C4,call:Et.call,nodes:Et.nodes,node:Et.node,size:Et.size,empty:Et.empty,each:Et.each,on:i4,attr:F5,attrTween:U5,style:m4,styleTween:v4,text:_4,textTween:M4,remove:l4,tween:z5,delay:X5,duration:G5,ease:K5,easeVarying:J5,end:E4,[Symbol.iterator]:Et[Symbol.iterator]};function T4(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}var P4={time:null,delay:0,duration:250,ease:T4};function $4(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}function z4(e){var t,n;e instanceof It?(t=e._id,e=e._name):(t=sm(),(n=P4).time=tf(),e=e==null?null:e+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var l=r[o],u=l.length,a,s=0;s<u;++s)(a=l[s])&&fu(a,e,t,s,l,n||$4(a,t));return new It(r,this._parents,e,t)}Oi.prototype.interrupt=T5;Oi.prototype.transition=z4;const Ps=Math.PI,$s=2*Ps,mn=1e-6,R4=$s-mn;function cm(e){this._+=e[0];for(let t=1,n=e.length;t<n;++t)this._+=arguments[t]+e[t]}function b4(e){let t=Math.floor(e);if(!(t>=0))throw new Error(`invalid digits: ${e}`);if(t>15)return cm;const n=10**t;return function(r){this._+=r[0];for(let i=1,o=r.length;i<o;++i)this._+=Math.round(arguments[i]*n)/n+r[i]}}class L4{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=t==null?cm:b4(t)}moveTo(t,n){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,n){this._append`L${this._x1=+t},${this._y1=+n}`}quadraticCurveTo(t,n,r,i){this._append`Q${+t},${+n},${this._x1=+r},${this._y1=+i}`}bezierCurveTo(t,n,r,i,o,l){this._append`C${+t},${+n},${+r},${+i},${this._x1=+o},${this._y1=+l}`}arcTo(t,n,r,i,o){if(t=+t,n=+n,r=+r,i=+i,o=+o,o<0)throw new Error(`negative radius: ${o}`);let l=this._x1,u=this._y1,a=r-t,s=i-n,c=l-t,f=u-n,d=c*c+f*f;if(this._x1===null)this._append`M${this._x1=t},${this._y1=n}`;else if(d>mn)if(!(Math.abs(f*a-s*c)>mn)||!o)this._append`L${this._x1=t},${this._y1=n}`;else{let m=r-l,y=i-u,v=a*a+s*s,k=m*m+y*y,p=Math.sqrt(v),h=Math.sqrt(d),g=o*Math.tan((Ps-Math.acos((v+d-k)/(2*p*h)))/2),x=g/h,w=g/p;Math.abs(x-1)>mn&&this._append`L${t+x*c},${n+x*f}`,this._append`A${o},${o},0,0,${+(f*m>c*y)},${this._x1=t+w*a},${this._y1=n+w*s}`}}arc(t,n,r,i,o,l){if(t=+t,n=+n,r=+r,l=!!l,r<0)throw new Error(`negative radius: ${r}`);let u=r*Math.cos(i),a=r*Math.sin(i),s=t+u,c=n+a,f=1^l,d=l?i-o:o-i;this._x1===null?this._append`M${s},${c}`:(Math.abs(this._x1-s)>mn||Math.abs(this._y1-c)>mn)&&this._append`L${s},${c}`,r&&(d<0&&(d=d%$s+$s),d>R4?this._append`A${r},${r},0,1,${f},${t-u},${n-a}A${r},${r},0,1,${f},${this._x1=s},${this._y1=c}`:d>mn&&this._append`A${r},${r},0,${+(d>=Ps)},${f},${this._x1=t+r*Math.cos(o)},${this._y1=n+r*Math.sin(o)}`)}rect(t,n,r,i){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}h${r=+r}v${+i}h${-r}Z`}toString(){return this._}}function A4(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)}function ml(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}function yr(e){return e=ml(Math.abs(e)),e?e[1]:NaN}function I4(e,t){return function(n,r){for(var i=n.length,o=[],l=0,u=e[0],a=0;i>0&&u>0&&(a+u+1>r&&(u=Math.max(1,r-a)),o.push(n.substring(i-=u,i+u)),!((a+=u+1)>r));)u=e[l=(l+1)%e.length];return o.reverse().join(t)}}function O4(e){return function(t){return t.replace(/[0-9]/g,function(n){return e[+n]})}}var F4=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function gl(e){if(!(t=F4.exec(e)))throw new Error("invalid format: "+e);var t;return new of({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}gl.prototype=of.prototype;function of(e){this.fill=e.fill===void 0?" ":e.fill+"",this.align=e.align===void 0?">":e.align+"",this.sign=e.sign===void 0?"-":e.sign+"",this.symbol=e.symbol===void 0?"":e.symbol+"",this.zero=!!e.zero,this.width=e.width===void 0?void 0:+e.width,this.comma=!!e.comma,this.precision=e.precision===void 0?void 0:+e.precision,this.trim=!!e.trim,this.type=e.type===void 0?"":e.type+""}of.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function D4(e){e:for(var t=e.length,n=1,r=-1,i;n<t;++n)switch(e[n]){case".":r=i=n;break;case"0":r===0&&(r=n),i=n;break;default:if(!+e[n])break e;r>0&&(r=0);break}return r>0?e.slice(0,r)+e.slice(i+1):e}var fm;function H4(e,t){var n=ml(e,t);if(!n)return e+"";var r=n[0],i=n[1],o=i-(fm=Math.max(-8,Math.min(8,Math.floor(i/3)))*3)+1,l=r.length;return o===l?r:o>l?r+new Array(o-l+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+ml(e,Math.max(0,t+o-1))[0]}function h0(e,t){var n=ml(e,t);if(!n)return e+"";var r=n[0],i=n[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}const p0={"%":(e,t)=>(e*100).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:A4,e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>h0(e*100,t),r:h0,s:H4,X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function m0(e){return e}var g0=Array.prototype.map,y0=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function j4(e){var t=e.grouping===void 0||e.thousands===void 0?m0:I4(g0.call(e.grouping,Number),e.thousands+""),n=e.currency===void 0?"":e.currency[0]+"",r=e.currency===void 0?"":e.currency[1]+"",i=e.decimal===void 0?".":e.decimal+"",o=e.numerals===void 0?m0:O4(g0.call(e.numerals,String)),l=e.percent===void 0?"%":e.percent+"",u=e.minus===void 0?"−":e.minus+"",a=e.nan===void 0?"NaN":e.nan+"";function s(f){f=gl(f);var d=f.fill,m=f.align,y=f.sign,v=f.symbol,k=f.zero,p=f.width,h=f.comma,g=f.precision,x=f.trim,w=f.type;w==="n"?(h=!0,w="g"):p0[w]||(g===void 0&&(g=12),x=!0,w="g"),(k||d==="0"&&m==="=")&&(k=!0,d="0",m="=");var S=v==="$"?n:v==="#"&&/[boxX]/.test(w)?"0"+w.toLowerCase():"",_=v==="$"?r:/[%p]/.test(w)?l:"",T=p0[w],I=/[defgprs%]/.test(w);g=g===void 0?6:/[gprs]/.test(w)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g));function z(R){var W=S,j=_,J,Ct,He;if(w==="c")j=T(R)+j,R="";else{R=+R;var Re=R<0||1/R<0;if(R=isNaN(R)?a:T(Math.abs(R),g),x&&(R=D4(R)),Re&&+R==0&&y!=="+"&&(Re=!1),W=(Re?y==="("?y:u:y==="-"||y==="("?"":y)+W,j=(w==="s"?y0[8+fm/3]:"")+j+(Re&&y==="("?")":""),I){for(J=-1,Ct=R.length;++J<Ct;)if(He=R.charCodeAt(J),48>He||He>57){j=(He===46?i+R.slice(J+1):R.slice(J))+j,R=R.slice(0,J);break}}}h&&!k&&(R=t(R,1/0));var N=W.length+R.length+j.length,b=N<p?new Array(p-N+1).join(d):"";switch(h&&k&&(R=t(b+R,b.length?p-j.length:1/0),b=""),m){case"<":R=W+R+j+b;break;case"=":R=W+b+R+j;break;case"^":R=b.slice(0,N=b.length>>1)+W+R+j+b.slice(N);break;default:R=b+W+R+j;break}return o(R)}return z.toString=function(){return f+""},z}function c(f,d){var m=s((f=gl(f),f.type="f",f)),y=Math.max(-8,Math.min(8,Math.floor(yr(d)/3)))*3,v=Math.pow(10,-y),k=y0[8+y/3];return function(p){return m(v*p)+k}}return{format:s,formatPrefix:c}}var so,dm,hm;B4({thousands:",",grouping:[3],currency:["$",""]});function B4(e){return so=j4(e),dm=so.format,hm=so.formatPrefix,so}function U4(e){return Math.max(0,-yr(Math.abs(e)))}function W4(e,t){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(yr(t)/3)))*3-yr(Math.abs(e)))}function V4(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,yr(t)-yr(e))+1}function X4(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e);break}return this}function Q4(e){return function(){return e}}function q4(e){return+e}var v0=[0,1];function Yn(e){return e}function zs(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:Q4(isNaN(t)?NaN:.5)}function G4(e,t){var n;return e>t&&(n=e,e=t,t=n),function(r){return Math.max(e,Math.min(t,r))}}function Y4(e,t,n){var r=e[0],i=e[1],o=t[0],l=t[1];return i<r?(r=zs(i,r),o=n(l,o)):(r=zs(r,i),o=n(o,l)),function(u){return o(r(u))}}function K4(e,t,n){var r=Math.min(e.length,t.length)-1,i=new Array(r),o=new Array(r),l=-1;for(e[r]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++l<r;)i[l]=zs(e[l],e[l+1]),o[l]=n(t[l],t[l+1]);return function(u){var a=Zx(e,u,1,r)-1;return o[a](i[a](u))}}function Z4(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function J4(){var e=v0,t=v0,n=ef,r,i,o,l=Yn,u,a,s;function c(){var d=Math.min(e.length,t.length);return l!==Yn&&(l=G4(e[0],e[d-1])),u=d>2?K4:Y4,a=s=null,f}function f(d){return d==null||isNaN(d=+d)?o:(a||(a=u(e.map(r),t,n)))(r(l(d)))}return f.invert=function(d){return l(i((s||(s=u(t,e.map(r),ut)))(d)))},f.domain=function(d){return arguments.length?(e=Array.from(d,q4),c()):e.slice()},f.range=function(d){return arguments.length?(t=Array.from(d),c()):t.slice()},f.rangeRound=function(d){return t=Array.from(d),n=m5,c()},f.clamp=function(d){return arguments.length?(l=d?!0:Yn,c()):l!==Yn},f.interpolate=function(d){return arguments.length?(n=d,c()):n},f.unknown=function(d){return arguments.length?(o=d,f):o},function(d,m){return r=d,i=m,c()}}function e6(){return J4()(Yn,Yn)}function t6(e,t,n,r){var i=rw(e,t,n),o;switch(r=gl(r??",f"),r.type){case"s":{var l=Math.max(Math.abs(e),Math.abs(t));return r.precision==null&&!isNaN(o=W4(i,l))&&(r.precision=o),hm(r,l)}case"":case"e":case"g":case"p":case"r":{r.precision==null&&!isNaN(o=V4(i,Math.max(Math.abs(e),Math.abs(t))))&&(r.precision=o-(r.type==="e"));break}case"f":case"%":{r.precision==null&&!isNaN(o=U4(i))&&(r.precision=o-(r.type==="%")*2);break}}return dm(r)}function n6(e){var t=e.domain;return e.ticks=function(n){var r=t();return nw(r[0],r[r.length-1],n??10)},e.tickFormat=function(n,r){var i=t();return t6(i[0],i[i.length-1],n??10,r)},e.nice=function(n){n==null&&(n=10);var r=t(),i=0,o=r.length-1,l=r[i],u=r[o],a,s,c=10;for(u<l&&(s=l,l=u,u=s,s=i,i=o,o=s);c-- >0;){if(s=ws(l,u,n),s===a)return r[i]=l,r[o]=u,t(r);if(s>0)l=Math.floor(l/s)*s,u=Math.ceil(u/s)*s;else if(s<0)l=Math.ceil(l*s)/s,u=Math.floor(u*s)/s;else break;a=s}return e},e}function Rs(){var e=e6();return e.copy=function(){return Z4(e,Rs())},X4.apply(e,arguments),n6(e)}function On(e){return function(){return e}}function r6(e){let t=3;return e.digits=function(n){if(!arguments.length)return t;if(n==null)t=null;else{const r=Math.floor(n);if(!(r>=0))throw new RangeError(`invalid digits: ${n}`);t=r}return e},()=>new L4(t)}function i6(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function pm(e){this._context=e}pm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t);break}}};function o6(e){return new pm(e)}function l6(e){return e[0]}function u6(e){return e[1]}function a6(e,t){var n=On(!0),r=null,i=o6,o=null,l=r6(u);e=typeof e=="function"?e:e===void 0?l6:On(e),t=typeof t=="function"?t:t===void 0?u6:On(t);function u(a){var s,c=(a=i6(a)).length,f,d=!1,m;for(r==null&&(o=i(m=l())),s=0;s<=c;++s)!(s<c&&n(f=a[s],s,a))===d&&((d=!d)?o.lineStart():o.lineEnd()),d&&o.point(+e(f,s,a),+t(f,s,a));if(m)return o=null,m+""||null}return u.x=function(a){return arguments.length?(e=typeof a=="function"?a:On(+a),u):e},u.y=function(a){return arguments.length?(t=typeof a=="function"?a:On(+a),u):t},u.defined=function(a){return arguments.length?(n=typeof a=="function"?a:On(!!a),u):n},u.curve=function(a){return arguments.length?(i=a,r!=null&&(o=i(r)),u):i},u.context=function(a){return arguments.length?(a==null?r=o=null:o=i(r=a),u):r},u}function Wr(e,t,n){this.k=e,this.x=t,this.y=n}Wr.prototype={constructor:Wr,scale:function(e){return e===1?this:new Wr(this.k*e,this.x,this.y)},translate:function(e,t){return e===0&t===0?this:new Wr(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};Wr.prototype;function s6(e){const t=F.useRef(),n=x0(e),[r,i]=F.useState(0),[o,l]=F.useState(0);F.useEffect(()=>{const a=t.current,s=new ResizeObserver(c=>{if(!Array.isArray(c)||!c.length)return;const f=c[0];r!=f.contentRect.width&&i(f.contentRect.width),o!=f.contentRect.height&&l(f.contentRect.height)});return s.observe(a),()=>s.unobserve(a)},[]);const u=x0({...n,width:n.width||r,height:n.height||o});return[t,u]}const x0=e=>{const t={...e,marginTop:e.marginTop||10,marginRight:e.marginRight||10,marginBottom:e.marginBottom||40,marginLeft:e.marginLeft||75};return{...t,boundedHeight:Math.max(t.height-t.marginTop-t.marginBottom,0),boundedWidth:Math.max(t.width-t.marginLeft-t.marginRight,0)}},c6=e=>{const{data:t,xMin:n,xMax:r,yMin:i,yMax:o,...l}=e,[u,a]=s6({height:320,marginTop:0,marginRight:0,marginBottom:20,marginLeft:30}),s=F.useRef(),c=F.useRef(),f=Rs([n,r],[a.marginLeft,a.boundedWidth]),d=Rs([i,o],[a.boundedHeight,a.marginTop]),m=a6(y=>f(y[0]),y=>d(y[1]));return F.useEffect(()=>void Jd(s.current).call(cw(f)),[s,f]),F.useEffect(()=>void Jd(c.current).call(fw(d)),[c,d]),P(f6,{...l,ref:u,children:X("svg",{width:a.width,height:a.height,children:[P("g",{ref:s,transform:`translate(0, ${a.boundedHeight})`}),P("g",{ref:c,transform:`translate(${a.marginLeft}, 0)`}),P("path",{fill:"none",stroke:"currentColor",strokeWidth:"1",d:m(t)}),P("g",{fill:"white",stroke:"currentColor",strokeWidth:"1",children:t.map((y,v)=>P("circle",{cx:f(y[0]),cy:d(y[1]),r:"2"},v))})]})})},f6=A("div",{target:"evuca4j0"})(()=>({width:"100%",height:"100%"}),""),d6=e=>{const{labelText:t,id:n,value:r,onChange:i,...o}=e;return X(h6,{children:[t?P(Ii,{htmlFor:n,children:t}):null,P("input",{id:n,type:"text",value:r,onChange:l=>i==null?void 0:i(l.target.value),...o})]})},h6=A(au,{target:"e5elct20"})(()=>({}),""),bs=e=>{const{labelText:t,id:n,checked:r,onChange:i,...o}=e;return X(p6,{children:[P("input",{id:n,type:"checkbox",checked:r,onChange:l=>i==null?void 0:i(l.target.checked),...o}),t?P(Ii,{htmlFor:n,children:t}):null]})},p6=A("div",{target:"e1kz4ufq0"})(({})=>({display:"flex",columnGap:"8px"}),""),w0=e=>{const{labelText:t,id:n,defaultValue:r="",value:i,onChange:o,...l}=e;return X(m6,{children:[t?P(Ii,{htmlFor:n,children:t}):null,P("input",{id:n,type:"number",value:typeof i=="number"?i.toString():"",onChange:u=>o==null?void 0:o(u.target.value?parseFloat(u.target.value):null),...l})]})},m6=A(au,{target:"eqvv40g0"})(()=>({}),""),g6=e=>{const{color:t,onColorChange:n,fixBase:r,onFixBaseChange:i,useApca:o,onUseApcaChange:l,hueShift:u,onHueShiftChange:a,decreaseSaturationRatio:s,onDecreaseSaturationRatioChange:c}=e,f=Ai(t),d=t.h,m=x=>n==null?void 0:n({...t,h:x}),y=t.s*100,v=x=>n==null?void 0:n({...t,s:x/100}),k=t.l*100;return X(y6,{children:[X(v6,{children:[P(_6,{children:P(k6,{type:"color",value:f,onChange:x=>n==null?void 0:n(Sn(x.target.value))})}),P(d6,{id:"hex",value:f,onChange:x=>n==null?void 0:n(Sn(x))})]}),X(x6,{children:[P(sa,{id:"hue",labelText:"hue",value:d,onChange:m,min:0,max:360}),P(sa,{id:"saturation",labelText:"saturation",value:y,onChange:v,min:0,max:100}),P(sa,{id:"lightness",labelText:"lightness",value:k,onChange:x=>n==null?void 0:n({...t,l:x/100}),min:0,max:100})]}),X(w6,{children:[X(_0,{children:[P(bs,{id:"useApca",labelText:"Подогнать цвета под фиксированные значения контрастности",checked:o,onChange:l}),P(bs,{id:"fixBase",labelText:"Зафиксировать входной цвет",checked:r,onChange:i,disabled:!o})]}),X(_0,{children:[P(w0,{id:"hueShift",labelText:"Смещение цветового тона",step:1,value:u,onChange:a}),P(w0,{id:"decreaseSaturationRatio",labelText:"Коэффициент уменьшения насыщенности",defaultValue:.75,min:0,step:.01,max:1,value:s,onChange:c})]})]})]})},y6=A("div",{target:"eimdl8n7"})(({})=>({display:"grid",gridTemplateColumns:"20% 1fr",gap:"24px"}),""),mm=A("div",{target:"eimdl8n6"})(({})=>({display:"flex",columnGap:"12px"}),""),_0=A("div",{target:"eimdl8n5"})(({})=>({display:"flex",flexDirection:"column",rowGap:"12px",flexGrow:1}),""),v6=A("div",{target:"eimdl8n4"})(({})=>({gridRow:"span 2",display:"flex",flexDirection:"column",rowGap:"12px"}),""),x6=A("div",{target:"eimdl8n3"})(({})=>({display:"flex",flexDirection:"column",rowGap:"12px"}),""),w6=A(mm,{target:"eimdl8n2"})({name:"0",styles:""}),_6=A(mm,{target:"eimdl8n1"})(({})=>({aspectRatio:1}),""),k6=A("input",{target:"eimdl8n0"})({name:"1ik1hrh",styles:"height:100%;width:100%;border-radius:4px;appearance:none;padding:0;border:none;background:none;cursor:pointer;&::-webkit-color-swatch-wrapper{padding:0;}&::-webkit-color-swatch{border:none;}"});/** @preserve
/////    SAPC APCA - Advanced Perceptual Contrast Algorithm
/////           Beta 0.1.9 W3 • contrast function only
/////           DIST: W3 • Revision date: July 3, 2022
/////    Function to parse color values and determine Lc contrast
/////    Copyright © 2019-2022 by Andrew Somers. All Rights Reserved.
/////    LICENSE: W3 LICENSE
/////    CONTACT: Please use the ISSUES or DISCUSSIONS tab at:
/////    https://github.com/Myndex/SAPC-APCA/
/////
///////////////////////////////////////////////////////////////////////////////
/////
/////    MINIMAL IMPORTS:
/////      import { APCAcontrast, sRGBtoY, displayP3toY,
/////               calcAPCA, fontLookupAPCA } from 'apca-w3';
/////      import { colorParsley } from 'colorparsley';
/////
/////    FORWARD CONTRAST USAGE:
/////      Lc = APCAcontrast( sRGBtoY( TEXTcolor ) , sRGBtoY( BACKGNDcolor ) );
/////    Where the colors are sent as an rgba array [255,255,255,1]
/////
/////    Retrieving an array of font sizes for the contrast:
/////      fontArray = fontLookupAPCA(Lc);
/////
/////    Live Demonstrator at https://www.myndex.com/APCA/
// */const le={mainTRC:2.4,get mainTRCencode(){return 1/this.mainTRC},sRco:.2126729,sGco:.7151522,sBco:.072175,normBG:.56,normTXT:.57,revTXT:.62,revBG:.65,blkThrs:.022,blkClmp:1.414,scaleBoW:1.14,scaleWoB:1.14,loBoWoffset:.027,loWoBoffset:.027,deltaYmin:5e-4,loClip:.1,mFactor:1.9468554433171,get mFactInv(){return 1/this.mFactor},mOffsetIn:.0387393816571401,mExpAdj:.283343396420869,get mExp(){return this.mExpAdj/this.blkClmp},mOffsetOut:.312865795870758};function S6(e,t,n=-1){const r=[0,1.1];if(isNaN(e)||isNaN(t)||Math.min(e,t)<r[0]||Math.max(e,t)>r[1])return 0;let i=0,o=0,l="BoW";return e=e>le.blkThrs?e:e+Math.pow(le.blkThrs-e,le.blkClmp),t=t>le.blkThrs?t:t+Math.pow(le.blkThrs-t,le.blkClmp),Math.abs(t-e)<le.deltaYmin?0:(t>e?(i=(Math.pow(t,le.normBG)-Math.pow(e,le.normTXT))*le.scaleBoW,o=i<le.loClip?0:i-le.loBoWoffset):(l="WoB",i=(Math.pow(t,le.revBG)-Math.pow(e,le.revTXT))*le.scaleWoB,o=i>-le.loClip?0:i+le.loWoBoffset),n<0?o*100:n==0?Math.round(Math.abs(o)*100)+"<sub>"+l+"</sub>":Number.isInteger(n)?(o*100).toFixed(n):0)}function k0(e=[0,0,0]){function t(n){return Math.pow(n/255,le.mainTRC)}return le.sRco*t(e[0])+le.sGco*t(e[1])+le.sBco*t(e[2])}const Ls=(e,t,n)=>e*(1-n)+t*n,gm=(e,t=0,n=1)=>Math.min(n,Math.max(t,e)),As=(e,t,n)=>gm((n-e)/(t-e)),S0=(e,t,n,r,i)=>Ls(n,r,As(e,t,i));function M0(e){return{hexcode:Ai(e),hsl:{hue:Math.round(aa(e).h)||0,saturation:Math.round(aa(e).s*100),lightness:Math.round(aa(e).l*100)},okhsl:{hue:Math.round(Sn(e).h)||0,saturation:Math.round(Sn(e).s*100),lightness:Math.round(Sn(e).l*100)}}}const M6=R2();function an(e,t){return+S6(k0(C0(e)),k0(C0(t)))}function C0(e){const t=Ux(e);return[pa(t.r),pa(t.g),pa(t.b)]}function pa(e){return Math.round(gm(e)*255)}const ym=[0,50,100,200,300,400,500,600,700,800,900,950,1e3],yl=[106,0],vl=[0,-107.9];function C6(e){const{baseColor:t,baseTone:n,tone:r,scale:i,useApca:o,fixBase:l,hueShift:u=0,decreaseSaturationRatio:a}=e,s=n??vm(t,i),c=As(i.at(0),i.at(-1),s),f=As(i.at(0),i.at(-1),r),d=Sn(t);return(!l||r!==s)&&(d.h=E6(f,d.h,c,u),a&&(d.s=N6(f,d.s*a,d.s,c)),d.l=T6(f,d,o)),Ai(d)}const E6=(e,t,n=1,r)=>t+r*(n-e),N6=(e,t,n,r)=>e<r?(t-n)/Math.pow(0-r,2)*Math.pow(e-r,2)+n:(t-n)/Math.pow(1-r,2)*Math.pow(e-r,2)+n,T6=(e,t,n=!1)=>{if(!n)return 1-e;const r=e<.5?"black":"white",i=e<.5?Ls(yl[0],yl[1],e):Ls(vl[0],vl[1],e);if(!i)return 1;let o=null,l=110;for(let u=0;u<100;u++){const a=u/100,s=Ai({...t,l:a}),c=an(r,s),f=Math.abs(Math.abs(i)-Math.abs(c));f<l&&(l=f,o=a)}return o};function vm(e,t=ym){const n=an("black",e),r=an("white",e),i=(S0(yl[0],yl[1],t.at(0),t.at(-1),n)+S0(vl[0],vl[1],t.at(0),t.at(-1),r))/2;return t.map(o=>[o,o-i]).reduce((o,l)=>Math.abs(o[1])<Math.abs(l[1])?o:l)[0]}function P6(e){const{baseColor:t,scale:n=ym,useApca:r,fixBase:i,hueShift:o=0,decreaseSaturationRatio:l}=e||{},u=M0(t),a=vm(t,n),s=n.map(c=>{const f=C6({baseColor:u.hexcode,baseTone:a,tone:c,scale:n,useApca:r,fixBase:i,hueShift:o,decreaseSaturationRatio:l}),d=M0(f);return{number:c,...d,delta:M6(u.hexcode,d.hexcode)}});return{input:u,shades:s,closestShade:s.reduce((c,f)=>c.delta<f.delta?c:f)}}const Is=e=>{const{labelText:t,id:n,value:r,onChange:i,...o}=e;return X($6,{children:[t?P(Ii,{htmlFor:n,children:t}):null,P("select",{id:n,value:r,onChange:l=>i==null?void 0:i(l.target.value),...o})]})},$6=A(au,{target:"e1jhkcn90"})(()=>({}),""),z6=e=>{const t=e.palette.shades,[n,r]=F.useState("apca"),[i,o]=F.useState("all"),l=n==="apca"?an:xs,[u,a]=F.useState({col:null,row:null}),s=f=>{if(f.currentTarget){const{col:d,row:m}=f.currentTarget.dataset;a({col:+d,row:+m})}},c=()=>{a({col:null,row:null})};return X(R6,{children:[X(b6,{children:[X(Is,{id:"method",labelText:"Метод расчёта контрастности",value:n,onChange:r,children:[P("option",{value:"apca",children:"APCA"}),P("option",{value:"wcag",children:"WCAG"})]}),X(Is,{id:"level",labelText:"Допустимый уровень контрастности",value:i,onChange:o,children:[P("option",{value:"all",children:"Все уровни"}),P("option",{value:"AA",children:{apca:"60+",wcag:"4.5+ (AA)"}[n]}),P("option",{value:"AAA",children:{apca:"75+",wcag:"7+ (AAA)"}[n]})]})]}),X(A6,{selectedCol:u.col,selectedRow:u.row,children:[P("thead",{children:X("tr",{children:[P("th",{}),t.map(f=>P("th",{children:P(E0,{children:f.number})},f.number))]})}),P("tbody",{onMouseLeave:c,children:t.map((f,d)=>X("tr",{children:[P("th",{children:P(E0,{children:f.number})}),t.map((m,y)=>{const v=l(m.hexcode,f.hexcode),k=n=="apca"?i==="AA"?Math.abs(v)>=60:i==="AAA"?Math.abs(v)>=75:!0:i==="AA"?v>=4.5:i==="AAA"?v>=7:!0;return P("td",{"data-row":d,"data-col":y,onMouseEnter:s,children:k?P(Os,{style:{backgroundColor:f.hexcode,color:m.hexcode},children:v.toFixed(2)}):P(L6,{})},m.number)})]},f.number))})]})]})},R6=A("div",{target:"ebp11lm6"})(()=>({display:"grid",justifyItems:"center",gap:"16px"}),""),b6=A("div",{target:"ebp11lm5"})(()=>({display:"grid",gridTemplateColumns:"repeat(4, 1fr)",gridTemplateRows:"auto",gap:"12px"}),""),E0=A("div",{target:"ebp11lm4"})({name:"1az75j5",styles:"display:grid;height:48px;border-radius:4px;place-items:center;color:#a3a3a3;font-size:14px;font-weight:400"}),xm=A("div",{target:"ebp11lm3"})({name:"n8cht6",styles:"display:grid;height:48px;border-radius:4px;place-items:center;transition:box-shadow .2s ease"}),Os=A(xm,{target:"ebp11lm2"})({name:"ofgjbn",styles:"font-size:14px;font-weight:600"}),L6=A(xm,{target:"ebp11lm1"})({name:"1v6lc2v",styles:"background-image:linear-gradient(-45deg, rgb(0 0 0 / 6%) 26%, rgb(0 0 0 / 3%) 0, rgb(0 0 0 / 3%) 50%, rgb(0 0 0 / 6%) 0, rgb(0 0 0 / 6%) 75%, rgb(0 0 0 / 3%) 0, rgb(0 0 0 / 3%));transition:box-shadow .2s ease"}),A6=A("table",{target:"ebp11lm0"})(({selectedCol:e,selectedRow:t})=>({borderCollapse:"collapse",borderColor:"inherit",textIndent:0,tableLayout:"fixed",width:"1240px","& th, & td":{padding:"3px"},...t!==null&&{[`tbody tr:nth-of-type(${t+1}) td ${Os}`]:{boxShadow:"0 0 0 1px white, 0 0 0 2px rgba(0, 0, 0, 0.5)"}},...e!==null&&{[`tbody tr td:nth-of-type(${e+1}) ${Os}`]:{boxShadow:"0 0 0 1px white, 0 0 0 2px rgba(0, 0, 0, 0.5)"}}}),""),I6=e=>{const{palette:t}=e,[n,r]=F.useState("okhsl"),i=t.shades.map(u=>[u.number,u[n].hue]).slice(1,-1),o=t.shades.map(u=>[u.number,u[n].saturation]).slice(1,-1),l=t.shades.map(u=>[u.number,u[n].lightness]).slice(1,-1);return X(O6,{children:[X(Is,{id:"colorSpace",labelText:"Цветовое пространство",value:n,onChange:r,children:[P("option",{value:"okhsl",children:"OKHSL"}),P("option",{value:"hsl",children:"HSL"})]}),P(ma,{data:i,xMin:0,xMax:1e3,yMin:0,yMax:360}),P(ma,{data:o,xMin:0,xMax:1e3,yMin:0,yMax:100}),P(ma,{data:l,xMin:0,xMax:1e3,yMin:0,yMax:100})]})},O6=A("div",{target:"e93cz3n2"})(({})=>({width:"100%",display:"flex",flexDirection:"column",rowGap:"24px"}),""),ma=A(c6,{target:"e93cz3n1"})({name:"mbouap",styles:"width:480px"}),F6=e=>{const{palette:t}=e,[n,r]=F.useState(!1);return X(H6,{children:[X(j6,{children:[P(U6,{children:P(bs,{id:"highlight",labelText:"Подсветить наиболее близкий тон",checked:n,onChange:r})}),P(B6,{children:t.shades.map(i=>{const o=an("black",i.hexcode),l=an("white",i.hexcode),u=Math.abs(o)>60?"black":Math.abs(l)>60?"white":"#808080";return P(W6,{css:Yv({color:u,backgroundColor:i.hexcode},"",""),"data-highlight":n&&t.closestShade.number===i.number,children:i.number},i.number)})})]}),P(V6,{children:X(X6,{children:[P(T0,{children:N0.map(i=>P(Q6,{children:i.label},i.key))}),t.shades.map(i=>{const o=D6(i);return P(T0,{children:N0.map(l=>P(wm,{children:o[l.key]},`${i.number}:${l.key}`))},i.number)})]})})]})},D6=e=>{const t=xs(e.hexcode,"black"),n=xs(e.hexcode,"white"),r=an("black",e.hexcode),i=an("white",e.hexcode);return{hex:e.hexcode,wcag:`${t.toFixed(2)}/${n.toFixed(2)}`,apca:`${r.toFixed(1)}/${i.toFixed(1)}`,hsl:`${e.hsl.hue} ${e.hsl.saturation} ${e.hsl.lightness}`,okhsl:`${e.okhsl.hue} ${e.okhsl.saturation} ${e.okhsl.lightness}`,deltaE:`${e.delta.toPrecision(4)}`}},N0=[{key:"hex",label:"HEX"},{key:"wcag",label:"WCAG"},{key:"apca",label:"APCA"},{key:"hsl",label:"HSL"},{key:"okhsl",label:"OKHSL"},{key:"deltaE",label:"deltaE"}],H6=A("div",{target:"e3vgg5a10"})(({})=>({display:"grid",gridTemplateColumns:"1fr 2fr",gap:"24px"}),""),j6=A("div",{target:"e3vgg5a9"})({name:"0",styles:""}),B6=A("div",{target:"e3vgg5a8"})(({})=>({display:"flex",flexDirection:"column",boxShadow:"rgba(0, 0, 0, 0.16) 0px 1px 4px;"}),""),U6=A("div",{target:"e3vgg5a7"})(({})=>({height:"64px",display:"flex",alignItems:"center",paddingInline:"16px"}),""),W6=A("div",{target:"e3vgg5a6"})(({})=>({height:"48px",display:"flex",alignItems:"center",paddingInline:"16px","&:first-of-type":{borderTopLeftRadius:"8px",borderTopRightRadius:"8px"},"&:last-of-type":{borderBottomLeftRadius:"8px",borderBottomRightRadius:"8px"},'&[data-highlight="true"]':{zIndex:1,boxShadow:"0 0 0 1px white, 0 0 0 3px black"}}),""),V6=A("div",{target:"e3vgg5a5"})(({})=>({display:"flex",flexDirection:"column"}),""),X6=A("div",{target:"e3vgg5a4"})(({})=>({display:"flex",flexDirection:"column"}),""),T0=A("div",{target:"e3vgg5a3"})(({})=>({display:"flex"}),""),wm=A("div",{target:"e3vgg5a1"})(({})=>({display:"flex",alignItems:"center",height:"48px",paddingInline:"8px",flexGrow:1,flexBasis:0}),""),Q6=A(wm,{target:"e3vgg5a0"})(({})=>({height:"64px"}),""),q6=()=>{const[e,t]=F.useState(Sn("#d03531")),[n,r]=F.useState(!0),[i,o]=F.useState(!1),[l,u]=F.useState(5),[a,s]=F.useState(.75),c=P6({baseColor:Ai(e),fixBase:i,useApca:n,hueShift:l,decreaseSaturationRatio:a});return X(jg,{children:[P(Vx,{}),X(G6,{children:[X(Y6,{children:[P(K6,{children:P(g6,{color:e,onColorChange:t,useApca:n,onUseApcaChange:f=>{r(f),f||o(!1)},fixBase:i,onFixBaseChange:o,hueShift:l,onHueShiftChange:u,decreaseSaturationRatio:a,onDecreaseSaturationRatioChange:s})}),P(Z6,{children:P(I6,{palette:c})}),P(J6,{children:P(F6,{palette:c})}),P(e8,{children:P(z6,{palette:c})})]}),X(t8,{children:["@nikolanalokin ",new Date().getFullYear()]})]})]})},G6=A("div",{target:"e1544z0x7"})(()=>({maxWidth:"100%"}),""),Y6=A("main",{target:"e1544z0x6"})({display:"grid",gridTemplateColumns:"1fr auto",gridTemplateAreas:`
        "settingBar plots"
        "display plots"
        "contrastTable contrastTable"
    `},""),Di=A("section",{target:"e1544z0x5"})({name:"1qkjoqa",styles:"padding:48px"}),K6=A(Di,{target:"e1544z0x4"})({name:"1sbzs14",styles:"grid-area:settingBar;border-block-end:1px solid"}),Z6=A(Di,{target:"e1544z0x3"})({name:"sjnxf7",styles:"grid-area:plots;border-inline-start:1px solid"}),J6=A(Di,{target:"e1544z0x2"})({name:"b87bvv",styles:"grid-area:display"}),e8=A(Di,{target:"e1544z0x1"})({name:"1g0eo9f",styles:"grid-area:contrastTable;border-block-start:1px solid;border-block-end:1px solid"}),t8=A(Di,{target:"e1544z0x0"})({name:"1thxaen",styles:"padding-inline:48px;padding-block:24px;font-size:14px"}),n8=l1(document.getElementById("root"));async function r8(){n8.render(P(F.StrictMode,{children:P(q6,{})}))}r8();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
